{"meta":{"title":"空岛种草莓","subtitle":"the growth of a Internet practitioner","description":null,"author":"徐子超","url":"http://zichao.me"},"pages":[{"title":"","date":"2019-01-29T09:28:41.556Z","updated":"2019-01-29T09:28:41.549Z","comments":true,"path":"about/index.html","permalink":"http://zichao.me/about/index.html","excerpt":"","text":"我 性格开朗，热爱运动，比如骑行、爬山、桌球等活动，也玩游戏娱乐，尤其是打麻将 ~ 2018 - 至今『字节跳动 - 抖音』 ，互娱研发组 2016 - 2018『字节跳动 - 今日头条』 ，头条研发组 2015 - 2016『互联网汽车创业』 ，画大饼半年卒 2014 - 2015『去哪儿旅行』 ，无线酒店事业部 2010 - 2014『华中科技大学』 ，电信系、冰岩作坊 2006 - 2010『巴蜀中学』 ，高中还是该认真学习 1992 - 2006『少数民族自治县』 , 一个快乐的少年"},{"title":"相册","slug":"instagram","date":"2019-01-24T12:51:24.472Z","updated":"2019-01-24T12:14:28.282Z","comments":false,"path":"instagram/index.html","permalink":"http://zichao.me/instagram/index.html","excerpt":"","text":"图片来自instagram，正在加载中…"},{"title":"tags","date":"2018-01-04T16:00:00.000Z","updated":"2019-01-25T07:23:23.588Z","comments":true,"path":"tags/index.html","permalink":"http://zichao.me/tags/index.html","excerpt":"","text":""},{"title":"","date":"2019-01-24T12:51:24.491Z","updated":"2019-01-24T12:14:28.283Z","comments":true,"path":"instagram/ins2.json","permalink":"http://zichao.me/instagram/ins2.json","excerpt":"","text":"{\"pagination\":{},\"meta\":{\"code\":200},\"data\":[{\"attribution\":null,\"tags\":[],\"location\":null,\"comments\":{\"count\":0,\"data\":[]},\"filter\":\"Normal\",\"created_time\":\"1394290738\",\"link\":\"https://instagram.com/p/lSSxd8I7kB/\",\"likes\":{\"count\":0,\"data\":[]},\"images\":{\"low_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xfp1/outbound-distilleryimage11/t0.0-17/OBPTH/a9496b08a6d111e395e20aa496a2d2bb_6.jpg\",\"width\":306,\"height\":306},\"thumbnail\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xfp1/outbound-distilleryimage11/t0.0-17/OBPTH/a9496b08a6d111e395e20aa496a2d2bb_5.jpg\",\"width\":150,\"height\":150},\"standard_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xfp1/outbound-distilleryimage11/t0.0-17/OBPTH/a9496b08a6d111e395e20aa496a2d2bb_8.jpg\",\"width\":640,\"height\":640}},\"users_in_photo\":[],\"caption\":{\"created_time\":\"1394290738\",\"text\":\"今天下雨，的士司机都不肯理我。头上路灯光芒遥不可及，脚下路面棱角冰冷鲜明\",\"from\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"},\"id\":\"671681859937352191\"},\"type\":\"image\",\"id\":\"671681858670672129_438522285\",\"user\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"}},{\"attribution\":null,\"tags\":[],\"location\":null,\"comments\":{\"count\":0,\"data\":[]},\"filter\":\"Normal\",\"created_time\":\"1394040131\",\"link\":\"https://instagram.com/p/lK0xswI7s6/\",\"likes\":{\"count\":1,\"data\":[{\"username\":\"sasanzuo\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_235236445_75sq_1393055700.jpg\",\"id\":\"235236445\",\"full_name\":\"萨桑\"}]},\"images\":{\"low_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xpa1/outbound-distilleryimage4/t0.0-17/OBPTH/26ff9176a48911e3bf7e12aca78890dc_6.jpg\",\"width\":306,\"height\":306},\"thumbnail\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xpa1/outbound-distilleryimage4/t0.0-17/OBPTH/26ff9176a48911e3bf7e12aca78890dc_5.jpg\",\"width\":150,\"height\":150},\"standard_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xpa1/outbound-distilleryimage4/t0.0-17/OBPTH/26ff9176a48911e3bf7e12aca78890dc_8.jpg\",\"width\":640,\"height\":640}},\"users_in_photo\":[],\"caption\":{\"created_time\":\"1394040131\",\"text\":\"起风吧，明天。喜欢偏冷的日子，假如是春天，假如是风大，太完美了\",\"from\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"},\"id\":\"669579608720652783\"},\"type\":\"image\",\"id\":\"669579608343165754_438522285\",\"user\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"}},{\"attribution\":null,\"tags\":[],\"location\":null,\"comments\":{\"count\":0,\"data\":[]},\"filter\":\"Hefe\",\"created_time\":\"1393706362\",\"link\":\"https://instagram.com/p/lA4KaBI7go/\",\"likes\":{\"count\":0,\"data\":[]},\"images\":{\"low_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xpf1/outbound-distilleryimage9/t0.0-17/OBPTH/30cb58b8a18011e396f3121282ee2c71_6.jpg\",\"width\":306,\"height\":306},\"thumbnail\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xpf1/outbound-distilleryimage9/t0.0-17/OBPTH/30cb58b8a18011e396f3121282ee2c71_5.jpg\",\"width\":150,\"height\":150},\"standard_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xpf1/outbound-distilleryimage9/t0.0-17/OBPTH/30cb58b8a18011e396f3121282ee2c71_8.jpg\",\"width\":640,\"height\":640}},\"users_in_photo\":[],\"caption\":{\"created_time\":\"1393706362\",\"text\":\"腾讯的凌晨四点半。第一次在此过夜，听着耳熟不能详的歌，看着平静不微笑的人。然后记起，家里打来被我按掉的电话，忘了回\",\"from\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"},\"id\":\"666779751014447553\"},\"type\":\"image\",\"id\":\"666779750586628136_438522285\",\"user\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"}},{\"attribution\":null,\"tags\":[],\"location\":null,\"comments\":{\"count\":0,\"data\":[]},\"filter\":\"Normal\",\"created_time\":\"1393603959\",\"link\":\"https://instagram.com/p/k902HUI7ms/\",\"likes\":{\"count\":0,\"data\":[]},\"images\":{\"low_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xpa1/t51.2885-15/s320x320/e15/1741772_1426622784247263_147777246_n.jpg\",\"width\":320,\"height\":320},\"thumbnail\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xpa1/t51.2885-15/s150x150/e15/1741772_1426622784247263_147777246_n.jpg\",\"width\":150,\"height\":150},\"standard_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xpa1/t51.2885-15/e15/1741772_1426622784247263_147777246_n.jpg\",\"width\":640,\"height\":640}},\"users_in_photo\":[],\"caption\":{\"created_time\":\"1393603959\",\"text\":\"从前有一座腾讯大厦，里面有一个老程序员，在跟一个小程序员讲故事。讲的什么故事呢？从前有一座腾讯大厦…在这种递归函数的紧密封装中，小程序员喊道:我不听！不要剧透啊！用这种方式，他break了出去！星夜逃奔，敛影潜形。现在我觉得自己似乎是个英雄…虽然这错觉只有一瞬\",\"from\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"},\"id\":\"665920737657469242\"},\"type\":\"image\",\"id\":\"665920737045100972_438522285\",\"user\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"}},{\"attribution\":null,\"tags\":[],\"location\":{\"latitude\":22.571178926,\"longitude\":113.899987696},\"comments\":{\"count\":0,\"data\":[]},\"filter\":\"Hefe\",\"created_time\":\"1393135615\",\"link\":\"https://instagram.com/p/kv3jNgI7sw/\",\"likes\":{\"count\":3,\"data\":[{\"username\":\"wallbase.hd\",\"profile_picture\":\"https://igcdn-photos-g-a.akamaihd.net/hphotos-ak-xpf1/t51.2885-19/10617029_283951291805046_1229690122_a.jpg\",\"id\":\"1489501811\",\"full_name\":\"\"},{\"username\":\"dingstyle\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_30683156_75sq_1333592929.jpg\",\"id\":\"30683156\",\"full_name\":\"Linjie\"},{\"username\":\"sasanzuo\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_235236445_75sq_1393055700.jpg\",\"id\":\"235236445\",\"full_name\":\"萨桑\"}]},\"images\":{\"low_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xap1/t51.2885-15/s320x320/e15/1737225_591794970889160_1849235580_n.jpg\",\"width\":320,\"height\":320},\"thumbnail\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xap1/t51.2885-15/s150x150/e15/1737225_591794970889160_1849235580_n.jpg\",\"width\":150,\"height\":150},\"standard_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xap1/t51.2885-15/e15/1737225_591794970889160_1849235580_n.jpg\",\"width\":640,\"height\":640}},\"users_in_photo\":[],\"caption\":{\"created_time\":\"1393135615\",\"text\":\"“不能吃太胖喔，会被杀掉的！”\",\"from\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"},\"id\":\"661991984237623781\"},\"type\":\"image\",\"id\":\"661991982484405040_438522285\",\"user\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"}},{\"attribution\":null,\"tags\":[],\"location\":{\"latitude\":22.566938333,\"longitude\":113.903916667},\"comments\":{\"count\":0,\"data\":[]},\"filter\":\"Rise\",\"created_time\":\"1393004094\",\"link\":\"https://instagram.com/p/kr8sW8I7nR/\",\"likes\":{\"count\":0,\"data\":[]},\"images\":{\"low_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xaf1/t51.2885-15/s320x320/e15/1741200_451260698337036_577792061_n.jpg\",\"width\":320,\"height\":320},\"thumbnail\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xaf1/t51.2885-15/s150x150/e15/1741200_451260698337036_577792061_n.jpg\",\"width\":150,\"height\":150},\"standard_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xaf1/t51.2885-15/e15/1741200_451260698337036_577792061_n.jpg\",\"width\":640,\"height\":640}},\"users_in_photo\":[],\"caption\":{\"created_time\":\"1393004094\",\"text\":\"今晚，已经看到两个小女生在问，这里有《九云梦》吗？\",\"from\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"},\"id\":\"660888701821500154\"},\"type\":\"image\",\"id\":\"660888701418846673_438522285\",\"user\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"}}]}"},{"title":"","date":"2019-01-24T12:51:24.490Z","updated":"2019-01-24T12:14:28.282Z","comments":true,"path":"instagram/ins1.json","permalink":"http://zichao.me/instagram/ins1.json","excerpt":"","text":"{\"pagination\":{\"next_url\":\"https://api.instagram.com/v1/users/438522285/media/recent?count=100&callback=jQuery19008141340191941708_1433432491285&client_id=956dd096b6e5496aba6662165b9b8443&max_id=762309207182785278_438522285&_=1433432491286\",\"next_max_id\":\"762309207182785278_438522285\"},\"meta\":{\"code\":200},\"data\":[{\"attribution\":null,\"tags\":[],\"location\":null,\"comments\":{\"count\":1,\"data\":[{\"created_time\":\"1411210501\",\"text\":\"hi~\",\"from\":{\"username\":\"hawaiiboyzshelwin\",\"profile_picture\":\"https://igcdn-photos-h-a.akamaihd.net/hphotos-ak-xap1/t51.2885-19/10948635_702403553211063_1668445983_a.jpg\",\"id\":\"293705161\",\"full_name\":\"Hawaii\"},\"id\":\"813615113719495343\"}]},\"filter\":\"Mayfair\",\"created_time\":\"1411177261\",\"link\":\"https://instagram.com/p/tJjQlAo7kH/\",\"likes\":{\"count\":1,\"data\":[{\"username\":\"zheng_ji\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/anonymousUser.jpg\",\"id\":\"1176976812\",\"full_name\":\"\"}]},\"images\":{\"low_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xap1/t51.2885-15/s320x320/e15/925287_1464119273867077_427071626_n.jpg\",\"width\":320,\"height\":320},\"thumbnail\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xap1/t51.2885-15/s150x150/e15/925287_1464119273867077_427071626_n.jpg\",\"width\":150,\"height\":150},\"standard_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xap1/t51.2885-15/e15/925287_1464119273867077_427071626_n.jpg\",\"width\":640,\"height\":640}},\"users_in_photo\":[],\"caption\":{\"created_time\":\"1411177261\",\"text\":\"沉眠的店主失眠的狗。想起大学的最后时光，宿舍24小时都有人醒着，自由的人生，自由的酒和曲终人散，大家通常没有另一半，没有钱，没有忧愁，爽成狗\",\"from\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"},\"id\":\"813336279132649576\"},\"type\":\"image\",\"id\":\"813336278595778823_438522285\",\"user\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"}},{\"attribution\":null,\"tags\":[],\"location\":null,\"comments\":{\"count\":0,\"data\":[]},\"filter\":\"Hefe\",\"created_time\":\"1410970444\",\"link\":\"https://instagram.com/p/tDYyUeo7oX/\",\"likes\":{\"count\":1,\"data\":[{\"username\":\"sasanzuo\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_235236445_75sq_1393055700.jpg\",\"id\":\"235236445\",\"full_name\":\"萨桑\"}]},\"images\":{\"low_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xap1/t51.2885-15/s320x320/e15/925284_1534308033454310_855505111_n.jpg\",\"width\":320,\"height\":320},\"thumbnail\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xap1/t51.2885-15/s150x150/e15/925284_1534308033454310_855505111_n.jpg\",\"width\":150,\"height\":150},\"standard_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xap1/t51.2885-15/e15/925284_1534308033454310_855505111_n.jpg\",\"width\":640,\"height\":640}},\"users_in_photo\":[],\"caption\":{\"created_time\":\"1410970444\",\"text\":\"如果他是程序员…\\nvar date = lifetime;\\rif(rotate(mountain, water, stupa)){ /*return nextLifetime;*/ return meetyou(journey);\\r}\",\"from\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"},\"id\":\"811601369455900672\"},\"type\":\"image\",\"id\":\"811601368935807511_438522285\",\"user\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"}},{\"attribution\":null,\"tags\":[],\"location\":null,\"comments\":{\"count\":0,\"data\":[]},\"filter\":\"Normal\",\"created_time\":\"1410924584\",\"link\":\"https://instagram.com/p/tCBULHo7sW/\",\"likes\":{\"count\":0,\"data\":[]},\"images\":{\"low_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xfp1/t51.2885-15/s320x320/e15/10666267_1550871771803214_2074300649_n.jpg\",\"width\":320,\"height\":320},\"thumbnail\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xfp1/t51.2885-15/s150x150/e15/10666267_1550871771803214_2074300649_n.jpg\",\"width\":150,\"height\":150},\"standard_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xfp1/t51.2885-15/e15/10666267_1550871771803214_2074300649_n.jpg\",\"width\":640,\"height\":640}},\"users_in_photo\":[],\"caption\":{\"created_time\":\"1410924584\",\"text\":\"听着山寨的民谣电子乐，看着美好的姑娘。功德无量。\",\"from\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"},\"id\":\"811216667700083459\"},\"type\":\"image\",\"id\":\"811216667255487254_438522285\",\"user\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"}},{\"attribution\":null,\"tags\":[],\"location\":null,\"comments\":{\"count\":1,\"data\":[{\"created_time\":\"1411008352\",\"text\":\"每天都让坐在电脑前的我相信生活\",\"from\":{\"username\":\"zheng_ji\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/anonymousUser.jpg\",\"id\":\"1176976812\",\"full_name\":\"\"},\"id\":\"811919369774020696\"}]},\"filter\":\"Mayfair\",\"created_time\":\"1410923563\",\"link\":\"https://instagram.com/p/tB_Xmao7qG/\",\"likes\":{\"count\":1,\"data\":[{\"username\":\"sasanzuo\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_235236445_75sq_1393055700.jpg\",\"id\":\"235236445\",\"full_name\":\"萨桑\"}]},\"images\":{\"low_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xpa1/t51.2885-15/s320x320/e15/10693244_734401199942901_1572709880_n.jpg\",\"width\":320,\"height\":320},\"thumbnail\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xpa1/t51.2885-15/s150x150/e15/10693244_734401199942901_1572709880_n.jpg\",\"width\":150,\"height\":150},\"standard_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xpa1/t51.2885-15/e15/10693244_734401199942901_1572709880_n.jpg\",\"width\":640,\"height\":640}},\"users_in_photo\":[],\"caption\":{\"created_time\":\"1410923563\",\"text\":\"弥里塘太宁静。在这我一直想起每一个被深圳车水马龙声吵醒的早晨，真是光辉的岁月\",\"from\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"},\"id\":\"811208107217893670\"},\"type\":\"image\",\"id\":\"811208106630691462_438522285\",\"user\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"}},{\"attribution\":null,\"tags\":[],\"location\":null,\"comments\":{\"count\":2,\"data\":[{\"created_time\":\"1410794550\",\"text\":\"高原反应严重吗？P.S. 阿腾你啥时候回来？\",\"from\":{\"username\":\"winiex\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_45182020_75sq_1380706182.jpg\",\"id\":\"45182020\",\"full_name\":\"winiex nie\"},\"id\":\"810125861157321531\"},{\"created_time\":\"1410923814\",\"text\":\"@winiex 哈哈，没什么反应只要我不乱跑动。很快回来了\",\"from\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"},\"id\":\"811210206056004013\"}]},\"filter\":\"Normal\",\"created_time\":\"1410737336\",\"link\":\"https://instagram.com/p/s8cKzLI7pM/\",\"likes\":{\"count\":0,\"data\":[]},\"images\":{\"low_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xfp1/t51.2885-15/s320x320/e15/10693771_1517437541834868_665867908_n.jpg\",\"width\":320,\"height\":320},\"thumbnail\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xfp1/t51.2885-15/s150x150/e15/10693771_1517437541834868_665867908_n.jpg\",\"width\":150,\"height\":150},\"standard_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xfp1/t51.2885-15/e15/10693771_1517437541834868_665867908_n.jpg\",\"width\":640,\"height\":640}},\"users_in_photo\":[],\"caption\":{\"created_time\":\"1410737336\",\"text\":\"进藏。天空挂满着云，黑的白的都有。云朵转眼飘散，它却依然是蓝色。\",\"from\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"},\"id\":\"809645920867301928\"},\"type\":\"image\",\"id\":\"809645920464648780_438522285\",\"user\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"}},{\"attribution\":null,\"videos\":{\"low_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xpa1/t50.2886-16/10701710_281586128699201_335902712_a.mp4\",\"width\":480,\"height\":480},\"low_bandwidth\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xap1/t50.2886-16/10701471_605249519584920_450596792_s.mp4\",\"width\":480,\"height\":480},\"standard_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xaf1/t50.2886-16/10701900_770932669629703_1501695708_n.mp4\",\"width\":640,\"height\":640}},\"tags\":[],\"location\":null,\"comments\":{\"count\":0,\"data\":[]},\"filter\":\"Stinson\",\"created_time\":\"1410688270\",\"link\":\"https://instagram.com/p/s6-lOFo7ip/\",\"likes\":{\"count\":1,\"data\":[{\"username\":\"zheng_ji\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/anonymousUser.jpg\",\"id\":\"1176976812\",\"full_name\":\"\"}]},\"images\":{\"low_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xta1/t51.2885-15/s320x320/e15/10693822_497709657032441_1125408654_n.jpg\",\"width\":320,\"height\":320},\"thumbnail\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xta1/t51.2885-15/s150x150/e15/10693822_497709657032441_1125408654_n.jpg\",\"width\":150,\"height\":150},\"standard_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xta1/t51.2885-15/e15/10693822_497709657032441_1125408654_n.jpg\",\"width\":640,\"height\":640}},\"users_in_photo\":[],\"caption\":{\"created_time\":\"1410688270\",\"text\":\"“音浪太强不晃会被撞到地上…”\",\"from\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"},\"id\":\"809234320184293724\"},\"type\":\"video\",\"id\":\"809234319697754281_438522285\",\"user\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"}},{\"attribution\":null,\"tags\":[],\"location\":null,\"comments\":{\"count\":0,\"data\":[]},\"filter\":\"Normal\",\"created_time\":\"1410625333\",\"link\":\"https://instagram.com/p/s5GifkI7q7/\",\"likes\":{\"count\":0,\"data\":[]},\"images\":{\"low_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xpf1/t51.2885-15/s320x320/e15/10683941_796597910390683_12441123_n.jpg\",\"width\":320,\"height\":320},\"thumbnail\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xpf1/t51.2885-15/s150x150/e15/10683941_796597910390683_12441123_n.jpg\",\"width\":150,\"height\":150},\"standard_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xpf1/t51.2885-15/e15/10683941_796597910390683_12441123_n.jpg\",\"width\":640,\"height\":640}},\"users_in_photo\":[],\"caption\":{\"created_time\":\"1410625333\",\"text\":\"陌生的朋友，愿下次再能与你们相聚在丽江love wine & half。我无法融解你悲观现实的想法，你也无法说服我旅行并不是逃避。但这都很有意思。只是想起以前有个人叫我不能喝太多的酒，一想到这个呀我就越喝越多\",\"from\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"},\"id\":\"808706367646054518\"},\"type\":\"image\",\"id\":\"808706366723308219_438522285\",\"user\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"}},{\"attribution\":null,\"videos\":{\"low_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xfp1/t50.2886-16/10701691_550252955102921_1153150516_a.mp4\",\"width\":480,\"height\":480},\"low_bandwidth\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xap1/l/t50.2886-16/10705857_251763575033861_1402444343_s.mp4\",\"width\":480,\"height\":480},\"standard_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xap1/t50.2886-16/10701411_275533589303527_2032117818_n.mp4\",\"width\":640,\"height\":640}},\"tags\":[],\"location\":null,\"comments\":{\"count\":2,\"data\":[{\"created_time\":\"1410668529\",\"text\":\"哇，good,你请假去旅游的吗\",\"from\":{\"username\":\"zheng_ji\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/anonymousUser.jpg\",\"id\":\"1176976812\",\"full_name\":\"\"},\"id\":\"809068726839392635\"},{\"created_time\":\"1410706116\",\"text\":\"@zheng_ji 是呀，放松下\",\"from\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"},\"id\":\"809384027007203495\"}]},\"filter\":\"Normal\",\"created_time\":\"1410579121\",\"link\":\"https://instagram.com/p/s3uZcmo7uj/\",\"likes\":{\"count\":0,\"data\":[]},\"images\":{\"low_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xap1/t51.2885-15/s320x320/e15/10661142_164227523747936_1526737465_n.jpg\",\"width\":320,\"height\":320},\"thumbnail\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xap1/t51.2885-15/s150x150/e15/10661142_164227523747936_1526737465_n.jpg\",\"width\":150,\"height\":150},\"standard_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xap1/t51.2885-15/e15/10661142_164227523747936_1526737465_n.jpg\",\"width\":640,\"height\":640}},\"users_in_photo\":[],\"caption\":{\"created_time\":\"1410579121\",\"text\":\"玉龙雪山\",\"from\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"},\"id\":\"808318717479074388\"},\"type\":\"video\",\"id\":\"808318716975758243_438522285\",\"user\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"}},{\"attribution\":null,\"tags\":[],\"location\":null,\"comments\":{\"count\":2,\"data\":[{\"created_time\":\"1410629707\",\"text\":\"去束河了吗\",\"from\":{\"username\":\"sasanzuo\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_235236445_75sq_1393055700.jpg\",\"id\":\"235236445\",\"full_name\":\"萨桑\"},\"id\":\"808743058343704606\"},{\"created_time\":\"1410706038\",\"text\":\"@sasanzuo 去了，丽江最喜欢束河\",\"from\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"},\"id\":\"809383369692657787\"}]},\"filter\":\"Normal\",\"created_time\":\"1410535625\",\"link\":\"https://instagram.com/p/s2bb5io7p-/\",\"likes\":{\"count\":0,\"data\":[]},\"images\":{\"low_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xfa1/t51.2885-15/s320x320/e15/10661182_550889531706942_2043749716_n.jpg\",\"width\":320,\"height\":320},\"thumbnail\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xfa1/t51.2885-15/s150x150/e15/10661182_550889531706942_2043749716_n.jpg\",\"width\":150,\"height\":150},\"standard_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xfa1/t51.2885-15/e15/10661182_550889531706942_2043749716_n.jpg\",\"width\":640,\"height\":640}},\"users_in_photo\":[],\"caption\":{\"created_time\":\"1410535625\",\"text\":\"以前想去丽江，但去过的人都灌输着你也许会失望的观念，因而甚至不敢动身。这是一种“怕”。有时候真得自己去看看才会了然。第一天在丽江，民谣吉他缓缓流过商业化的街道，原来没有惊喜，也没有失望，一切刚刚好。\",\"from\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"},\"id\":\"807953848229673047\"},\"type\":\"image\",\"id\":\"807953847625693822_438522285\",\"user\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"}},{\"attribution\":null,\"videos\":{\"low_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xap1/t50.2886-16/10687579_864566316888364_601110692_a.mp4\",\"width\":480,\"height\":480},\"low_bandwidth\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xap1/t50.2886-16/10705731_491458530957700_895623007_s.mp4\",\"width\":480,\"height\":480},\"standard_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xpa1/t50.2886-16/10701554_631893030261190_220785276_n.mp4\",\"width\":640,\"height\":640}},\"tags\":[],\"location\":null,\"comments\":{\"count\":0,\"data\":[]},\"filter\":\"Maven\",\"created_time\":\"1410529596\",\"link\":\"https://instagram.com/p/s2P72tI7o6/\",\"likes\":{\"count\":2,\"data\":[{\"username\":\"winiex\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_45182020_75sq_1380706182.jpg\",\"id\":\"45182020\",\"full_name\":\"winiex nie\"},{\"username\":\"sasanzuo\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_235236445_75sq_1393055700.jpg\",\"id\":\"235236445\",\"full_name\":\"萨桑\"}]},\"images\":{\"low_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xfp1/t51.2885-15/s320x320/e15/10520334_1523531751215211_1344090061_n.jpg\",\"width\":320,\"height\":320},\"thumbnail\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xfp1/t51.2885-15/s150x150/e15/10520334_1523531751215211_1344090061_n.jpg\",\"width\":150,\"height\":150},\"standard_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xfp1/t51.2885-15/e15/10520334_1523531751215211_1344090061_n.jpg\",\"width\":640,\"height\":640}},\"users_in_photo\":[],\"caption\":{\"created_time\":\"1410529596\",\"text\":\"我注定要回到老路上\",\"from\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"},\"id\":\"807903268480203532\"},\"type\":\"video\",\"id\":\"807903267045751354_438522285\",\"user\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"}},{\"attribution\":null,\"tags\":[],\"location\":null,\"comments\":{\"count\":5,\"data\":[{\"created_time\":\"1410529334\",\"text\":\"终于发现了阿腾的 Instagram:)\",\"from\":{\"username\":\"winiex\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_45182020_75sq_1380706182.jpg\",\"id\":\"45182020\",\"full_name\":\"winiex nie\"},\"id\":\"807901070295808629\"},{\"created_time\":\"1410534900\",\"text\":\"@winiex 哈哈，说实话…微博和微信加了很多同事，总感觉不自在，就用ins比较多了\",\"from\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"},\"id\":\"807947760767842994\"},{\"created_time\":\"1410537411\",\"text\":\"@litten225 是说前段时间忽然想起来上老没看到你动静呢;)。可能公司大了，朋友都如牛排，七分熟最佳:)。\",\"from\":{\"username\":\"winiex\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_45182020_75sq_1380706182.jpg\",\"id\":\"45182020\",\"full_name\":\"winiex nie\"},\"id\":\"807968828790388817\"},{\"created_time\":\"1410537434\",\"text\":\"微博上，typo 啦\",\"from\":{\"username\":\"winiex\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_45182020_75sq_1380706182.jpg\",\"id\":\"45182020\",\"full_name\":\"winiex nie\"},\"id\":\"807969017861224538\"},{\"created_time\":\"1410571556\",\"text\":\"@winiex 是啊，跟同学可以一起吐槽老师和教学，真实的想法无需顾虑。但是跟同事一起吐槽老大和工作，又是另外一回事了\",\"from\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"},\"id\":\"808255256711641620\"}]},\"filter\":\"Normal\",\"created_time\":\"1410523991\",\"link\":\"https://instagram.com/p/s2FPpGI7o_/\",\"likes\":{\"count\":0,\"data\":[]},\"images\":{\"low_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xta1/t51.2885-15/s320x320/e15/10693390_547748238660649_761529890_n.jpg\",\"width\":320,\"height\":320},\"thumbnail\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xta1/t51.2885-15/s150x150/e15/10693390_547748238660649_761529890_n.jpg\",\"width\":150,\"height\":150},\"standard_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xta1/t51.2885-15/e15/10693390_547748238660649_761529890_n.jpg\",\"width\":640,\"height\":640}},\"users_in_photo\":[],\"caption\":{\"created_time\":\"1410523991\",\"text\":\"彩云之南\",\"from\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"},\"id\":\"807856248839190621\"},\"type\":\"image\",\"id\":\"807856248310708799_438522285\",\"user\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"}},{\"attribution\":null,\"tags\":[],\"location\":null,\"comments\":{\"count\":0,\"data\":[]},\"filter\":\"Normal\",\"created_time\":\"1410493579\",\"link\":\"https://instagram.com/p/s1LPQPo7v8/\",\"likes\":{\"count\":1,\"data\":[{\"username\":\"wallbase.hd\",\"profile_picture\":\"https://igcdn-photos-g-a.akamaihd.net/hphotos-ak-xpf1/t51.2885-19/10617029_283951291805046_1229690122_a.jpg\",\"id\":\"1489501811\",\"full_name\":\"\"}]},\"images\":{\"low_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xaf1/t51.2885-15/s320x320/e15/10693650_837768039589771_1793184733_n.jpg\",\"width\":320,\"height\":320},\"thumbnail\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xaf1/t51.2885-15/s150x150/e15/10693650_837768039589771_1793184733_n.jpg\",\"width\":150,\"height\":150},\"standard_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xaf1/t51.2885-15/e15/10693650_837768039589771_1793184733_n.jpg\",\"width\":640,\"height\":640}},\"users_in_photo\":[],\"caption\":{\"created_time\":\"1410493579\",\"text\":\"云南，向往已久的地方\",\"from\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"},\"id\":\"807601135591602253\"},\"type\":\"image\",\"id\":\"807601134928903164_438522285\",\"user\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"}},{\"attribution\":null,\"tags\":[],\"location\":null,\"comments\":{\"count\":0,\"data\":[]},\"filter\":\"Lo-fi\",\"created_time\":\"1410433815\",\"link\":\"https://instagram.com/p/szZP5Io7lY/\",\"likes\":{\"count\":2,\"data\":[{\"username\":\"wallbase.hd\",\"profile_picture\":\"https://igcdn-photos-g-a.akamaihd.net/hphotos-ak-xpf1/t51.2885-19/10617029_283951291805046_1229690122_a.jpg\",\"id\":\"1489501811\",\"full_name\":\"\"},{\"username\":\"sasanzuo\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_235236445_75sq_1393055700.jpg\",\"id\":\"235236445\",\"full_name\":\"萨桑\"}]},\"images\":{\"low_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xft1/t51.2885-15/s320x320/e15/914812_1529561143923493_1662159287_n.jpg\",\"width\":320,\"height\":320},\"thumbnail\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xft1/t51.2885-15/s150x150/e15/914812_1529561143923493_1662159287_n.jpg\",\"width\":150,\"height\":150},\"standard_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xft1/t51.2885-15/e15/914812_1529561143923493_1662159287_n.jpg\",\"width\":640,\"height\":640}},\"users_in_photo\":[],\"caption\":{\"created_time\":\"1410433815\",\"text\":\"QQ同时在线人数破2亿纪念，作为一颗小小螺丝钉，名字正好镶到企鹅的大嘴巴上。这时觉得有一丝光荣，一种努力被实化的错觉；然后又有点不舒服，感觉此时的自己，和名字身边的人一样。可我想要的就是不一样。\",\"from\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"},\"id\":\"807099801993984938\"},\"type\":\"image\",\"id\":\"807099801532610904_438522285\",\"user\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"}},{\"attribution\":null,\"tags\":[],\"location\":null,\"comments\":{\"count\":1,\"data\":[{\"created_time\":\"1410373253\",\"text\":\"一起玩INS@gggiselle3333\",\"from\":{\"username\":\"yokiaee\",\"profile_picture\":\"https://igcdn-photos-h-a.akamaihd.net/hphotos-ak-xfa1/t51.2885-19/10598222_301874203326431_1095562300_a.jpg\",\"id\":\"1450755432\",\"full_name\":\"糖宝\"},\"id\":\"806591765504309560\"}]},\"filter\":\"Sierra\",\"created_time\":\"1410184482\",\"link\":\"https://instagram.com/p/sr9rtNo7lM/\",\"likes\":{\"count\":2,\"data\":[{\"username\":\"zheng_ji\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/anonymousUser.jpg\",\"id\":\"1176976812\",\"full_name\":\"\"},{\"username\":\"fiona2523\",\"profile_picture\":\"https://igcdn-photos-a-a.akamaihd.net/hphotos-ak-xaf1/t51.2885-19/11350911_404317656438368_954826284_a.jpg\",\"id\":\"465984487\",\"full_name\":\"🌸Fiona🌸\"}]},\"images\":{\"low_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xfp1/t51.2885-15/s320x320/e15/10644019_368509079979549_2085033896_n.jpg\",\"width\":320,\"height\":320},\"thumbnail\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xfp1/t51.2885-15/s150x150/e15/10644019_368509079979549_2085033896_n.jpg\",\"width\":150,\"height\":150},\"standard_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xfp1/t51.2885-15/e15/10644019_368509079979549_2085033896_n.jpg\",\"width\":640,\"height\":640}},\"users_in_photo\":[],\"caption\":{\"created_time\":\"1410184482\",\"text\":\"陪伴一定得是件漫长的事呵。和奶奶在一起的中秋节。\",\"from\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"},\"id\":\"805008243199032014\"},\"type\":\"image\",\"id\":\"805008242737658188_438522285\",\"user\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"}},{\"attribution\":null,\"videos\":{\"low_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xpf1/t50.2886-16/10687823_350153388474464_1223789041_a.mp4\",\"width\":480,\"height\":480},\"low_bandwidth\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xaf1/t50.2886-16/10701732_344063979085756_1879637417_s.mp4\",\"width\":480,\"height\":480},\"standard_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xap1/t50.2886-16/10688739_629114507205181_1066132726_n.mp4\",\"width\":640,\"height\":640}},\"tags\":[],\"location\":null,\"comments\":{\"count\":0,\"data\":[]},\"filter\":\"Maven\",\"created_time\":\"1410183340\",\"link\":\"https://instagram.com/p/sr7gXKI7h_/\",\"likes\":{\"count\":0,\"data\":[]},\"images\":{\"low_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xap1/t51.2885-15/s320x320/e15/10684161_918887498139099_2081383304_n.jpg\",\"width\":320,\"height\":320},\"thumbnail\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xap1/t51.2885-15/s150x150/e15/10684161_918887498139099_2081383304_n.jpg\",\"width\":150,\"height\":150},\"standard_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xap1/t51.2885-15/e15/10684161_918887498139099_2081383304_n.jpg\",\"width\":640,\"height\":640}},\"users_in_photo\":[],\"caption\":{\"created_time\":\"1410183340\",\"text\":\"中秋和家人一起去看孔明灯，热闹而安逸，这是小城市的美好。\",\"from\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"},\"id\":\"804998667946932332\"},\"type\":\"video\",\"id\":\"804998667049351295_438522285\",\"user\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"}},{\"attribution\":null,\"tags\":[],\"location\":null,\"comments\":{\"count\":2,\"data\":[{\"created_time\":\"1410239540\",\"text\":\"说的我也动容了\",\"from\":{\"username\":\"zheng_ji\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/anonymousUser.jpg\",\"id\":\"1176976812\",\"full_name\":\"\"},\"id\":\"805470101433465439\"},{\"created_time\":\"1410359659\",\"text\":\"@zheng_ji 一切好神奇，就是走到那，发现她还在\",\"from\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"},\"id\":\"806477733090801988\"}]},\"filter\":\"Unknown\",\"created_time\":\"1410155775\",\"link\":\"https://instagram.com/p/srG7fjo7sV/\",\"likes\":{\"count\":0,\"data\":[]},\"images\":{\"low_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xtp1/t51.2885-15/s320x320/e15/10683828_327931784041264_894089329_n.jpg\",\"width\":320,\"height\":320},\"thumbnail\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xtp1/t51.2885-15/s150x150/e15/10683828_327931784041264_894089329_n.jpg\",\"width\":150,\"height\":150},\"standard_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xtp1/t51.2885-15/e15/10683828_327931784041264_894089329_n.jpg\",\"width\":640,\"height\":640}},\"users_in_photo\":[],\"caption\":{\"created_time\":\"1410155775\",\"text\":\"老家的葡萄藤，从我初中时就挂在这，再见已是十一年\",\"from\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"},\"id\":\"804767435447318654\"},\"type\":\"image\",\"id\":\"804767435027888917_438522285\",\"user\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"}},{\"attribution\":null,\"tags\":[],\"location\":null,\"comments\":{\"count\":0,\"data\":[]},\"filter\":\"Normal\",\"created_time\":\"1410085359\",\"link\":\"https://instagram.com/p/spAnrio7oh/\",\"likes\":{\"count\":0,\"data\":[]},\"images\":{\"low_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xfa1/t51.2885-15/s320x320/e15/10666028_872988212713750_1345360858_n.jpg\",\"width\":320,\"height\":320},\"thumbnail\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xfa1/t51.2885-15/s150x150/e15/10666028_872988212713750_1345360858_n.jpg\",\"width\":150,\"height\":150},\"standard_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xfa1/t51.2885-15/e15/10666028_872988212713750_1345360858_n.jpg\",\"width\":640,\"height\":640}},\"users_in_photo\":[],\"caption\":{\"created_time\":\"1410085359\",\"text\":\"家里橄榄熟了，盐渍，暴晒，蘸蜜，简直人间美味!\",\"from\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"},\"id\":\"804176735760529648\"},\"type\":\"image\",\"id\":\"804176735273990689_438522285\",\"user\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"}},{\"attribution\":null,\"tags\":[],\"location\":null,\"comments\":{\"count\":2,\"data\":[{\"created_time\":\"1409914668\",\"text\":\"中秋祝好\",\"from\":{\"username\":\"zheng_ji\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/anonymousUser.jpg\",\"id\":\"1176976812\",\"full_name\":\"\"},\"id\":\"802744876627376939\"},{\"created_time\":\"1410085406\",\"text\":\"@zheng_ji 中秋节快乐\",\"from\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"},\"id\":\"804177137474189571\"}]},\"filter\":\"Lo-fi\",\"created_time\":\"1409913076\",\"link\":\"https://instagram.com/p/sj4BGgI7t_/\",\"likes\":{\"count\":0,\"data\":[]},\"images\":{\"low_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xap1/t51.2885-15/s320x320/e15/10665501_1452353738387652_2075798065_n.jpg\",\"width\":320,\"height\":320},\"thumbnail\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xap1/t51.2885-15/s150x150/e15/10665501_1452353738387652_2075798065_n.jpg\",\"width\":150,\"height\":150},\"standard_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xap1/t51.2885-15/e15/10665501_1452353738387652_2075798065_n.jpg\",\"width\":640,\"height\":640}},\"users_in_photo\":[],\"caption\":{\"created_time\":\"1409913076\",\"text\":\"在一场太阳雨里回到家中\",\"from\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"},\"id\":\"802731525369215150\"},\"type\":\"image\",\"id\":\"802731524907842431_438522285\",\"user\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"}},{\"attribution\":null,\"tags\":[],\"location\":null,\"comments\":{\"count\":5,\"data\":[{\"created_time\":\"1409495738\",\"text\":\"天天在被服务器虐没个人时间了\",\"from\":{\"username\":\"zheng_ji\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/anonymousUser.jpg\",\"id\":\"1176976812\",\"full_name\":\"\"},\"id\":\"799230636918553169\"},{\"created_time\":\"1409537231\",\"text\":\"你去听听野孩子，张玮玮郭龙的白银饭店和我等着你回来，看看是否喜欢这种风格。\",\"from\":{\"username\":\"sasanzuo\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_235236445_75sq_1393055700.jpg\",\"id\":\"235236445\",\"full_name\":\"萨桑\"},\"id\":\"799578708500527379\"},{\"created_time\":\"1409913295\",\"text\":\"@sasanzuo 我听民谣比较多，李志张玮玮一直很喜欢呐，野孩子就听得很少\",\"from\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"},\"id\":\"802733361660672253\"},{\"created_time\":\"1409913403\",\"text\":\"@zheng_ji 这么惨？赶紧驯服它！一切磨人的服务器都是纸老虎！\",\"from\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"},\"id\":\"802734270063032609\"},{\"created_time\":\"1409917831\",\"text\":\"@litten225 啊那有话聊，他们都是我很好的朋友\",\"from\":{\"username\":\"sasanzuo\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_235236445_75sq_1393055700.jpg\",\"id\":\"235236445\",\"full_name\":\"萨桑\"},\"id\":\"802771409702206463\"}]},\"filter\":\"Unknown\",\"created_time\":\"1409495189\",\"link\":\"https://instagram.com/p/sXa9g6I7jB/\",\"likes\":{\"count\":0,\"data\":[]},\"images\":{\"low_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xfa1/t51.2885-15/s320x320/e15/10654876_610857929023752_364709543_n.jpg\",\"width\":320,\"height\":320},\"thumbnail\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xfa1/t51.2885-15/s150x150/e15/10654876_610857929023752_364709543_n.jpg\",\"width\":150,\"height\":150},\"standard_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xfa1/t51.2885-15/e15/10654876_610857929023752_364709543_n.jpg\",\"width\":640,\"height\":640}},\"users_in_photo\":[],\"caption\":{\"created_time\":\"1409495189\",\"text\":\"在书店的晚上终于把新专反复听完。太柔了…打一星两星的人肯定是真爱粉，这点有人敢怀疑？我不是，打四星！停不下来，直到书店响起:深圳即将入眠。但22点还是深圳的早晨呀\",\"from\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"},\"id\":\"799226037537061117\"},\"type\":\"image\",\"id\":\"799226035314079937_438522285\",\"user\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"}},{\"attribution\":null,\"videos\":{\"low_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xap1/t50.2886-16/10619367_685656154851110_766778884_a.mp4\",\"width\":480,\"height\":480},\"low_bandwidth\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xpa1/t50.2886-16/10655768_594287900680172_2084417441_s.mp4\",\"width\":480,\"height\":480},\"standard_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xpa1/t50.2886-16/10648015_1491243041113750_339844084_n.mp4\",\"width\":640,\"height\":640}},\"tags\":[],\"location\":null,\"comments\":{\"count\":2,\"data\":[{\"created_time\":\"1409238867\",\"text\":\"啊鼓手是我好朋友\",\"from\":{\"username\":\"sasanzuo\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_235236445_75sq_1393055700.jpg\",\"id\":\"235236445\",\"full_name\":\"萨桑\"},\"id\":\"797075846717487722\"},{\"created_time\":\"1409495262\",\"text\":\"@sasanzuo 真好！你有这样的朋友\",\"from\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"},\"id\":\"799226645367208237\"}]},\"filter\":\"Stinson\",\"created_time\":\"1409236676\",\"link\":\"https://instagram.com/p/sPt4u4I7kA/\",\"likes\":{\"count\":0,\"data\":[]},\"images\":{\"low_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xaf1/t51.2885-15/s320x320/e15/10644013_777642448965989_544517718_n.jpg\",\"width\":320,\"height\":320},\"thumbnail\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xaf1/t51.2885-15/s150x150/e15/10644013_777642448965989_544517718_n.jpg\",\"width\":150,\"height\":150},\"standard_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xaf1/t51.2885-15/e15/10644013_777642448965989_544517718_n.jpg\",\"width\":640,\"height\":640}},\"users_in_photo\":[],\"caption\":{\"created_time\":\"1409236676\",\"text\":\"慢三的华尔兹，大篇幅的爵士即兴。感觉生活得太浮躁。也太安逸。\",\"from\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"},\"id\":\"797057470305646918\"},\"type\":\"video\",\"id\":\"797057469785553152_438522285\",\"user\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"}},{\"attribution\":null,\"tags\":[],\"location\":null,\"comments\":{\"count\":0,\"data\":[]},\"filter\":\"Lo-fi\",\"created_time\":\"1408804690\",\"link\":\"https://instagram.com/p/sC18G0o7qb/\",\"likes\":{\"count\":0,\"data\":[]},\"images\":{\"low_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xtf1/t51.2885-15/s320x320/e15/924456_1471485796442896_1699836323_n.jpg\",\"width\":320,\"height\":320},\"thumbnail\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xtf1/t51.2885-15/s150x150/e15/924456_1471485796442896_1699836323_n.jpg\",\"width\":150,\"height\":150},\"standard_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xtf1/t51.2885-15/e15/924456_1471485796442896_1699836323_n.jpg\",\"width\":640,\"height\":640}},\"users_in_photo\":[],\"caption\":{\"created_time\":\"1408804690\",\"text\":\"好久没看话剧，这部果然没让人失望。导演太会讲故事了，1024个赞\",\"from\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"},\"id\":\"793433712932141876\"},\"type\":\"image\",\"id\":\"793433711329917595_438522285\",\"user\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"}},{\"attribution\":null,\"tags\":[],\"location\":null,\"comments\":{\"count\":0,\"data\":[]},\"filter\":\"Hefe\",\"created_time\":\"1408715905\",\"link\":\"https://instagram.com/p/sAMmEWI7oC/\",\"likes\":{\"count\":1,\"data\":[{\"username\":\"sasanzuo\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_235236445_75sq_1393055700.jpg\",\"id\":\"235236445\",\"full_name\":\"萨桑\"}]},\"images\":{\"low_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xap1/t51.2885-15/s320x320/e15/10607913_692632367472666_1829853902_n.jpg\",\"width\":320,\"height\":320},\"thumbnail\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xap1/t51.2885-15/s150x150/e15/10607913_692632367472666_1829853902_n.jpg\",\"width\":150,\"height\":150},\"standard_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xap1/t51.2885-15/e15/10607913_692632367472666_1829853902_n.jpg\",\"width\":640,\"height\":640}},\"users_in_photo\":[],\"caption\":{\"created_time\":\"1408715905\",\"text\":\"纵有一万种悲伤的美丽，也比不过这段。\",\"from\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"},\"id\":\"792688927703284532\"},\"type\":\"image\",\"id\":\"792688926981863938_438522285\",\"user\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"}},{\"attribution\":null,\"tags\":[],\"location\":null,\"comments\":{\"count\":0,\"data\":[]},\"filter\":\"X-Pro II\",\"created_time\":\"1408282865\",\"link\":\"https://instagram.com/p/rzSow4o7lH/\",\"likes\":{\"count\":0,\"data\":[]},\"images\":{\"low_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xfp1/t51.2885-15/s320x320/e15/10611052_1466241683635233_830264506_n.jpg\",\"width\":320,\"height\":320},\"thumbnail\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xfp1/t51.2885-15/s150x150/e15/10611052_1466241683635233_830264506_n.jpg\",\"width\":150,\"height\":150},\"standard_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xfp1/t51.2885-15/e15/10611052_1466241683635233_830264506_n.jpg\",\"width\":640,\"height\":640}},\"users_in_photo\":[],\"caption\":{\"created_time\":\"1408282865\",\"text\":\"在书城里看到的分镜图。电影那么美，分镜是这样，这就是现实~\",\"from\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"},\"id\":\"789056326245530503\"},\"type\":\"image\",\"id\":\"789056325826099527_438522285\",\"user\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"}},{\"attribution\":null,\"tags\":[],\"location\":null,\"comments\":{\"count\":0,\"data\":[]},\"filter\":\"Hudson\",\"created_time\":\"1407932800\",\"link\":\"https://instagram.com/p/ro28LPI7oc/\",\"likes\":{\"count\":0,\"data\":[]},\"images\":{\"low_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xaf1/t51.2885-15/s320x320/e15/10617144_829548960388746_1611410337_n.jpg\",\"width\":320,\"height\":320},\"thumbnail\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xaf1/t51.2885-15/s150x150/e15/10617144_829548960388746_1611410337_n.jpg\",\"width\":150,\"height\":150},\"standard_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xaf1/t51.2885-15/e15/10617144_829548960388746_1611410337_n.jpg\",\"width\":640,\"height\":640}},\"users_in_photo\":[],\"caption\":{\"created_time\":\"1407932800\",\"text\":\"如果你从北京来看我，我会很感动;如果你像光，从太阳那头过来，我不以为然。因为光到地球只要8.3分钟。我们经常错用代价来衡量情感\",\"from\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"},\"id\":\"786119765132556496\"},\"type\":\"image\",\"id\":\"786119764721515036_438522285\",\"user\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"}},{\"attribution\":null,\"tags\":[],\"location\":null,\"comments\":{\"count\":2,\"data\":[{\"created_time\":\"1407328697\",\"text\":\"家里人吗\",\"from\":{\"username\":\"zheng_ji\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/anonymousUser.jpg\",\"id\":\"1176976812\",\"full_name\":\"\"},\"id\":\"781052182645685044\"},{\"created_time\":\"1408283949\",\"text\":\"@zheng_ji 对，来深圳玩\",\"from\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"},\"id\":\"789065414052395483\"}]},\"filter\":\"Nashville\",\"created_time\":\"1407161569\",\"link\":\"https://instagram.com/p/rR37wLo7iu/\",\"likes\":{\"count\":0,\"data\":[]},\"images\":{\"low_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xfp1/t51.2885-15/s320x320/e15/10453953_542161702576881_1621059386_n.jpg\",\"width\":320,\"height\":320},\"thumbnail\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xfp1/t51.2885-15/s150x150/e15/10453953_542161702576881_1621059386_n.jpg\",\"width\":150,\"height\":150},\"standard_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xfp1/t51.2885-15/e15/10453953_542161702576881_1621059386_n.jpg\",\"width\":640,\"height\":640}},\"users_in_photo\":[],\"caption\":{\"created_time\":\"1407161569\",\"text\":\"相聚总有时:)\",\"from\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"},\"id\":\"779650209673361431\"},\"type\":\"image\",\"id\":\"779650209253931182_438522285\",\"user\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"}},{\"attribution\":null,\"tags\":[],\"location\":null,\"comments\":{\"count\":1,\"data\":[{\"created_time\":\"1406438900\",\"text\":\"人啊\",\"from\":{\"username\":\"zheng_ji\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/anonymousUser.jpg\",\"id\":\"1176976812\",\"full_name\":\"\"},\"id\":\"773588027516893195\"}]},\"filter\":\"Lo-fi\",\"created_time\":\"1406343109\",\"link\":\"https://instagram.com/p/q5e2KpI7qn/\",\"likes\":{\"count\":0,\"data\":[]},\"images\":{\"low_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xpf1/t51.2885-15/s320x320/e15/925559_1482425071996009_1940959046_n.jpg\",\"width\":320,\"height\":320},\"thumbnail\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xpf1/t51.2885-15/s150x150/e15/925559_1482425071996009_1940959046_n.jpg\",\"width\":150,\"height\":150},\"standard_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xpf1/t51.2885-15/e15/925559_1482425071996009_1940959046_n.jpg\",\"width\":640,\"height\":640}},\"users_in_photo\":[],\"caption\":{\"created_time\":\"1406343109\",\"text\":\"随便走走，发现世界还是很美好的。当拥有美好事物时，经常习惯性的熟视无睹;当努力抓住你想要的东西时，它又可能瞬间破碎。但依旧需要不妥协。\",\"from\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"},\"id\":\"772784475122940015\"},\"type\":\"image\",\"id\":\"772784474745453223_438522285\",\"user\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"}},{\"attribution\":null,\"tags\":[],\"location\":null,\"comments\":{\"count\":0,\"data\":[]},\"filter\":\"Valencia\",\"created_time\":\"1406104308\",\"link\":\"https://instagram.com/p/qyXXpNI7q5/\",\"likes\":{\"count\":1,\"data\":[{\"username\":\"dingstyle\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_30683156_75sq_1333592929.jpg\",\"id\":\"30683156\",\"full_name\":\"Linjie\"}]},\"images\":{\"low_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xaf1/t51.2885-15/s320x320/e15/10554006_501929086608023_917623457_n.jpg\",\"width\":320,\"height\":320},\"thumbnail\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xaf1/t51.2885-15/s150x150/e15/10554006_501929086608023_917623457_n.jpg\",\"width\":150,\"height\":150},\"standard_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xaf1/t51.2885-15/e15/10554006_501929086608023_917623457_n.jpg\",\"width\":640,\"height\":640}},\"users_in_photo\":[],\"caption\":{\"created_time\":\"1406104308\",\"text\":\"荔枝——我心目中的水果之王（有之一）\",\"from\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"},\"id\":\"770781266472843689\"},\"type\":\"image\",\"id\":\"770781266095356601_438522285\",\"user\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"}},{\"attribution\":null,\"tags\":[],\"location\":null,\"comments\":{\"count\":0,\"data\":[]},\"filter\":\"Unknown\",\"created_time\":\"1406074922\",\"link\":\"https://instagram.com/p/qxfUe0I7lp/\",\"likes\":{\"count\":0,\"data\":[]},\"images\":{\"low_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xfp1/t51.2885-15/s320x320/e15/10576105_624878090953161_638111947_n.jpg\",\"width\":320,\"height\":320},\"thumbnail\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xfp1/t51.2885-15/s150x150/e15/10576105_624878090953161_638111947_n.jpg\",\"width\":150,\"height\":150},\"standard_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xfp1/t51.2885-15/e15/10576105_624878090953161_638111947_n.jpg\",\"width\":640,\"height\":640}},\"users_in_photo\":[],\"caption\":{\"created_time\":\"1406074922\",\"text\":\"高中时代最新款的mp4，现已成了老古董\",\"from\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"},\"id\":\"770534759307917387\"},\"type\":\"image\",\"id\":\"770534758175455593_438522285\",\"user\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"}},{\"attribution\":null,\"tags\":[],\"location\":null,\"comments\":{\"count\":0,\"data\":[]},\"filter\":\"Unknown\",\"created_time\":\"1405855985\",\"link\":\"https://instagram.com/p/qq9usdo7hr/\",\"likes\":{\"count\":0,\"data\":[]},\"images\":{\"low_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xap1/t51.2885-15/s320x320/e15/10570119_332808380211109_125412512_n.jpg\",\"width\":320,\"height\":320},\"thumbnail\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xap1/t51.2885-15/s150x150/e15/10570119_332808380211109_125412512_n.jpg\",\"width\":150,\"height\":150},\"standard_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xap1/t51.2885-15/e15/10570119_332808380211109_125412512_n.jpg\",\"width\":640,\"height\":640}},\"users_in_photo\":[],\"caption\":{\"created_time\":\"1405855985\",\"text\":\"台风来临时，刚好会是暑假。但我已没有暑假。\",\"from\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"},\"id\":\"768698176489372642\"},\"type\":\"image\",\"id\":\"768698176095107179_438522285\",\"user\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"}},{\"attribution\":null,\"tags\":[],\"location\":{\"latitude\":23.476046667,\"longitude\":111.2695},\"comments\":{\"count\":2,\"data\":[{\"created_time\":\"1405858388\",\"text\":\"楼下好漂亮\",\"from\":{\"username\":\"zheng_ji\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/anonymousUser.jpg\",\"id\":\"1176976812\",\"full_name\":\"\"},\"id\":\"768718334289230647\"},{\"created_time\":\"1405860430\",\"text\":\"@zheng_ji 是哦，很小的城市，绿化什么的都稍微会比大城市好点\",\"from\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"},\"id\":\"768735469036092032\"}]},\"filter\":\"Lo-fi\",\"created_time\":\"1405752498\",\"link\":\"https://instagram.com/p/qn4WCIo7hi/\",\"likes\":{\"count\":0,\"data\":[]},\"images\":{\"low_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xpa1/t51.2885-15/s320x320/e15/926536_828142997203682_1319760676_n.jpg\",\"width\":320,\"height\":320},\"thumbnail\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xpa1/t51.2885-15/s150x150/e15/926536_828142997203682_1319760676_n.jpg\",\"width\":150,\"height\":150},\"standard_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xpa1/t51.2885-15/e15/926536_828142997203682_1319760676_n.jpg\",\"width\":640,\"height\":640}},\"users_in_photo\":[],\"caption\":{\"created_time\":\"1405752498\",\"text\":\"看着一场雨由远及近的淋湿院子，太漂亮\",\"from\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"},\"id\":\"767830066634930596\"},\"type\":\"image\",\"id\":\"767830066215499874_438522285\",\"user\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"}},{\"attribution\":null,\"tags\":[],\"location\":{\"latitude\":23.475891667,\"longitude\":111.270028333},\"comments\":{\"count\":0,\"data\":[]},\"filter\":\"Lo-fi\",\"created_time\":\"1405683338\",\"link\":\"https://instagram.com/p/ql0brho7vN/\",\"likes\":{\"count\":1,\"data\":[{\"username\":\"zheng_ji\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/anonymousUser.jpg\",\"id\":\"1176976812\",\"full_name\":\"\"}]},\"images\":{\"low_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xpf1/t51.2885-15/s320x320/e15/923702_252705761596555_721784545_n.jpg\",\"width\":320,\"height\":320},\"thumbnail\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xpf1/t51.2885-15/s150x150/e15/923702_252705761596555_721784545_n.jpg\",\"width\":150,\"height\":150},\"standard_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xpf1/t51.2885-15/e15/923702_252705761596555_721784545_n.jpg\",\"width\":640,\"height\":640}},\"users_in_photo\":[],\"caption\":{\"created_time\":\"1405683338\",\"text\":\"归来却空空的行囊 那故乡的云 那故乡的风 啦啦啦啦啦 啦啦啦。\",\"from\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"},\"id\":\"767249912527305209\"},\"type\":\"image\",\"id\":\"767249912116263885_438522285\",\"user\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"}},{\"attribution\":null,\"tags\":[],\"location\":null,\"comments\":{\"count\":0,\"data\":[]},\"filter\":\"Hudson\",\"created_time\":\"1405640336\",\"link\":\"https://instagram.com/p/qkiaYDo7t9/\",\"likes\":{\"count\":0,\"data\":[]},\"images\":{\"low_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xap1/t51.2885-15/s320x320/e15/10549755_708603639175850_2095584541_n.jpg\",\"width\":320,\"height\":320},\"thumbnail\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xap1/t51.2885-15/s150x150/e15/10549755_708603639175850_2095584541_n.jpg\",\"width\":150,\"height\":150},\"standard_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xap1/t51.2885-15/e15/10549755_708603639175850_2095584541_n.jpg\",\"width\":640,\"height\":640}},\"users_in_photo\":[],\"caption\":{\"created_time\":\"1405640336\",\"text\":\"在今年第一个狂风大作的早上，回家去\",\"from\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"},\"id\":\"766889183097895198\"},\"type\":\"image\",\"id\":\"766889182678465405_438522285\",\"user\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"}},{\"attribution\":null,\"tags\":[],\"location\":null,\"comments\":{\"count\":0,\"data\":[]},\"filter\":\"Unknown\",\"created_time\":\"1405094360\",\"link\":\"https://instagram.com/p/qURC9fI7r-/\",\"likes\":{\"count\":1,\"data\":[{\"username\":\"zheng_ji\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/anonymousUser.jpg\",\"id\":\"1176976812\",\"full_name\":\"\"}]},\"images\":{\"low_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xpf1/t51.2885-15/s320x320/e15/928307_1442957109299429_297849354_n.jpg\",\"width\":320,\"height\":320},\"thumbnail\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xpf1/t51.2885-15/s150x150/e15/928307_1442957109299429_297849354_n.jpg\",\"width\":150,\"height\":150},\"standard_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xpf1/t51.2885-15/e15/928307_1442957109299429_297849354_n.jpg\",\"width\":640,\"height\":640}},\"users_in_photo\":[],\"caption\":{\"created_time\":\"1405094360\",\"text\":\"98年，世界杯第一次在我脑中留下记忆，和爸，围着那台很小的tcl。今天，爸还打电话给我，让我别看太晚影响到明天工作，但我知道他自己也会去看的。是的，我们爱足球，今生今世\",\"from\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"},\"id\":\"762309208290081347\"},\"type\":\"image\",\"id\":\"762309207182785278_438522285\",\"user\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"}}]}"},{"title":"","date":"2019-01-24T13:23:02.536Z","updated":"2019-01-24T12:14:28.282Z","comments":true,"path":"instagram/ins0.json","permalink":"http://zichao.me/instagram/ins0.json","excerpt":"","text":"{\"pagination\":{\"next_url\":\"https://api.instagram.com/v1/users/438522285/media/recent?count=100&callback=jQuery19008141340191941708_1433432491285&client_id=956dd096b6e5496aba6662165b9b8443&max_id=817324725551479434_438522285&_=1433432491286\",\"next_max_id\":\"817324725551479434_438522285\"},\"meta\":{\"code\":200},\"data\":[{\"attribution\":null,\"tags\":[],\"location\":null,\"comments\":{\"count\":0,\"data\":[]},\"filter\":\"Lark\",\"created_time\":\"1433424772\",\"link\":\"https://instagram.com/p/3glBKbI7jm/\",\"likes\":{\"count\":0,\"data\":[]},\"images\":{\"low_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xaf1/t51.2885-15/s320x320/e15/11375982_491190547696110_2013240096_n.jpg\",\"width\":320,\"height\":320},\"thumbnail\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xaf1/t51.2885-15/s150x150/e15/11375982_491190547696110_2013240096_n.jpg\",\"width\":150,\"height\":150},\"standard_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xaf1/t51.2885-15/e15/11375982_491190547696110_2013240096_n.jpg\",\"width\":640,\"height\":640}},\"users_in_photo\":[],\"caption\":{\"created_time\":\"1433424772\",\"text\":\"小萝莉不愿回家，跟奶奶说：“再让我玩会，明天要学钢琴，后天要学跳舞，就来不了这儿玩了。”\",\"from\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"},\"id\":\"999961926134119385\"},\"type\":\"image\",\"id\":\"999961924909381862_438522285\",\"user\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"}},{\"attribution\":null,\"tags\":[],\"location\":null,\"comments\":{\"count\":5,\"data\":[{\"created_time\":\"1432100935\",\"text\":\"😊\",\"from\":{\"username\":\"muvanmf\",\"profile_picture\":\"https://igcdn-photos-f-a.akamaihd.net/hphotos-ak-xfa1/t51.2885-19/11334455_1615248035385837_1443100648_a.jpg\",\"id\":\"1200885749\",\"full_name\":\"\"},\"id\":\"988856776283895820\"},{\"created_time\":\"1432500874\",\"text\":\"😊\",\"from\":{\"username\":\"y_lang99\",\"profile_picture\":\"https://igcdn-photos-c-a.akamaihd.net/hphotos-ak-xaf1/t51.2885-19/11373510_386713434848322_1596956169_a.jpg\",\"id\":\"1509502800\",\"full_name\":\"✨小阿浪～\"},\"id\":\"992211705421609081\"},{\"created_time\":\"1432886603\",\"text\":\"👍\",\"from\":{\"username\":\"cp_water_h2o\",\"profile_picture\":\"https://igcdn-photos-g-a.akamaihd.net/hphotos-ak-xap1/t51.2885-19/11191155_897877480271222_1196332450_a.jpg\",\"id\":\"46708139\",\"full_name\":\"\"},\"id\":\"995447436348733496\"},{\"created_time\":\"1433035543\",\"text\":\"😄\",\"from\":{\"username\":\"vocalmomoko\",\"profile_picture\":\"https://igcdn-photos-f-a.akamaihd.net/hphotos-ak-xfa1/t51.2885-19/10601848_849046995107581_1799487354_a.jpg\",\"id\":\"280464724\",\"full_name\":\"Momoko\"},\"id\":\"996696839524956493\"},{\"created_time\":\"1433035564\",\"text\":\"nice @Ijustinchen\",\"from\":{\"username\":\"dikenxoen\",\"profile_picture\":\"https://igcdn-photos-c-a.akamaihd.net/hphotos-ak-xpf1/t51.2885-19/925345_933363483364074_1000071537_a.jpg\",\"id\":\"1649582238\",\"full_name\":\"\"},\"id\":\"996697009528486242\"}]},\"filter\":\"Lo-fi\",\"created_time\":\"1432095934\",\"link\":\"https://instagram.com/p/24-dd6o7uB/\",\"likes\":{\"count\":4,\"data\":[{\"username\":\"oliviayhao\",\"profile_picture\":\"https://igcdn-photos-c-a.akamaihd.net/hphotos-ak-xaf1/t51.2885-19/11326269_1439141373071498_1054025241_a.jpg\",\"id\":\"10631089\",\"full_name\":\"Olivia Yang\"},{\"username\":\"zx_9451\",\"profile_picture\":\"https://igcdn-photos-a-a.akamaihd.net/hphotos-ak-xaf1/t51.2885-19/11327937_953513731373032_1587298722_a.jpg\",\"id\":\"1147297522\",\"full_name\":\"贤妹妹ZX\"},{\"username\":\"irissssw\",\"profile_picture\":\"https://igcdn-photos-d-a.akamaihd.net/hphotos-ak-xfp1/t51.2885-19/11005023_732965413468795_1308833307_a.jpg\",\"id\":\"231558542\",\"full_name\":\"Iris.W\"},{\"username\":\"juxiequechuicai\",\"profile_picture\":\"https://igcdn-photos-f-a.akamaihd.net/hphotos-ak-xap1/t51.2885-19/10932562_1408525596106461_81586164_a.jpg\",\"id\":\"1649588862\",\"full_name\":\"\"}]},\"images\":{\"low_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xaf1/t51.2885-15/s320x320/e15/11252751_1444216632541093_1558227860_n.jpg\",\"width\":320,\"height\":320},\"thumbnail\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xaf1/t51.2885-15/s150x150/e15/11252751_1444216632541093_1558227860_n.jpg\",\"width\":150,\"height\":150},\"standard_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xaf1/t51.2885-15/e15/11252751_1444216632541093_1558227860_n.jpg\",\"width\":640,\"height\":640}},\"users_in_photo\":[],\"caption\":{\"created_time\":\"1432095934\",\"text\":\"风雨欲来\",\"from\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"},\"id\":\"988814823345338742\"},\"type\":\"image\",\"id\":\"988814822078659457_438522285\",\"user\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"}},{\"attribution\":null,\"videos\":{\"low_bandwidth\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xfa1/t50.2886-16/11234567_805492662880042_967794598_s.mp4\",\"width\":480,\"height\":480},\"standard_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xaf1/t50.2886-16/11235514_1629635357248662_1505532808_n.mp4\",\"width\":640,\"height\":640},\"low_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xfa1/t50.2886-16/11234567_805492662880042_967794598_s.mp4\",\"width\":480,\"height\":480}},\"tags\":[],\"location\":null,\"comments\":{\"count\":0,\"data\":[]},\"filter\":\"Ashby\",\"created_time\":\"1431736282\",\"link\":\"https://instagram.com/p/2uQeuaI7nv/\",\"likes\":{\"count\":2,\"data\":[{\"username\":\"ashleyfashionblogger\",\"profile_picture\":\"https://igcdn-photos-a-a.akamaihd.net/hphotos-ak-xpa1/t51.2885-19/11190869_428988550612824_1565351360_a.jpg\",\"id\":\"1172999152\",\"full_name\":\"Ashley精尖奢品\"},{\"username\":\"jijileexi\",\"profile_picture\":\"https://igcdn-photos-c-a.akamaihd.net/hphotos-ak-xpf1/t51.2885-19/10914307_1531769583766522_1188586237_a.jpg\",\"id\":\"1668534092\",\"full_name\":\"\"}]},\"images\":{\"low_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xaf1/t51.2885-15/s320x320/e15/11226595_701075516681953_1354085958_n.jpg\",\"width\":320,\"height\":320},\"thumbnail\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xaf1/t51.2885-15/s150x150/e15/11226595_701075516681953_1354085958_n.jpg\",\"width\":150,\"height\":150},\"standard_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xaf1/t51.2885-15/e15/11226595_701075516681953_1354085958_n.jpg\",\"width\":640,\"height\":640}},\"users_in_photo\":[],\"caption\":{\"created_time\":\"1431736282\",\"text\":\"野生海带\",\"from\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"},\"id\":\"985797850168539756\"},\"type\":\"video\",\"id\":\"985797848599869935_438522285\",\"user\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"}},{\"attribution\":null,\"videos\":{\"low_bandwidth\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xfp1/t50.2886-16/11100588_1627658390782524_1406603363_s.mp4\",\"width\":480,\"height\":480},\"standard_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xtp1/t50.2886-16/11123341_1574707489481834_1444136079_n.mp4\",\"width\":640,\"height\":640},\"low_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xfp1/t50.2886-16/11100588_1627658390782524_1406603363_s.mp4\",\"width\":480,\"height\":480}},\"tags\":[],\"location\":null,\"comments\":{\"count\":3,\"data\":[{\"created_time\":\"1428633555\",\"text\":\"@nanako0606 :)\",\"from\":{\"username\":\"lvhombeme\",\"profile_picture\":\"https://igcdn-photos-h-a.akamaihd.net/hphotos-ak-xap1/t51.2885-19/11190759_712908695501663_547363914_a.jpg\",\"id\":\"30244942\",\"full_name\":\"\"},\"id\":\"959770281262693297\"},{\"created_time\":\"1428952602\",\"text\":\"💘💘 @MIKATTONG\",\"from\":{\"username\":\"kaogai\",\"profile_picture\":\"https://igcdn-photos-c-a.akamaihd.net/hphotos-ak-xfp1/t51.2885-19/10431811_753900654665570_1046066069_a.jpg\",\"id\":\"1588508371\",\"full_name\":\"\"},\"id\":\"962446649029016324\"},{\"created_time\":\"1430583831\",\"text\":\"😊\",\"from\":{\"username\":\"geyaoxian\",\"profile_picture\":\"https://igcdn-photos-c-a.akamaihd.net/hphotos-ak-xpf1/t51.2885-19/11203210_832251100188962_1484152822_a.jpg\",\"id\":\"1026707646\",\"full_name\":\"葛耀先\"},\"id\":\"976130389424978098\"}]},\"filter\":\"Clarendon\",\"created_time\":\"1428315781\",\"link\":\"https://instagram.com/p/1IUZByo7vP/\",\"likes\":{\"count\":4,\"data\":[{\"username\":\"barb1e2u\",\"profile_picture\":\"https://igcdn-photos-d-a.akamaihd.net/hphotos-ak-xap1/t51.2885-19/11184633_436852723162235_673116011_a.jpg\",\"id\":\"1543932897\",\"full_name\":\"Barbie💋WeChat:88315113📲\"},{\"username\":\"huanglh3o3\",\"profile_picture\":\"https://igcdn-photos-b-a.akamaihd.net/hphotos-ak-xtf1/t51.2885-19/11098542_1557115881228953_2108051141_a.jpg\",\"id\":\"1244702090\",\"full_name\":\"\"},{\"username\":\"zhengezhao\",\"profile_picture\":\"https://igcdn-photos-g-a.akamaihd.net/hphotos-ak-xfp1/t51.2885-19/10727551_282259975296534_305711726_a.jpg\",\"id\":\"1531642371\",\"full_name\":\"Zhenge Zhao\"},{\"username\":\"lixxin1\",\"profile_picture\":\"https://igcdn-photos-b-a.akamaihd.net/hphotos-ak-xfa1/t51.2885-19/10724134_1498809703714993_666658303_a.jpg\",\"id\":\"474735109\",\"full_name\":\"李紫欣\"}]},\"images\":{\"low_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xpt1/t51.2885-15/s320x320/e15/11142212_609961145801361_1913577076_n.jpg\",\"width\":320,\"height\":320},\"thumbnail\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xpt1/t51.2885-15/s150x150/e15/11142212_609961145801361_1913577076_n.jpg\",\"width\":150,\"height\":150},\"standard_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xpt1/t51.2885-15/e15/11142212_609961145801361_1913577076_n.jpg\",\"width\":640,\"height\":640}},\"users_in_photo\":[],\"caption\":{\"created_time\":\"1428315781\",\"text\":\"要回去啦，再见北流河\",\"from\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"},\"id\":\"957104601967082317\"},\"type\":\"video\",\"id\":\"957104601656703951_438522285\",\"user\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"}},{\"attribution\":null,\"tags\":[],\"location\":null,\"comments\":{\"count\":0,\"data\":[]},\"filter\":\"Ludwig\",\"created_time\":\"1428314611\",\"link\":\"https://instagram.com/p/1ISKRxo7r8/\",\"likes\":{\"count\":0,\"data\":[]},\"images\":{\"low_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xfp1/t51.2885-15/s320x320/e15/11049421_1375007652828983_401355534_n.jpg\",\"width\":320,\"height\":320},\"thumbnail\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xfp1/t51.2885-15/s150x150/e15/11049421_1375007652828983_401355534_n.jpg\",\"width\":150,\"height\":150},\"standard_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xfp1/t51.2885-15/e15/11049421_1375007652828983_401355534_n.jpg\",\"width\":640,\"height\":640}},\"users_in_photo\":[],\"caption\":{\"created_time\":\"1428314611\",\"text\":\"灵芝get√\",\"from\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"},\"id\":\"957094792144337138\"},\"type\":\"image\",\"id\":\"957094791934622460_438522285\",\"user\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"}},{\"attribution\":null,\"tags\":[],\"location\":null,\"comments\":{\"count\":0,\"data\":[]},\"filter\":\"Nashville\",\"created_time\":\"1428245860\",\"link\":\"https://instagram.com/p/1GPBzpo7qW/\",\"likes\":{\"count\":1,\"data\":[{\"username\":\"zhengezhao\",\"profile_picture\":\"https://igcdn-photos-g-a.akamaihd.net/hphotos-ak-xfp1/t51.2885-19/10727551_282259975296534_305711726_a.jpg\",\"id\":\"1531642371\",\"full_name\":\"Zhenge Zhao\"}]},\"images\":{\"low_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xfa1/t51.2885-15/s320x320/e15/11137852_1649834698581861_1050691792_n.jpg\",\"width\":320,\"height\":320},\"thumbnail\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xfa1/t51.2885-15/s150x150/e15/11137852_1649834698581861_1050691792_n.jpg\",\"width\":150,\"height\":150},\"standard_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xfa1/t51.2885-15/e15/11137852_1649834698581861_1050691792_n.jpg\",\"width\":640,\"height\":640}},\"users_in_photo\":[],\"caption\":{\"created_time\":\"1428245860\",\"text\":\"这里的清明是个很重要的节日，子孙们都会回来，跋山涉水，竹排渡江，荒山寻路，凭集体的记忆寻找列祖列宗的宝地，寄哀思，也求福德。一路上可以听他们唠叨旧事，也有超级靠谱的风水科普\",\"from\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"},\"id\":\"956518065923930728\"},\"type\":\"image\",\"id\":\"956518065739381398_438522285\",\"user\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"}},{\"attribution\":null,\"tags\":[],\"location\":null,\"comments\":{\"count\":0,\"data\":[]},\"filter\":\"Mayfair\",\"created_time\":\"1428228071\",\"link\":\"https://instagram.com/p/1FtGO3I7kN/\",\"likes\":{\"count\":0,\"data\":[]},\"images\":{\"low_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xfp1/t51.2885-15/s320x320/e15/11055751_1573536912901494_1683773508_n.jpg\",\"width\":320,\"height\":320},\"thumbnail\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xfp1/t51.2885-15/s150x150/e15/11055751_1573536912901494_1683773508_n.jpg\",\"width\":150,\"height\":150},\"standard_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xfp1/t51.2885-15/e15/11055751_1573536912901494_1683773508_n.jpg\",\"width\":640,\"height\":640}},\"users_in_photo\":[],\"caption\":{\"created_time\":\"1428228071\",\"text\":\"为了部落\",\"from\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"},\"id\":\"956368836446370643\"},\"type\":\"image\",\"id\":\"956368836253432077_438522285\",\"user\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"}},{\"attribution\":null,\"tags\":[],\"location\":null,\"comments\":{\"count\":0,\"data\":[]},\"filter\":\"Mayfair\",\"created_time\":\"1428131481\",\"link\":\"https://instagram.com/p/1C03iPI7hZ/\",\"likes\":{\"count\":1,\"data\":[{\"username\":\"zhengezhao\",\"profile_picture\":\"https://igcdn-photos-g-a.akamaihd.net/hphotos-ak-xfp1/t51.2885-19/10727551_282259975296534_305711726_a.jpg\",\"id\":\"1531642371\",\"full_name\":\"Zhenge Zhao\"}]},\"images\":{\"low_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xfp1/t51.2885-15/s320x320/e15/11055897_1407191599597961_1763496348_n.jpg\",\"width\":320,\"height\":320},\"thumbnail\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xfp1/t51.2885-15/s150x150/e15/11055897_1407191599597961_1763496348_n.jpg\",\"width\":150,\"height\":150},\"standard_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xfp1/t51.2885-15/e15/11055897_1407191599597961_1763496348_n.jpg\",\"width\":640,\"height\":640}},\"users_in_photo\":[],\"caption\":{\"created_time\":\"1428131481\",\"text\":\"在清明的山路遇到了天然松香\",\"from\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"},\"id\":\"955558585941866653\"},\"type\":\"image\",\"id\":\"955558585706985561_438522285\",\"user\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"}},{\"attribution\":null,\"tags\":[],\"location\":null,\"comments\":{\"count\":0,\"data\":[]},\"filter\":\"Crema\",\"created_time\":\"1427801745\",\"link\":\"https://instagram.com/p/04_8fwo7gL/\",\"likes\":{\"count\":3,\"data\":[{\"username\":\"bo0oo0\",\"profile_picture\":\"https://igcdn-photos-e-a.akamaihd.net/hphotos-ak-xfa1/t51.2885-19/10507930_301607313382260_661513528_a.jpg\",\"id\":\"51426891\",\"full_name\":\"\"},{\"username\":\"zhengezhao\",\"profile_picture\":\"https://igcdn-photos-g-a.akamaihd.net/hphotos-ak-xfp1/t51.2885-19/10727551_282259975296534_305711726_a.jpg\",\"id\":\"1531642371\",\"full_name\":\"Zhenge Zhao\"},{\"username\":\"sasanzuo\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_235236445_75sq_1393055700.jpg\",\"id\":\"235236445\",\"full_name\":\"萨桑\"}]},\"images\":{\"low_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xtf1/t51.2885-15/s320x320/e15/11123665_1542600796003839_1576473443_n.jpg\",\"width\":320,\"height\":320},\"thumbnail\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xtf1/t51.2885-15/s150x150/e15/11123665_1542600796003839_1576473443_n.jpg\",\"width\":150,\"height\":150},\"standard_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xtf1/t51.2885-15/e15/11123665_1542600796003839_1576473443_n.jpg\",\"width\":640,\"height\":640}},\"users_in_photo\":[],\"caption\":{\"created_time\":\"1427801745\",\"text\":\"如果你飞得像月亮这么高，就不会搁浅在树上\",\"from\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"},\"id\":\"952792555599411873\"},\"type\":\"image\",\"id\":\"952792555389696011_438522285\",\"user\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"}},{\"attribution\":null,\"tags\":[],\"location\":{\"latitude\":22.538938333,\"longitude\":113.92382},\"comments\":{\"count\":0,\"data\":[]},\"filter\":\"Normal\",\"created_time\":\"1425469470\",\"link\":\"https://instagram.com/p/zzfe7Oo7uc/\",\"likes\":{\"count\":4,\"data\":[{\"username\":\"kai_efforts\",\"profile_picture\":\"https://igcdn-photos-b-a.akamaihd.net/hphotos-ak-xaf1/t51.2885-19/11326569_447841455377553_1276311913_a.jpg\",\"id\":\"1319736417\",\"full_name\":\"張凱茗KAI\"},{\"username\":\"yinggg0830\",\"profile_picture\":\"https://igcdn-photos-e-a.akamaihd.net/hphotos-ak-xpa1/t51.2885-19/11191229_478700095619252_1507412393_a.jpg\",\"id\":\"303041107\",\"full_name\":\"\"},{\"username\":\"aofeixi\",\"profile_picture\":\"https://igcdn-photos-a-a.akamaihd.net/hphotos-ak-xaf1/t51.2885-19/10899120_578003152334536_1461658615_a.jpg\",\"id\":\"1648133428\",\"full_name\":\"\"},{\"username\":\"ritababe_\",\"profile_picture\":\"https://igcdn-photos-e-a.akamaihd.net/hphotos-ak-xaf1/t51.2885-19/11018358_387855874729324_717730599_a.jpg\",\"id\":\"40610366\",\"full_name\":\"\"}]},\"images\":{\"low_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xtp1/t51.2885-15/s320x320/e15/11008101_1593505510894691_369067449_n.jpg\",\"width\":320,\"height\":320},\"thumbnail\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xtp1/t51.2885-15/s150x150/e15/11008101_1593505510894691_369067449_n.jpg\",\"width\":150,\"height\":150},\"standard_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xtp1/t51.2885-15/e15/11008101_1593505510894691_369067449_n.jpg\",\"width\":640,\"height\":640}},\"users_in_photo\":[],\"caption\":{\"created_time\":\"1425469470\",\"text\":\"喜欢这个季节的天空，你找个草坪一躺，飞机，风筝，鸟儿就都在上边，天气好时还能看到白天的月亮\",\"from\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"},\"id\":\"933228012653230637\"},\"type\":\"image\",\"id\":\"933228012418349980_438522285\",\"user\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"}},{\"attribution\":null,\"tags\":[],\"location\":{\"latitude\":23.479396667,\"longitude\":111.271811667},\"comments\":{\"count\":1,\"data\":[{\"created_time\":\"1425083565\",\"text\":\"好想吃！\",\"from\":{\"username\":\"zhengezhao\",\"profile_picture\":\"https://igcdn-photos-g-a.akamaihd.net/hphotos-ak-xfp1/t51.2885-19/10727551_282259975296534_305711726_a.jpg\",\"id\":\"1531642371\",\"full_name\":\"Zhenge Zhao\"},\"id\":\"929990810867579125\"}]},\"filter\":\"Sierra\",\"created_time\":\"1424692998\",\"link\":\"https://instagram.com/p/zcWez6I7uo/\",\"likes\":{\"count\":2,\"data\":[{\"username\":\"zhengezhao\",\"profile_picture\":\"https://igcdn-photos-g-a.akamaihd.net/hphotos-ak-xfp1/t51.2885-19/10727551_282259975296534_305711726_a.jpg\",\"id\":\"1531642371\",\"full_name\":\"Zhenge Zhao\"}]},\"images\":{\"low_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xpa1/t51.2885-15/s320x320/e15/10958252_1405701033068537_2023890854_n.jpg\",\"width\":320,\"height\":320},\"thumbnail\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xpa1/t51.2885-15/s150x150/e15/10958252_1405701033068537_2023890854_n.jpg\",\"width\":150,\"height\":150},\"standard_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xpa1/t51.2885-15/e15/10958252_1405701033068537_2023890854_n.jpg\",\"width\":640,\"height\":640}},\"users_in_photo\":[],\"caption\":{\"created_time\":\"1424692998\",\"text\":\"很多东西随着慢慢长大，变得不像小时候那样盼望热切，比如巧克力麦当劳薯片雪糕。只有对担子粉的爱永远不变的说…\",\"from\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"},\"id\":\"926714497851439701\"},\"type\":\"image\",\"id\":\"926714497675279272_438522285\",\"user\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"}},{\"attribution\":null,\"tags\":[],\"location\":null,\"comments\":{\"count\":1,\"data\":[{\"created_time\":\"1424356143\",\"text\":\"大家好我是影帝斯科拉！\",\"from\":{\"username\":\"zhengezhao\",\"profile_picture\":\"https://igcdn-photos-g-a.akamaihd.net/hphotos-ak-xfp1/t51.2885-19/10727551_282259975296534_305711726_a.jpg\",\"id\":\"1531642371\",\"full_name\":\"Zhenge Zhao\"},\"id\":\"923888749621000808\"}]},\"filter\":\"Normal\",\"created_time\":\"1424320197\",\"link\":\"https://instagram.com/p/zRPazvI7ol/\",\"likes\":{\"count\":2,\"data\":[{\"username\":\"zhengezhao\",\"profile_picture\":\"https://igcdn-photos-g-a.akamaihd.net/hphotos-ak-xfp1/t51.2885-19/10727551_282259975296534_305711726_a.jpg\",\"id\":\"1531642371\",\"full_name\":\"Zhenge Zhao\"},{\"username\":\"hank_shop\",\"profile_picture\":\"https://igcdn-photos-h-a.akamaihd.net/hphotos-ak-xfp1/t51.2885-19/11190127_567862313355599_688691834_a.jpg\",\"id\":\"1612494131\",\"full_name\":\"高级珠宝私人定制\"}]},\"images\":{\"low_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xpa1/t51.2885-15/s320x320/e15/10832246_413065338853260_183697882_n.jpg\",\"width\":320,\"height\":320},\"thumbnail\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xpa1/t51.2885-15/s150x150/e15/10832246_413065338853260_183697882_n.jpg\",\"width\":150,\"height\":150},\"standard_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xpa1/t51.2885-15/e15/10832246_413065338853260_183697882_n.jpg\",\"width\":640,\"height\":640}},\"users_in_photo\":[],\"caption\":{\"created_time\":\"1424320197\",\"text\":\"据说是一年一度考验演技的时候…\",\"from\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"},\"id\":\"923587211736365325\"},\"type\":\"image\",\"id\":\"923587211543427621_438522285\",\"user\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"}},{\"attribution\":null,\"tags\":[],\"location\":null,\"comments\":{\"count\":0,\"data\":[]},\"filter\":\"Aden\",\"created_time\":\"1424252263\",\"link\":\"https://instagram.com/p/zPN2LtI7sT/\",\"likes\":{\"count\":0,\"data\":[]},\"images\":{\"low_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xpf1/t51.2885-15/s320x320/e15/10268927_436139166536328_1377561628_n.jpg\",\"width\":320,\"height\":320},\"thumbnail\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xpf1/t51.2885-15/s150x150/e15/10268927_436139166536328_1377561628_n.jpg\",\"width\":150,\"height\":150},\"standard_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xpf1/t51.2885-15/e15/10268927_436139166536328_1377561628_n.jpg\",\"width\":640,\"height\":640}},\"users_in_photo\":[],\"caption\":{\"created_time\":\"1424252263\",\"text\":\"锈迹斑斑的香炉\",\"from\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"},\"id\":\"923017346843654518\"},\"type\":\"image\",\"id\":\"923017346659105555_438522285\",\"user\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"}},{\"attribution\":null,\"tags\":[],\"location\":null,\"comments\":{\"count\":0,\"data\":[]},\"filter\":\"Normal\",\"created_time\":\"1424099803\",\"link\":\"https://instagram.com/p/zKrDWlo7gZ/\",\"likes\":{\"count\":1,\"data\":[{\"username\":\"zhengezhao\",\"profile_picture\":\"https://igcdn-photos-g-a.akamaihd.net/hphotos-ak-xfp1/t51.2885-19/10727551_282259975296534_305711726_a.jpg\",\"id\":\"1531642371\",\"full_name\":\"Zhenge Zhao\"}]},\"images\":{\"low_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xpt1/t51.2885-15/s320x320/e15/11008343_410508022446936_713236389_n.jpg\",\"width\":320,\"height\":320},\"thumbnail\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xpt1/t51.2885-15/s150x150/e15/11008343_410508022446936_713236389_n.jpg\",\"width\":150,\"height\":150},\"standard_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xpt1/t51.2885-15/e15/11008343_410508022446936_713236389_n.jpg\",\"width\":640,\"height\":640}},\"users_in_photo\":[],\"caption\":{\"created_time\":\"1424099803\",\"text\":\"回老家了，小时候跟我打过玻璃珠的小伙伴们呢？你们一个在北京，一个在安徽，一个在澳洲，一个我都不知道了…但你们看到玻璃珠的时候，要想起我来啊\",\"from\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"},\"id\":\"921738420473281180\"},\"type\":\"image\",\"id\":\"921738420162902041_438522285\",\"user\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"}},{\"attribution\":null,\"tags\":[],\"location\":null,\"comments\":{\"count\":0,\"data\":[]},\"filter\":\"Normal\",\"created_time\":\"1422532011\",\"link\":\"https://instagram.com/p/yb8uaCI7tt/\",\"likes\":{\"count\":4,\"data\":[{\"username\":\"hoffy1117\",\"profile_picture\":\"https://igcdn-photos-h-a.akamaihd.net/hphotos-ak-xpa1/t51.2885-19/10848344_1661033877456607_416512853_a.jpg\",\"id\":\"754263937\",\"full_name\":\"🇨🇳Hao.G🇨🇳\"},{\"username\":\"zrrff97\",\"profile_picture\":\"https://igcdn-photos-b-a.akamaihd.net/hphotos-ak-xfp1/t51.2885-19/10995234_376996879137889_1932382326_a.jpg\",\"id\":\"460957803\",\"full_name\":\"\"},{\"username\":\"zhengezhao\",\"profile_picture\":\"https://igcdn-photos-g-a.akamaihd.net/hphotos-ak-xfp1/t51.2885-19/10727551_282259975296534_305711726_a.jpg\",\"id\":\"1531642371\",\"full_name\":\"Zhenge Zhao\"},{\"username\":\"venus_nan\",\"profile_picture\":\"https://igcdn-photos-h-a.akamaihd.net/hphotos-ak-xft1/t51.2885-19/10549834_354763768065767_311951679_a.jpg\",\"id\":\"469639381\",\"full_name\":\"👑涵baby👑\"}]},\"images\":{\"low_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xap1/t51.2885-15/s320x320/e15/10932550_620643038062978_1729442807_n.jpg\",\"width\":320,\"height\":320},\"thumbnail\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xap1/t51.2885-15/s150x150/e15/10932550_620643038062978_1729442807_n.jpg\",\"width\":150,\"height\":150},\"standard_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xap1/t51.2885-15/e15/10932550_620643038062978_1729442807_n.jpg\",\"width\":640,\"height\":640}},\"users_in_photo\":[],\"caption\":{\"created_time\":\"1422532011\",\"text\":\"草地上遗落的鞋子\",\"from\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"},\"id\":\"908586821869615866\"},\"type\":\"image\",\"id\":\"908586821685066605_438522285\",\"user\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"}},{\"attribution\":null,\"tags\":[],\"location\":null,\"comments\":{\"count\":1,\"data\":[{\"created_time\":\"1422231801\",\"text\":\"✨ @houuuuuuuuuu\",\"from\":{\"username\":\"callmejamieee\",\"profile_picture\":\"https://igcdn-photos-b-a.akamaihd.net/hphotos-ak-xfa1/t51.2885-19/11379143_1028356523843961_557603003_a.jpg\",\"id\":\"176277794\",\"full_name\":\"Jamie\"},\"id\":\"906068479900367270\"}]},\"filter\":\"Lo-fi\",\"created_time\":\"1421930605\",\"link\":\"https://instagram.com/p/yKBopho7mX/\",\"likes\":{\"count\":0,\"data\":[]},\"images\":{\"low_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xfp1/t51.2885-15/s320x320/e15/891532_1563899373855738_1180535181_n.jpg\",\"width\":320,\"height\":320},\"thumbnail\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xfp1/t51.2885-15/s150x150/e15/891532_1563899373855738_1180535181_n.jpg\",\"width\":150,\"height\":150},\"standard_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xfp1/t51.2885-15/e15/891532_1563899373855738_1180535181_n.jpg\",\"width\":640,\"height\":640}},\"users_in_photo\":[],\"caption\":{\"created_time\":\"1421930605\",\"text\":\"有位很久没联系的朋友寄来明信片，说：我很少看到海，正如你没见过几次雪\",\"from\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"},\"id\":\"903541867174672911\"},\"type\":\"image\",\"id\":\"903541866654579095_438522285\",\"user\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"}},{\"attribution\":null,\"tags\":[],\"location\":null,\"comments\":{\"count\":0,\"data\":[]},\"filter\":\"Normal\",\"created_time\":\"1421601776\",\"link\":\"https://instagram.com/p/yAOcawI7pA/\",\"likes\":{\"count\":0,\"data\":[]},\"images\":{\"low_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xfp1/t51.2885-15/s320x320/e15/10005439_338105566394046_854247264_n.jpg\",\"width\":320,\"height\":320},\"thumbnail\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xfp1/t51.2885-15/s150x150/e15/10005439_338105566394046_854247264_n.jpg\",\"width\":150,\"height\":150},\"standard_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xfp1/t51.2885-15/e15/10005439_338105566394046_854247264_n.jpg\",\"width\":640,\"height\":640}},\"users_in_photo\":[],\"caption\":{\"created_time\":\"1421601776\",\"text\":\"深夜总是灵感乍现的最佳时期，只是几个设计方案都没法使自己满意。累了打开窗看到天上有个大月亮，只想用图章工具把它干掉。\",\"from\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"},\"id\":\"900783451389803192\"},\"type\":\"image\",\"id\":\"900783450995538496_438522285\",\"user\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"}},{\"attribution\":null,\"tags\":[],\"location\":null,\"comments\":{\"count\":2,\"data\":[{\"created_time\":\"1421378982\",\"text\":\"这是薰衣草么\",\"from\":{\"username\":\"zhengezhao\",\"profile_picture\":\"https://igcdn-photos-g-a.akamaihd.net/hphotos-ak-xfp1/t51.2885-19/10727551_282259975296534_305711726_a.jpg\",\"id\":\"1531642371\",\"full_name\":\"Zhenge Zhao\"},\"id\":\"898914514733611565\"},{\"created_time\":\"1421601128\",\"text\":\"@whitebadwind 不知道什么花，但应该不是薰衣草，木有香味\",\"from\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"},\"id\":\"900778013826988166\"}]},\"filter\":\"Normal\",\"created_time\":\"1421370258\",\"link\":\"https://instagram.com/p/x5U25kI7sN/\",\"likes\":{\"count\":4,\"data\":[{\"username\":\"nwheather\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_1018712769_75sq_1390664966.jpg\",\"id\":\"1018712769\",\"full_name\":\"Heather Hynes\"},{\"username\":\"zhengezhao\",\"profile_picture\":\"https://igcdn-photos-g-a.akamaihd.net/hphotos-ak-xfp1/t51.2885-19/10727551_282259975296534_305711726_a.jpg\",\"id\":\"1531642371\",\"full_name\":\"Zhenge Zhao\"},{\"username\":\"dingstyle\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_30683156_75sq_1333592929.jpg\",\"id\":\"30683156\",\"full_name\":\"Linjie\"},{\"username\":\"candychang1113\",\"profile_picture\":\"https://igcdn-photos-f-a.akamaihd.net/hphotos-ak-xpf1/t51.2885-19/10725077_1498470533762845_1695396371_a.jpg\",\"id\":\"1133304108\",\"full_name\":\"Candy Chang\"}]},\"images\":{\"low_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xap1/t51.2885-15/s320x320/e15/10903312_693622147425934_1766884651_n.jpg\",\"width\":320,\"height\":320},\"thumbnail\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xap1/t51.2885-15/s150x150/e15/10903312_693622147425934_1766884651_n.jpg\",\"width\":150,\"height\":150},\"standard_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xap1/t51.2885-15/e15/10903312_693622147425934_1766884651_n.jpg\",\"width\":640,\"height\":640}},\"users_in_photo\":[],\"caption\":{\"created_time\":\"1421370258\",\"text\":\"面朝大海冬暖花开\",\"from\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"},\"id\":\"898841334497130569\"},\"type\":\"image\",\"id\":\"898841334228695821_438522285\",\"user\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"}},{\"attribution\":null,\"tags\":[],\"location\":null,\"comments\":{\"count\":0,\"data\":[]},\"filter\":\"Normal\",\"created_time\":\"1421235225\",\"link\":\"https://instagram.com/p/x1TTZUo7gW/\",\"likes\":{\"count\":1,\"data\":[{\"username\":\"zhengezhao\",\"profile_picture\":\"https://igcdn-photos-g-a.akamaihd.net/hphotos-ak-xfp1/t51.2885-19/10727551_282259975296534_305711726_a.jpg\",\"id\":\"1531642371\",\"full_name\":\"Zhenge Zhao\"}]},\"images\":{\"low_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xpa1/t51.2885-15/s320x320/e15/10914460_1546003772305181_1301162053_n.jpg\",\"width\":320,\"height\":320},\"thumbnail\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xpa1/t51.2885-15/s150x150/e15/10914460_1546003772305181_1301162053_n.jpg\",\"width\":150,\"height\":150},\"standard_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xpa1/t51.2885-15/e15/10914460_1546003772305181_1301162053_n.jpg\",\"width\":640,\"height\":640}},\"users_in_photo\":[],\"caption\":{\"created_time\":\"1421235225\",\"text\":\"分享日常不正常生活照一张\",\"from\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"},\"id\":\"897708596666809269\"},\"type\":\"image\",\"id\":\"897708596473870358_438522285\",\"user\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"}},{\"attribution\":null,\"tags\":[],\"location\":null,\"comments\":{\"count\":0,\"data\":[]},\"filter\":\"Normal\",\"created_time\":\"1420456723\",\"link\":\"https://instagram.com/p/xeGbWuo7if/\",\"likes\":{\"count\":2,\"data\":[{\"username\":\"sleepgo\",\"profile_picture\":\"https://igcdn-photos-h-a.akamaihd.net/hphotos-ak-xpa1/t51.2885-19/10296686_814576801887247_861033020_a.jpg\",\"id\":\"332373544\",\"full_name\":\"Tony H\"},{\"username\":\"panpanbiu\",\"profile_picture\":\"https://igcdn-photos-a-a.akamaihd.net/hphotos-ak-xpa1/t51.2885-19/11190893_828079227246904_2044492120_a.jpg\",\"id\":\"299823572\",\"full_name\":\"PANPAN\"}]},\"images\":{\"low_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xta1/t51.2885-15/s320x320/e15/10903277_832760670116494_255352239_n.jpg\",\"width\":320,\"height\":320},\"thumbnail\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xta1/t51.2885-15/s150x150/e15/10903277_832760670116494_255352239_n.jpg\",\"width\":150,\"height\":150},\"standard_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xta1/t51.2885-15/e15/10903277_832760670116494_255352239_n.jpg\",\"width\":640,\"height\":640}},\"users_in_photo\":[],\"caption\":{\"created_time\":\"1420456723\",\"text\":\"其实我想，那些古老的渔民们，每天看着海岸线的日落日出，肯定是有人想过地球是圆的。而“想法”与“证明”之间，却跨越了一整条麦哲伦航道\",\"from\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"},\"id\":\"891178044837051035\"},\"type\":\"image\",\"id\":\"891178044375677087_438522285\",\"user\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"}},{\"attribution\":null,\"tags\":[],\"location\":{\"latitude\":22.100710837,\"name\":\"珠海长隆海洋王国 Zhuhai Chimelong Ocean Kingdom\",\"longitude\":113.535968094,\"id\":259203746},\"comments\":{\"count\":2,\"data\":[{\"created_time\":\"1420249250\",\"text\":\"这鱼好囧！\",\"from\":{\"username\":\"zhengezhao\",\"profile_picture\":\"https://igcdn-photos-g-a.akamaihd.net/hphotos-ak-xfp1/t51.2885-19/10727551_282259975296534_305711726_a.jpg\",\"id\":\"1531642371\",\"full_name\":\"Zhenge Zhao\"},\"id\":\"889437634154445764\"},{\"created_time\":\"1420455887\",\"text\":\"@whitebadwind 大猫会喜欢的\",\"from\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"},\"id\":\"891171033185499457\"}]},\"filter\":\"Normal\",\"created_time\":\"1420241506\",\"link\":\"https://instagram.com/p/xXr70fI7iD/\",\"likes\":{\"count\":1,\"data\":[{\"username\":\"zhengezhao\",\"profile_picture\":\"https://igcdn-photos-g-a.akamaihd.net/hphotos-ak-xfp1/t51.2885-19/10727551_282259975296534_305711726_a.jpg\",\"id\":\"1531642371\",\"full_name\":\"Zhenge Zhao\"}]},\"images\":{\"low_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xpf1/t51.2885-15/s320x320/e15/924083_1539057536347062_2062767438_n.jpg\",\"width\":320,\"height\":320},\"thumbnail\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xpf1/t51.2885-15/s150x150/e15/924083_1539057536347062_2062767438_n.jpg\",\"width\":150,\"height\":150},\"standard_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xpf1/t51.2885-15/e15/924083_1539057536347062_2062767438_n.jpg\",\"width\":640,\"height\":640}},\"users_in_photo\":[],\"caption\":{\"created_time\":\"1420241506\",\"text\":\"鱼山鱼海中，只有你，肯安静的趴在65厘米厚的亚克力板子上与我合影，大丑鱼\",\"from\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"},\"id\":\"889372678713227478\"},\"type\":\"image\",\"id\":\"889372678235076739_438522285\",\"user\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"}},{\"attribution\":null,\"tags\":[],\"location\":null,\"comments\":{\"count\":0,\"data\":[]},\"filter\":\"Hefe\",\"created_time\":\"1420118795\",\"link\":\"https://instagram.com/p/xUB4dOI7g1/\",\"likes\":{\"count\":0,\"data\":[]},\"images\":{\"low_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xpa1/t51.2885-15/s320x320/e15/10890944_765121966897759_2039585477_n.jpg\",\"width\":320,\"height\":320},\"thumbnail\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xpa1/t51.2885-15/s150x150/e15/10890944_765121966897759_2039585477_n.jpg\",\"width\":150,\"height\":150},\"standard_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xpa1/t51.2885-15/e15/10890944_765121966897759_2039585477_n.jpg\",\"width\":640,\"height\":640}},\"users_in_photo\":[],\"caption\":{\"created_time\":\"1420118795\",\"text\":\"新年单人旅行走起。其实从九洲港码头开始，珠海并没有给人很惊喜的感觉，包括盛名之下的沿海风光与渔女雕塑。倒是交通不通畅，从轮渡到公交都给我带来了许多麻烦。直到，晚上吃烤生蚝的第一口，我又觉得什么事情都是可以原谅的……\",\"from\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"},\"id\":\"888343304673147100\"},\"type\":\"image\",\"id\":\"888343304211773493_438522285\",\"user\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"}},{\"attribution\":null,\"tags\":[],\"location\":null,\"comments\":{\"count\":0,\"data\":[]},\"filter\":\"Unknown\",\"created_time\":\"1420028793\",\"link\":\"https://instagram.com/p/xRWN47I7pW/\",\"likes\":{\"count\":2,\"data\":[{\"username\":\"zhengezhao\",\"profile_picture\":\"https://igcdn-photos-g-a.akamaihd.net/hphotos-ak-xfp1/t51.2885-19/10727551_282259975296534_305711726_a.jpg\",\"id\":\"1531642371\",\"full_name\":\"Zhenge Zhao\"},{\"username\":\"elkakosmoss\",\"profile_picture\":\"https://igcdn-photos-f-a.akamaihd.net/hphotos-ak-xaf1/t51.2885-19/11235915_926324447432373_299446423_a.jpg\",\"id\":\"515503821\",\"full_name\":\"\"}]},\"images\":{\"low_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xap1/t51.2885-15/s320x320/e15/10899183_999582293404177_745539859_n.jpg\",\"width\":320,\"height\":320},\"thumbnail\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xap1/t51.2885-15/s150x150/e15/10899183_999582293404177_745539859_n.jpg\",\"width\":150,\"height\":150},\"standard_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xap1/t51.2885-15/e15/10899183_999582293404177_745539859_n.jpg\",\"width\":640,\"height\":640}},\"users_in_photo\":[],\"caption\":{\"created_time\":\"1420028793\",\"text\":\"2014年最后的阳光\",\"from\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"},\"id\":\"887588313553418897\"},\"type\":\"image\",\"id\":\"887588313066879574_438522285\",\"user\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"}},{\"attribution\":null,\"tags\":[],\"location\":null,\"comments\":{\"count\":2,\"data\":[{\"created_time\":\"1419956909\",\"text\":\"life is art. happy new year! kitty!\",\"from\":{\"username\":\"zhengezhao\",\"profile_picture\":\"https://igcdn-photos-g-a.akamaihd.net/hphotos-ak-xfp1/t51.2885-19/10727551_282259975296534_305711726_a.jpg\",\"id\":\"1531642371\",\"full_name\":\"Zhenge Zhao\"},\"id\":\"886985301730507751\"},{\"created_time\":\"1420000813\",\"text\":\"@whitebadwind 元旦快乐！千万记得要把恐龙服穿上！\",\"from\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"},\"id\":\"887353597667556016\"}]},\"filter\":\"Rise\",\"created_time\":\"1419945664\",\"link\":\"https://instagram.com/p/xO3qREI7iW/\",\"likes\":{\"count\":0,\"data\":[]},\"images\":{\"low_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xat1/t51.2885-15/s320x320/e15/10894909_702627706517406_1277557620_n.jpg\",\"width\":320,\"height\":320},\"thumbnail\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xat1/t51.2885-15/s150x150/e15/10894909_702627706517406_1277557620_n.jpg\",\"width\":150,\"height\":150},\"standard_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xat1/t51.2885-15/e15/10894909_702627706517406_1277557620_n.jpg\",\"width\":640,\"height\":640}},\"users_in_photo\":[],\"caption\":{\"created_time\":\"1419945664\",\"text\":\"最后一节吉他课结束后，马路上那风一直吹，才感觉南方的冬天终于是来了。其实吉他在冬天会有许多神奇的事情。比如琴弦如肌肉一样因冷而紧绷，发出比以往沉闷的低语；而空旷的大教室里，如有其他同伴拨响和弦，手中本已按灭的琴弦又会因共鸣微微颤动。像有生命一样。\",\"from\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"},\"id\":\"886890974224300917\"},\"type\":\"image\",\"id\":\"886890973737760918_438522285\",\"user\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"}},{\"attribution\":null,\"tags\":[],\"location\":null,\"comments\":{\"count\":5,\"data\":[{\"created_time\":\"1417442768\",\"text\":\"啊难道不是紫荆？\",\"from\":{\"username\":\"sasanzuo\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_235236445_75sq_1393055700.jpg\",\"id\":\"235236445\",\"full_name\":\"萨桑\"},\"id\":\"865895159683070128\"},{\"created_time\":\"1417475301\",\"text\":\"好漂亮啊 粉色的花！\",\"from\":{\"username\":\"zhengezhao\",\"profile_picture\":\"https://igcdn-photos-g-a.akamaihd.net/hphotos-ak-xfp1/t51.2885-19/10727551_282259975296534_305711726_a.jpg\",\"id\":\"1531642371\",\"full_name\":\"Zhenge Zhao\"},\"id\":\"866168069916179297\"},{\"created_time\":\"1417833120\",\"text\":\"🍀🍀\",\"from\":{\"username\":\"h.cmzsq\",\"profile_picture\":\"https://igcdn-photos-e-a.akamaihd.net/hphotos-ak-xpf1/t51.2885-19/11084897_1407176502933692_1292814398_a.jpg\",\"id\":\"244993178\",\"full_name\":\"🙏\"},\"id\":\"869169669249153672\"},{\"created_time\":\"1419333148\",\"text\":\"incredible @color_blocker\",\"from\":{\"username\":\"jiawenlii\",\"profile_picture\":\"https://igcdn-photos-b-a.akamaihd.net/hphotos-ak-xpf1/t51.2885-19/11093081_735702273195569_1381487601_a.jpg\",\"id\":\"174509764\",\"full_name\":\"嘉文\"},\"id\":\"881752815517808693\"},{\"created_time\":\"1419333206\",\"text\":\"😊 @nicoledaii\",\"from\":{\"username\":\"lawrencens\",\"profile_picture\":\"https://igcdn-photos-h-a.akamaihd.net/hphotos-ak-xaf1/t51.2885-19/11334406_920682824640599_2112492465_a.jpg\",\"id\":\"398977802\",\"full_name\":\"LIQIANLONG\"},\"id\":\"881753305378961490\"}]},\"filter\":\"Normal\",\"created_time\":\"1417442257\",\"link\":\"https://instagram.com/p/wEQykeo7tU/\",\"likes\":{\"count\":4,\"data\":[{\"username\":\"cicici_ton\",\"profile_picture\":\"https://igcdn-photos-a-a.akamaihd.net/hphotos-ak-xap1/t51.2885-19/10632351_1431817843781696_881928506_a.jpg\",\"id\":\"790581808\",\"full_name\":\"佟_季初\"},{\"username\":\"t________.y\",\"profile_picture\":\"https://igcdn-photos-b-a.akamaihd.net/hphotos-ak-xfp1/t51.2885-19/11203194_820402394704713_1736313100_a.jpg\",\"id\":\"1456056098\",\"full_name\":\"Tiffany\"},{\"username\":\"sasanzuo\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_235236445_75sq_1393055700.jpg\",\"id\":\"235236445\",\"full_name\":\"萨桑\"},{\"username\":\"dannisdannis\",\"profile_picture\":\"https://igcdn-photos-d-a.akamaihd.net/hphotos-ak-xaf1/t51.2885-19/10005570_1418618885099779_1080129947_a.jpg\",\"id\":\"1536730862\",\"full_name\":\"Dannis\"}]},\"images\":{\"low_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xap1/t51.2885-15/s320x320/e15/10831989_483313928477468_40906631_n.jpg\",\"width\":320,\"height\":320},\"thumbnail\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xap1/t51.2885-15/s150x150/e15/10831989_483313928477468_40906631_n.jpg\",\"width\":150,\"height\":150},\"standard_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xap1/t51.2885-15/e15/10831989_483313928477468_40906631_n.jpg\",\"width\":640,\"height\":640}},\"users_in_photo\":[],\"caption\":{\"created_time\":\"1417442257\",\"text\":\"有棵丑树，我经常去看，又胖又歪，秃得可笑。在变冷的一天，它突然就开花了。冬天的花我知道得很少，南方没有梅花，那就是异木棉了\",\"from\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"},\"id\":\"865890872693341013\"},\"type\":\"image\",\"id\":\"865890872248744788_438522285\",\"user\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"}},{\"attribution\":null,\"tags\":[],\"location\":null,\"comments\":{\"count\":2,\"data\":[{\"created_time\":\"1415725886\",\"text\":\"这个太厉害了吧！\",\"from\":{\"username\":\"zhengezhao\",\"profile_picture\":\"https://igcdn-photos-g-a.akamaihd.net/hphotos-ak-xfp1/t51.2885-19/10727551_282259975296534_305711726_a.jpg\",\"id\":\"1531642371\",\"full_name\":\"Zhenge Zhao\"},\"id\":\"851492912496883814\"},{\"created_time\":\"1417137485\",\"text\":\"👍 @color_blocker\",\"from\":{\"username\":\"onelai_kk\",\"profile_picture\":\"https://igcdn-photos-d-a.akamaihd.net/hphotos-ak-xaf1/t51.2885-19/11241982_817407918337387_1779316028_a.jpg\",\"id\":\"1289579257\",\"full_name\":\"instagram专业服務💍💍💖💖💖✨✨✨\"},\"id\":\"863334257859475861\"}]},\"filter\":\"Walden\",\"created_time\":\"1415683797\",\"link\":\"https://instagram.com/p/vP2ywuo7pq/\",\"likes\":{\"count\":5,\"data\":[{\"username\":\"_llpsssss\",\"profile_picture\":\"https://igcdn-photos-b-a.akamaihd.net/hphotos-ak-xaf1/t51.2885-19/11232835_794856153954569_504179174_a.jpg\",\"id\":\"236870082\",\"full_name\":\"Beijing🇨🇳UK🇬🇧💖\"},{\"username\":\"yenny227\",\"profile_picture\":\"https://igcdn-photos-c-a.akamaihd.net/hphotos-ak-xta1/t51.2885-19/10919302_830832643620050_701907926_a.jpg\",\"id\":\"268912251\",\"full_name\":\"\"},{\"username\":\"faifaifai99\",\"profile_picture\":\"https://igcdn-photos-b-a.akamaihd.net/hphotos-ak-xfp1/t51.2885-19/11098264_102231303441561_1493195010_a.jpg\",\"id\":\"473489307\",\"full_name\":\"\"},{\"username\":\"sasanzuo\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_235236445_75sq_1393055700.jpg\",\"id\":\"235236445\",\"full_name\":\"萨桑\"}]},\"images\":{\"low_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xtp1/t51.2885-15/s320x320/e15/10784965_1518537748403855_176956695_n.jpg\",\"width\":320,\"height\":320},\"thumbnail\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xtp1/t51.2885-15/s150x150/e15/10784965_1518537748403855_176956695_n.jpg\",\"width\":150,\"height\":150},\"standard_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xtp1/t51.2885-15/e15/10784965_1518537748403855_176956695_n.jpg\",\"width\":640,\"height\":640}},\"users_in_photo\":[],\"caption\":{\"created_time\":\"1415683797\",\"text\":\"通灵之术！\",\"from\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"},\"id\":\"851139843175201387\"},\"type\":\"image\",\"id\":\"851139837403839082_438522285\",\"user\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"}},{\"attribution\":null,\"tags\":[],\"location\":null,\"comments\":{\"count\":0,\"data\":[]},\"filter\":\"Valencia\",\"created_time\":\"1415182653\",\"link\":\"https://instagram.com/p/vA68BLo7tN/\",\"likes\":{\"count\":1,\"data\":[{\"username\":\"yenny227\",\"profile_picture\":\"https://igcdn-photos-c-a.akamaihd.net/hphotos-ak-xta1/t51.2885-19/10919302_830832643620050_701907926_a.jpg\",\"id\":\"268912251\",\"full_name\":\"\"}]},\"images\":{\"low_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xfp1/t51.2885-15/s320x320/e15/10735195_1505939246340704_1984926778_n.jpg\",\"width\":320,\"height\":320},\"thumbnail\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xfp1/t51.2885-15/s150x150/e15/10735195_1505939246340704_1984926778_n.jpg\",\"width\":150,\"height\":150},\"standard_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xfp1/t51.2885-15/e15/10735195_1505939246340704_1984926778_n.jpg\",\"width\":640,\"height\":640}},\"users_in_photo\":[],\"caption\":{\"created_time\":\"1415182653\",\"text\":\"现场气氛果然不一样，马上就可以看到小伞在大哥胯下疯狂输出…是时候来首选一记薇恩了\",\"from\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"},\"id\":\"846935942288882458\"},\"type\":\"image\",\"id\":\"846935941080922957_438522285\",\"user\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"}},{\"attribution\":null,\"tags\":[],\"location\":null,\"comments\":{\"count\":1,\"data\":[{\"created_time\":\"1415116538\",\"text\":\"@litten225 相当细腻的书啊\",\"from\":{\"username\":\"zhengezhao\",\"profile_picture\":\"https://igcdn-photos-g-a.akamaihd.net/hphotos-ak-xfp1/t51.2885-19/10727551_282259975296534_305711726_a.jpg\",\"id\":\"1531642371\",\"full_name\":\"Zhenge Zhao\"},\"id\":\"846381329076697864\"}]},\"filter\":\"Unknown\",\"created_time\":\"1415010755\",\"link\":\"https://instagram.com/p/u7zEVxo7vw/\",\"likes\":{\"count\":2,\"data\":[{\"username\":\"yenny227\",\"profile_picture\":\"https://igcdn-photos-c-a.akamaihd.net/hphotos-ak-xta1/t51.2885-19/10919302_830832643620050_701907926_a.jpg\",\"id\":\"268912251\",\"full_name\":\"\"},{\"username\":\"dingstyle\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_30683156_75sq_1333592929.jpg\",\"id\":\"30683156\",\"full_name\":\"Linjie\"}]},\"images\":{\"low_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xfp1/t51.2885-15/s320x320/e15/10747711_429336373885590_422028037_n.jpg\",\"width\":320,\"height\":320},\"thumbnail\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xfp1/t51.2885-15/s150x150/e15/10747711_429336373885590_422028037_n.jpg\",\"width\":150,\"height\":150},\"standard_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xfp1/t51.2885-15/e15/10747711_429336373885590_422028037_n.jpg\",\"width\":640,\"height\":640}},\"users_in_photo\":[],\"caption\":{\"created_time\":\"1415010755\",\"text\":\"有朋友跟我说，挪威的森林根本看不下去；又有朋友说，看这书一发不可收拾。差别好大呀！我倒觉得有个简单的方法：翻到开篇的这几个字，如果心中一紧，那就说明这本书适合你，否则请弃之\",\"from\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"},\"id\":\"845493955538958871\"},\"type\":\"image\",\"id\":\"845493953693465584_438522285\",\"user\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"}},{\"attribution\":null,\"tags\":[],\"location\":null,\"comments\":{\"count\":2,\"data\":[{\"created_time\":\"1414650783\",\"text\":\"cute!\",\"from\":{\"username\":\"zhengezhao\",\"profile_picture\":\"https://igcdn-photos-g-a.akamaihd.net/hphotos-ak-xfp1/t51.2885-19/10727551_282259975296534_305711726_a.jpg\",\"id\":\"1531642371\",\"full_name\":\"Zhenge Zhao\"},\"id\":\"842474292689222356\"},{\"created_time\":\"1414759282\",\"text\":\"🆒 @zhaolei395395\",\"from\":{\"username\":\"tearpkc\",\"profile_picture\":\"https://igcdn-photos-c-a.akamaihd.net/hphotos-ak-xpf1/t51.2885-19/10611023_1535665483313234_214736228_a.jpg\",\"id\":\"1476911167\",\"full_name\":\"\"},\"id\":\"843384447673023032\"}]},\"filter\":\"Hefe\",\"created_time\":\"1414579138\",\"link\":\"https://instagram.com/p/uu70zJo7qb/\",\"likes\":{\"count\":5,\"data\":[{\"username\":\"cachiulee\",\"profile_picture\":\"https://igcdn-photos-h-a.akamaihd.net/hphotos-ak-xfa1/t51.2885-19/11377676_692543867516879_1892210321_a.jpg\",\"id\":\"951795449\",\"full_name\":\"Tonnie Cox's new ins ac\"},{\"username\":\"yenny227\",\"profile_picture\":\"https://igcdn-photos-c-a.akamaihd.net/hphotos-ak-xta1/t51.2885-19/10919302_830832643620050_701907926_a.jpg\",\"id\":\"268912251\",\"full_name\":\"\"},{\"username\":\"fanghonglia292\",\"profile_picture\":\"https://igcdn-photos-f-a.akamaihd.net/hphotos-ak-xpa1/t51.2885-19/10518268_489599821175797_494026352_a.jpg\",\"id\":\"1451952020\",\"full_name\":\"Fanghonglia292\"},{\"username\":\"olivia__cyrus\",\"profile_picture\":\"https://igcdn-photos-f-a.akamaihd.net/hphotos-ak-xpf1/t51.2885-19/10802807_762277510528189_2055295258_a.jpg\",\"id\":\"619274757\",\"full_name\":\"\"}]},\"images\":{\"low_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xpa1/t51.2885-15/s320x320/e15/10735112_730529873702428_413107753_n.jpg\",\"width\":320,\"height\":320},\"thumbnail\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xpa1/t51.2885-15/s150x150/e15/10735112_730529873702428_413107753_n.jpg\",\"width\":150,\"height\":150},\"standard_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xpa1/t51.2885-15/e15/10735112_730529873702428_413107753_n.jpg\",\"width\":640,\"height\":640}},\"users_in_photo\":[],\"caption\":{\"created_time\":\"1414579138\",\"text\":\"天下的小饼干遇到我，貌似就只有一种下场！！\",\"from\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"},\"id\":\"841873294635546895\"},\"type\":\"image\",\"id\":\"841873293444364955_438522285\",\"user\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"}},{\"attribution\":null,\"tags\":[],\"location\":null,\"comments\":{\"count\":0,\"data\":[]},\"filter\":\"Earlybird\",\"created_time\":\"1413561977\",\"link\":\"https://instagram.com/p/uQnvluo7sK/\",\"likes\":{\"count\":2,\"data\":[{\"username\":\"yenny227\",\"profile_picture\":\"https://igcdn-photos-c-a.akamaihd.net/hphotos-ak-xta1/t51.2885-19/10919302_830832643620050_701907926_a.jpg\",\"id\":\"268912251\",\"full_name\":\"\"},{\"username\":\"wallbase.hd\",\"profile_picture\":\"https://igcdn-photos-g-a.akamaihd.net/hphotos-ak-xpf1/t51.2885-19/10617029_283951291805046_1229690122_a.jpg\",\"id\":\"1489501811\",\"full_name\":\"\"}]},\"images\":{\"low_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xtp1/t51.2885-15/s320x320/e15/10725177_573652486072155_1401604216_n.jpg\",\"width\":320,\"height\":320},\"thumbnail\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xtp1/t51.2885-15/s150x150/e15/10725177_573652486072155_1401604216_n.jpg\",\"width\":150,\"height\":150},\"standard_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xtp1/t51.2885-15/e15/10725177_573652486072155_1401604216_n.jpg\",\"width\":640,\"height\":640}},\"users_in_photo\":[],\"caption\":{\"created_time\":\"1413561977\",\"text\":\"一个人，一支口琴，一片海，一瓶酒\",\"from\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"},\"id\":\"833340726864755382\"},\"type\":\"image\",\"id\":\"833340725203811082_438522285\",\"user\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"}},{\"attribution\":null,\"tags\":[],\"location\":null,\"comments\":{\"count\":1,\"data\":[{\"created_time\":\"1413394943\",\"text\":\"cool @gaoxiaobao_\",\"from\":{\"username\":\"accoo7\",\"profile_picture\":\"https://igcdn-photos-f-a.akamaihd.net/hphotos-ak-xap1/t51.2885-19/10570213_329504053891349_1283692450_a.jpg\",\"id\":\"287433724\",\"full_name\":\"\"},\"id\":\"831939546255178477\"}]},\"filter\":\"Valencia\",\"created_time\":\"1413391668\",\"link\":\"https://instagram.com/p/uLi56Wo7oO/\",\"likes\":{\"count\":1,\"data\":[{\"username\":\"yenny227\",\"profile_picture\":\"https://igcdn-photos-c-a.akamaihd.net/hphotos-ak-xta1/t51.2885-19/10919302_830832643620050_701907926_a.jpg\",\"id\":\"268912251\",\"full_name\":\"\"}]},\"images\":{\"low_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xaf1/t51.2885-15/s320x320/e15/10724868_302191016652312_2097904817_n.jpg\",\"width\":320,\"height\":320},\"thumbnail\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xaf1/t51.2885-15/s150x150/e15/10724868_302191016652312_2097904817_n.jpg\",\"width\":150,\"height\":150},\"standard_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xaf1/t51.2885-15/e15/10724868_302191016652312_2097904817_n.jpg\",\"width\":640,\"height\":640}},\"users_in_photo\":[],\"caption\":{\"created_time\":\"1413391668\",\"text\":\"《论夜归，打的，以及发票的正确用法》\",\"from\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"},\"id\":\"831912071466826589\"},\"type\":\"image\",\"id\":\"831912069428394510_438522285\",\"user\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"}},{\"attribution\":null,\"tags\":[],\"location\":null,\"comments\":{\"count\":0,\"data\":[]},\"filter\":\"Rise\",\"created_time\":\"1413163642\",\"link\":\"https://instagram.com/p/uEv-tCo7rJ/\",\"likes\":{\"count\":1,\"data\":[{\"username\":\"yenny227\",\"profile_picture\":\"https://igcdn-photos-c-a.akamaihd.net/hphotos-ak-xta1/t51.2885-19/10919302_830832643620050_701907926_a.jpg\",\"id\":\"268912251\",\"full_name\":\"\"}]},\"images\":{\"low_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xap1/t51.2885-15/s320x320/e15/10731727_461314204008708_386749273_n.jpg\",\"width\":320,\"height\":320},\"thumbnail\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xap1/t51.2885-15/s150x150/e15/10731727_461314204008708_386749273_n.jpg\",\"width\":150,\"height\":150},\"standard_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xap1/t51.2885-15/e15/10731727_461314204008708_386749273_n.jpg\",\"width\":640,\"height\":640}},\"users_in_photo\":[],\"caption\":{\"created_time\":\"1413163642\",\"text\":\"童年真好。我以后一定不要跟孩子说：希望你快高长大这种傻话…\",\"from\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"},\"id\":\"829999248859969681\"},\"type\":\"image\",\"id\":\"829999248499260105_438522285\",\"user\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"}},{\"attribution\":null,\"tags\":[],\"location\":null,\"comments\":{\"count\":1,\"data\":[{\"created_time\":\"1412404756\",\"text\":\"👍GOOD\",\"from\":{\"username\":\"somnusresia\",\"profile_picture\":\"https://igcdn-photos-a-a.akamaihd.net/hphotos-ak-xaf1/t51.2885-19/11380897_1586097328311216_1597361628_a.jpg\",\"id\":\"249391877\",\"full_name\":\"Somnus Wen\"},\"id\":\"823633252150655824\"}]},\"filter\":\"Valencia\",\"created_time\":\"1411652721\",\"link\":\"https://instagram.com/p/tXuIHso7qK/\",\"likes\":{\"count\":2,\"data\":[{\"username\":\"yenny227\",\"profile_picture\":\"https://igcdn-photos-c-a.akamaihd.net/hphotos-ak-xta1/t51.2885-19/10919302_830832643620050_701907926_a.jpg\",\"id\":\"268912251\",\"full_name\":\"\"},{\"username\":\"cherrymomo412\",\"profile_picture\":\"https://igcdn-photos-a-a.akamaihd.net/hphotos-ak-xap1/t51.2885-19/10802961_759165964121336_488483054_a.jpg\",\"id\":\"54007423\",\"full_name\":\"cherrymomo\"}]},\"images\":{\"low_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xaf1/t51.2885-15/s320x320/e15/10616983_1382591478697855_2107473552_n.jpg\",\"width\":320,\"height\":320},\"thumbnail\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xaf1/t51.2885-15/s150x150/e15/10616983_1382591478697855_2107473552_n.jpg\",\"width\":150,\"height\":150},\"standard_resolution\":{\"url\":\"https://scontent.cdninstagram.com/hphotos-xaf1/t51.2885-15/e15/10616983_1382591478697855_2107473552_n.jpg\",\"width\":640,\"height\":640}},\"users_in_photo\":[],\"caption\":{\"created_time\":\"1411652721\",\"text\":\"我的好朋友——超级高冷超级磨人的丝瓜\",\"from\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"},\"id\":\"817324726096738307\"},\"type\":\"image\",\"id\":\"817324725551479434_438522285\",\"user\":{\"username\":\"litten225\",\"profile_picture\":\"https://instagramimages-a.akamaihd.net/profiles/profile_438522285_75sq_1393602208.jpg\",\"id\":\"438522285\",\"full_name\":\"litten\"}}]}"}],"posts":[{"title":"2020新起点","slug":"2020新起点","date":"2020-01-07T14:59:12.000Z","updated":"2020-01-09T16:55:01.032Z","comments":true,"path":"2020/01/07/2020新起点/","link":"","permalink":"http://zichao.me/2020/01/07/2020新起点/","excerpt":"","text":"2020年的第7天，结束了日本的行程后，我又进入了工作的节奏中，很希望20年于我会是崭新的一年，让它会成为我新的开始。想起抖音的“2019年度加油”的视频，再回顾我自己的19年，真的不容易，太南了。 1、抖音春晚18年末，我转到抖音已经半年了，正在参加春节项目的封闭，压力大，时间紧，整体的节奏又回到了Biu项目组的状态。讲道理，我感觉比之前要累很多了，或许是强度更大，或许是身体开销多了，我不得不每周都去做个按摩，进入字节跳动这么久，第一回觉得有些扛不住。到了元旦节，我回了重庆一趟，去交接房子，终于拿到了房产证，也算是人生的一个可喜之事，在解放碑跨了一次年，作为一个假重庆人，终于还是去听了解放碑的新年钟声。由于封闭的春节项目还在紧张进行，元旦一结束我就立马飞回了北京。 2、爷爷走好第二天继续上班，沉浸在紧张的项目中，我妈电话打来：你爷爷去世了。心头一紧，好好的一个人就这样突然走了，一时说不上来话，复杂的心情交织在焦虑的工作情绪里。我查了当天的机票，还好晚上就有直飞黔江的。整理好工作的事，和领导同事说明情况，我又出发返回重庆，直奔家里。我爸必是伤心，都知道他是孝顺的人，此时忙着处理后事，从我出发直至到达家里，我们没有通过电话，只在见到我时，说了一声儿子回来了。我上前给爷爷烧香，望着逝去的爷爷，内心不禁难过，上次回家的印象还在脑海里，清晰的谈吐开心的笑容，明明还有好多年，明明还能看到我结婚生子的，却这样离开了，剩下奶奶一个人，那会多孤单。我就这样望着，望着爷爷走向了长眠。之后，没有长假期，我还是在事务结束后返回了北京，依旧得调整自己的心情投入工作中，顶着内心的压力。等到春节前，抖音与春晚合作的项目终于上线了，我才又回家过年。 3、绩效预期工作到4月初，开始评定18年的绩效年终考核，结果正常，但小于我的预期，看来我在哪里出现了问题。反思工作过往，与同事交流，虽然过去也走了一些弯路，但最终决定性的影响还是那个本质的问题：我终究是没有那么热爱软件编程这个岗位，进而也无法长期全心全意的去做这份事业。尽管我辛苦劳累的工作，始终把公司的目标放在前位，但我实际并没有发挥出该有的业绩。与多位朋友交流，得到的回复也是，你看起来不像程序员。我承认了，我需要开始面对这件事情了，从最初对编程的激情到如今只是正常的完成工作，似乎已经验证这不符合了我的期望和个性，如果我继续坚持做下去，似乎也看到了未来会是个什么样子，是时候做出一些改变了，大胆一点尝试。 4、尝试产品想到从前学习技术的初衷，明确的是为了能够作出一款有价值有意义的互联网产品。随着在公司的不断深入工作学习，我发现这个目标离我是忽远又忽近，已经长期在技术事情上挣扎，我需要把目光和思维做一些产品上的转变。经过深思熟虑，我坦诚得向领导表达的意愿，希望能够得到他的帮助，往产品方向进行调整。实在可贵，领导格局大，对我的想法给予了理解和支持，换做其他人我估计也不会说了。然后我首先找到曾经一起共事的产品同事，向他们表达了自己的想法，在交流中解决了我的一些困境，同时我也发现原来已经好久，我都没和他人交流了。之后我再尝试着去接触各产品业务线，寻找是否有转岗为产品经理的机会。过了一段时间，大致定位在飞聊，因为一直在社交产品有兴趣，他们也有人员需求。我秉着很大的决心去做这件事情，我写了产品分析报告，对飞聊产品提出了很多建议和想法，和产品负责人前后也聊了多次，他给予了我一个机会，前提是有空还得支持研发，我答应了。但当我在抖音已经发起转岗流程时，飞聊那边却改了口，说我不合适。猛然醒悟，他本身还是想忽悠我去做研发，见不成就拒绝了，我开始理解作为项目负责人视角所该考虑的，企业和领导需要的都是能直接产生价值的人，我还是年轻，too naive。这个产品负责人也没有好好的处理这件事情，反而是给我上了一课。人生就是这样，当你作出与环境与自身不相符的选择时，就会有人出来给你上一课。到了这一步，我也就选择听从自己领导的建议，先在抖音主动参与产品，观察数据、提出策略想法，整体感知产品工作，再做打算。当一个人站在自己领导的角度思考时，就会发现领导的一路高歌直上，带领这么大的团队，不是没有道理的，内心只有佩服和感激。 5、WWDC到了6月份，我有机会去硅谷参加苹果全球开发者大会（WWDC）,这是每一个苹果开发者梦想的圣地，被称为一年一度的朝圣。正值中美贸易战局势紧张，我的签证下来的时间非常晚，直到出发前的3天才拿到，差点朝圣之旅就成为了幻泡影，果然大使馆外的加急服务还是有些效果，也说明任何产业都可能存在灰色地带。怀着激动的心情我出发了，第一次踏上美利坚的土地，对硅谷向往和憧憬，对国外环境也期待。第一天，到达苹果大会现场时，我们受到了热烈的欢迎，与来自全世界的程序大佬相聚一趟，非常的激动，用着蹩脚口语与人家愉快的交流。随后两天，我们各自联系了当地的朋友，一起去了游览了斯坦福大学，参观了Google、Apple、Facebook和Airbnb的办公区，也与朋友交流想法，阐述国内外的差异。我在Google见了大学时期的同学，洪奥、刘思齐、林越，真的是好久不见，愉快谈起了如今的生活。还有幸去了一个朋友的家里，访问了人家的小别野庭院，了解本地生活。最后的几天，我和同事一起自驾看了很多自然风光，去了旧金山，去了优胜美地，去了一号公路沿海，好好的领略了一下美利坚的自然生态。外国的月亮挺圆的，确实是好，不过我还是最爱我的中华大地。我与同事一路同行，晚上住在圣何塞郊区的一个别野里，实际感受了一把美国人的居住生活。整个行程里，我对美国的生活环境、工作环境和自然环境都作了了解，开阔了视野。 6、痛苦分手到此，磕绊的上半年就过去了，却不曾想下半年才是真的压力山大。在7月，我与谈了2年的女朋友分手了，此次特意独自去日本跨年，也是想翻篇，毕竟人要往前看，如今在这写总结时，心里还是起伏。我俩在一起有快乐有美好有幸福，也很认真的对待了这份感情，真挚热烈，遗憾的是我们一路都伴随着争吵和分歧，思想差别大，用了两年的时间都没能达到一个期望的状态，里面有我的年轻不懂事，也有她的要强与脾气。分手后我很难过，没有一个好的状态在对待工作生活，常常在夜里哭醒，在工位上掉眼泪，是的，我是个爱哭的长不大的人，虽然平常自强自立，敢闯敢做，但是遇到了这样善良的人内心怎能不柔软，却如何要与这样一个真挚的女生分开。我们一路经历了很多，哭了很多次，从来没有这样的感情和状态，一度以为我们可能是注定的，现实却又多次证明我们可能是真的不合适。也曾回去找她沟通过，但彼此还是没能达到一个好的心理状态，可能有些故事就是这样，有些人就是这样，她只是你生命陪你一段的人，有时还会去翻她的抖音，就默默的观看。我想放下了，已经度了半年难熬的日子，内心怀念和感激，希望元旦是我最后一次哭醒，我需要往前走了。 7、备考清华生活还在，工作还有，我努力调整状态，去寻找下一个起点。工作这几年主要专注于技术领域，虽然平常也看新闻看资讯扩展视野，但精力还是集中在软件编程上，我的专业能力变精了，但也变窄了，逐渐看到了方向和自己需要改变提升的地方，开始把成为复合型人才作为下一阶段的目标，学习商业和管理知识，逐渐走向管理层，甚至创业。同时，我没有忘记心中的求学之路，内心重新燃烧起了清华园的梦想。要问我如今懊悔的事情，高中没有全身心搞好学习算是一件了。我在网络上学习知识，探索新的突破口，也向一些过来人请教，综合考虑后，最后我决定报考清华大学的工商管理硕士（MBA）。因为清华大学经管学院的培养模式和体系，正好就是针对我这样的工科型人才，从以前的职业路径到未来的职业发展都出现较大程度的吻合。虽然北大也能达到提升目标，但我隐约觉得与清华见面的时机到了，开始在业余准备面试和笔试，推掉了不少聚会。备考过程是很漫长的，先要通过面试，才有资格参加12月的研究生入学笔试。多番咨询后我报了一个辅导班，还是挺有用的，像我这样平常忙于工作的人确实没有时间去研究很多，这个辅导班帮助了不少，也结识了很多朋友。本来我也平常的大部分人以为此次比较好报考，真正进入却才发现与你竞争的人都很优秀，来自美国藤校的，本科清北的，创业已经有气色的，企业的中高管，家族企业的，厉害的人很多，我看到了核心真谛，也看到了希望，自身已泯然众人矣。当然，我并没有放弃，按照一定的节奏准备着，毕竟自己还是有个别可以骄傲的点。按照学校的时间，我拿了人大和复旦作为面试清华前的练习，再反复的对比和观察自己的谈吐形象，把握突出自己的职业优势和发展潜力，比较幸运，我在经过激烈的清华面试后的一个月，收到了通过面试的结果，这算是我19年来的一件开心的事了。当晚我与公司的同事去三里屯蹦了第一次迪，疲惫却开心的回了家。接下来就是漫长的入学笔试了，我又回到了备考研究生的赛道上，这一次，我有了清晰的目标和良好的心态，知道未来该怎么走了，不再为了清华而清华。这个过程很漫长，很痛苦，平常工作又很忙，白天上班，晚上回去复习到深夜，我很感谢互联网公司相对宽松的早上到班时间，让我早上能多睡一会。就这样，在分手的痛苦里，在工作的压力中，我一点点的推进着考研的长征路。12月下旬，我考完了笔试，身心疲惫的踏上了日本的元旦之旅。 7、元旦跨年刚到日本的时候，我还是没有放松身心，看着lark里面的消息，回复消息问题，直到晚上快跨年的时候，才开始有些节日的氛围，慢慢的头脑有些放松了，走出了工作的节奏，在东京塔完成了自己的跨越。第二天是元旦，我去浅草寺祈祷抽签，听说这里的签很准，也许是明明之中有安排，我抽了一个2号签是小吉，细看解释就如同为我量身定做一般，我深以为心诚则灵。签上说到，你未来会经历一些波动，但是努力做好自己就能顺利渡过；你需要向他人寻求帮助；你等待的人会自然的出现；你的工作需要停止。看到前面两句觉得还好，看到第三句时，我以为可能是常规套词。但看到最后一句时，我相信命运了。是的，我要去读书的话，就需要辞职，这完全就是我的写照。嗯，我一定要在20年好好努力，相信会有一个好未来。后面的几天，我分别去了几个地方打卡，见到了以前只在书本上看到的富士山，还去了箱根、横滨，见了高中老朋友丁豪，一起交流，一起泡了个温泉。整体挺愉快，见识了不一样的霓虹国。 8、心愿目标回顾我的19年，虽然很难，但是也取得了一些转折性胜利，为20年打下了坚实基础。我在工作上是有进步的，4月绩效正常，但9月绩效得到了领导的肯定，符合我的预期，也很感谢领导的支持与关怀，学习他的大格局。同时，我在思维上有了质的转变，跳出了常规工作范畴，我相信思想决定做事的方式和方法，更能为企业组织作出价值。如今，更重要的是，我也对未来产生了新的规划，找到了新的发展路线。只有经历了19年的痛苦，才能开启20年的新生。就像那句话，熬得过就成功，熬不过就认命。我熬过来了，相信20年等待我的是更美好的未来，为新年立下心愿与目标，不断奋斗。 努力工作，良好的完成业务，做更多有价值的事情，回馈公司和感恩领导。 等待3月研究生考试的成绩，积极准备求学读书之路，圆梦清华。 重新拾起耽搁了一年的钢琴学习课程。 开始做一个内容创作者，培养一个抖音号，建立影响力。 开发一款工具软件，作为结束程序员职业生涯的一份作品。 健身，保持良好的身心状况。 多出去参加活动，认识新朋友，走出旧伤，毕竟也快28了。 回家生活一段时间，陪陪父母。 加油！未来可期！2020绽放！","categories":[],"tags":[{"name":"总结","slug":"总结","permalink":"http://zichao.me/tags/总结/"}]},{"title":"认识MBA","slug":"认识MBA","date":"2019-03-03T14:59:12.000Z","updated":"2019-03-03T08:01:23.356Z","comments":true,"path":"2019/03/03/认识MBA/","link":"","permalink":"http://zichao.me/2019/03/03/认识MBA/","excerpt":"","text":"MBA全称Master of Business Administration,中文是工商管理硕士，听到这个词是从一位工作人多年的长辈那里，那个时候我还在上大学，对MBA的理解很少，自己学的是工科，平常做的事情多数是技术相关，因此也较少接触到。后来随着工作时间的延长和个人阅历的改变，我开始出现申请读MBA的想法。 一、认识相比传统意义上的大学，工作后报考的MBA其实属于半商半学，和普通的大学毕业时候报考的硕士研究生，在起源和培养上都是有区别的，商业活动占一半，大学教育占一半，依托于学院的商业机构进行项目合作培养。这样的培养也同时存在一些商业项目，比如EMBA，全称高层管理人员工商管理硕士，主要培养商业领袖，是很多企业老板的就读选择，国外高管多数是这样，毕业后回馈母校，比如北大光华学院的椅子背后都写了捐赠人。 不过，对于MBA认可度不必担心，工商管理硕士和普通报考的硕士一样属于专业硕士，是由教育部认可并下放名额，然后颁发学历学位证书。如果你拥有出色的工作成绩和管理经验，那么完全可以报考MBA,不仅可以提升学历，扩展眼界知识，也能结识同学资源，甚至找到终身伴侣，有的人还能圆了高考失利的名校梦。 报考需要参加国家同意的研究生考试，科目包括英语和综合，综合包括：数学、逻辑、写。同时也需要面试，商学院的目标是帮助那些最有可能成功的或者是即使没有mba也能成功的人，这些人成为面试筛选的目标人群，近几年越来越多的人报考，你该思考的是你能给商学院带来什么？ 1、我的背景于MBA的距离？ 帮助已经成功的人更成功和可能成功的人。 厦门大学：4年、大中型管理、表彰的先进工作者、资深或高级员工、本人创业并且实际参与经营、持有cfa\\cpa、雅思6.0或者gmat600 发展很好的公司，顺势而为，比如05年的腾讯毕业4年就搞定 工作本身要具有竞争力，比如空姐、健身教练这些就没有竞争力 没管理也可以参加，但是要有管理潜力，评估自己的优缺点 收入需要满足条件 2、家里没旷是否读得起？ 在职：60万 - 30万 供需不平衡，资源是有限的，把愿意支付高昂学费的人筛选出来 管理层晋升的最佳途径，中高层 商学院的品牌效应 资历最好最受欢迎的教授，有可能学生怼死教授 有低利率的贷款，毕业后再还，花未来的钱投资现在的自己 读mba大多是中产阶级，才必须努力支持 3、读完mba能成大牛吗？ 读完之后是什么状态，学历提升，整个行业的公司随便挑，进入门槛后，才能发挥价值 强大的校友资源，同窗友谊，一起撸串、出国、做作业 培养自己成为工商管理的人才，系统学习管理知识 心态上的改变，在身边的人更自信 视野上的提升，光华海外交流课程：短期游学1周、交流3个月、第二学年再国外 拥有更多的可能性，当然也遵循二八法则，差距越来大 4、mba课程是万金油吗？ 北大光华和清华经管是状元的聚集地，企业高管多数是工商管理 每个学校课程结构设置相似，管理学、经济学、财务、营销、商业实战等等，专业性比较高的课程里先进者带动后学者 个别学校有特色课程 学分制，出勤率、考试、小组作业、毕业论文，严进宽出 本质是学习管理，核心是决策，商界的黄埔军校 不会教你赚大钱，教授们没有创业过 方便转行，每个行业都需要管理者，跳槽50%，可以帮助你完成职业转变 课程会忘记，同学是资源，更多是同学的互相学习 读不读看自己的需求，读什么水平看自己能力，读完变成谁看自己的野心 思维方式肯定改变 二、报考1、什么样的人时刻报考mba? 一定工作经验急需开阔视野 丰富实战经验想要回头补充理论知识 想要提升学历背景的 工作寻求更大突破，不上不下，进一步上升困难，全面提升后作为新起点 想学习管理知识的，已经出色但是凭借经验无法处理的问题，学识加成 人际圈子狭小，渴望高品质社交 想要找到优质人生伴侣，也有被拆散家庭的风险 25-31岁，具备一定经济基础，知道自己缺乏和需要什么 一定具有学习能力和工作能力 2、报考条件是否可以商量？ 学历必须符合，大专5本科3 英语，提前面试有的学校包含英语口语，学期包含海外交流板块，联考必须考英语2 工作背景，最好具有一定的管理经验，对企业的实际情况有深入认识，具备较好的领导才能，工作具有竞争力和潜力 年龄，平均工资年限是8年，虽然工作年限是那样，但是普遍要长一点 3、我的大学专业影响我报考mba? 并没有跨专业一说，任何专业都可以报考，无论医学、设计、表演 提前面试对管理能力和领导能力的考核 非全日制本科在个别学校是有区别的，但是工作学习能力、综合素质高是特例 告诉老师们不光写日记还会背单词，展示了自己的坚持能力 很多工程师是为了改变自己的现状，需要让老师看到转行为商业是没有问题的 4、报考流程，我到北大mba需要几步？ 提前面试、考试、复考，最少2年，有的学校需要3年，比如厦门和武汉大学 提前面试：5月-11月，官网查询，允许考2年，第3年重新面试 全国联考：综合：数学是高中数学、逻辑公务员判断、写作论说文、论证分析，英语科2时六级水平 国家线都达到，英语单科线，总分线，综合线 政治，学校自己出题，会出大纲，每年都会淘汰一小部分人，马列、毛思、社会主义现代化 英语听力考试 政审复试 7月份收到录取通知书 5、提前面试到底面什么？ 每个学校不同，组面与个面考核综合素质 组面：七八个人探讨，老师旁观，比如华科 个面：多个老师对你，比如清北 教育背景、学校成绩、学习能力 职业经历：工作性质、工作成绩、担任职务、企业规模、该行业的了解程度 仅仅是搞研发或者会计，工作内容比较单一 你的个人成绩大于的企业，必须在组织里取得很好的成绩，最忌讳谈公司多厉害而不是自己 任职的企业，快速发展的公司又于缓慢的人走到 思维逻辑和反应能力，判断问题的思考和回答，抓住问题的重点 某些院校还有压力面试，形象和谈吐也重要，看一部分颜值 表现出上进、求知 6、选顶尖mba还是适合自己的mba？ 地点，哪个城市工作可以考虑当地附近的，在职每个周末都上课，异地成本开销大，全日制不受影响 学费：北大光华2019年，32万，复旦在职接近40万 专业偏好：比如上交和清华也有分开的，金融班、创业班、国际班 结合学校：理工还是人文，是否有特色课程 时间，是否忙得难以上课做作业 录取率，如何在一群优秀的人里面脱颖而出 7、清华与北大的区别？ 学校风格：清华走的是精英风格，比如2016年大专生不允许报考，在教育部基础上提高了很多，70%名校本科生，联考分数比北大高。北大是兼容并包的风格，按照教育部条件招生。 学员的区别：清华精英意识和凝聚力更强，比较注重外面的舆论。北大不在乎，不拘一格降人才，我就是国内第一学府。 商学院：清华经管，公布学生数据，背景都很强，招到的是职业经理人，北大光华不公布数据，找的是未来的企业家，更加看重潜力。 8、普通硕士、MBA、EMBA总裁班的区别？ 培养目标：mba是具有职业背景的硕士学位，特定职业高层次人才，普硕，教育和科研人才。 招生条件：普硕不需要具有工作年限，mba一定需要工作经验。 招生考试：考试内容和难度不同，普硕要难很多，也是含金量不高的原因的来由，但是mba的淘汰率是远高于普硕的。所以归根到底是定位的不同。 学习方式不同：普硕都是全日制，mba是可以非全日制的，而且非全日制是远多于全日制的，大多数人不愿意脱产。 学费不同：学校设的门槛，筛选出优秀的人。 MBA与E总裁班的区别：中小企业的老板，混圈子、学习管理知识同时不用耽误时间，颁发培训证书，不是学历证也不是学位证。人数不设限制，照得越多赚钱越多，mba是教育部设定的人数，招生是全国统一的，有毕业证与学位证。 EMBA：高级管理人员，过去只有学位证，2017年起需要统一参加年考，毕业后开始学历证。清华北大特权，可以自主命题和划线，给老板们一条不一样的通道。入学流程与mba一样，emba面试成绩占90%，过去很多明星喜欢，年纪偏大，39，职位很高决策者，老板读的项目。学费昂贵，50-70万，也是盈利项目，家里有矿就能读的就是这种。mba不盈利，教学为目的。 9、在职与全日制怎么选？ 在职：在职人员，一个月2-3个周末，2017后年起毕业证开始非全日制的盖章区别，但是跳槽是没有大区别，由学位决定，企业不做区别。年纪偏大，人数远多于全日制。学习背景稍微低，但是职位和薪资要求高。在职的通过人数要低一些，因为报考人数更多。在职比全日制学费更贵。中文班。 全日制：上课时间和普硕差不多，全日制毕业证，应届身份。年纪偏小，清北希望报考低于30周岁。学历背景考核的比例更高，国外没有非全日制，中国是特色的社会主义道路。招生的人数不多，背景基本都是本科名校。含金量是同等的，为什么对在职有偏见，有的不需要参加统考，以前存在在职研究生。很多不招收中文班，基本都是英文班，全英文授课。 三、备考1、如何备考？ 了解院校的招生流程，弥补工作背景和学习能力 笔试复习，用心复习3-4月，全力复习4科，每天复习2门 英语解决单词问题，大声读出来，用黑板写出来放在视线可见处，考前一个月作文模版 数学参考机工版教材，淘宝、网课 逻辑不拉分，作文要听辅导班的课程，很拉分，多练笔 4个月，除去工作，每天4个小时 看到热点新闻可以说说自己的看法？ 2、mba辅导班的作用？ 相对于个人盲目复习，辅导班对考点把握好，知识结构方式可以，增加考试把我和信息。 面试辅导和笔试辅导，不能保证进入或者拿到名额，面试辅导如果找得到校友资源，直接找师哥师姐，校友帮忙最有效。口碑比较好的辅导班，遇到一个好的老师。 笔试辅导，直接买网课就行，自己私下里用过复习就行。 提防：数字游戏，比如清北通过率软文博眼球，有的小型辅导班老师是兼职。宣扬状元，事实是人家状元的能力强。签约保过，如果考不上就全额退款。 3、学习和工作背景不好如何逆袭？ 工作时间短没问题，必须在工作上有突出的成绩，获得过一些荣誉、因为我的存在而不同，要有切实的成绩 职位低，比较难处理，是个缺陷，要有优秀管理者的潜力，自律提高自己的决心，必须要有升职的潜力，要比同龄人更优秀，对未来的计划是明确的，非常清楚并一直在努力。 大专生，多次脱颖而出获得奖励，打败起点高跑得快的人，很难也是少数。 和同龄人对比，比人家要优秀 工作背景优秀，拿过优秀员工，非常强的自律能力，背了600多天的单词和日记，我也很大的野心，我的理想就是做个成功的企业家，直接告诉老师。 4、mab的数据 报考人数：2018年，243所招收，2016年10.9万、14.2万、17万人，20万人。 录取率：%22-%24 学费上涨：北大26.8万 - 29.8万 - 32.8万，厦门大学：16.8万-17.8万，学校自己定教育部审批，交给学校学费和运作。越早报考越有利。 年龄：北大在职 32，清华33，中国在职录取33岁，年收入63万，30-100万。全日制：28岁，10-40万之间。 职位：总经理、副总经理，业务经理、一般职员，创业者 工作年限：5-8年，在职8-9年，全日制5-6年。 学历分布：18.3大专，73.2本科 硕士6.7 博士1.9 行业分布：金融24，科技通信23，制造业10 薪资涨幅：100万 6.6 50-100万23.1 30-50万35.5 5、mba的内幕你知道多少？ 分院：学校是商业盈利性质的，并且需要方便每个学员，需求决定供给，风险就是生源质量不对等，不同地区也可能出现精英，与本部的对待教学和毕业没有区别，本部的录取率要比分院低。 北大mba直接：光华和汇丰都是发双证，毕业证的学院名不同，汇丰12年才开始，行业相对单一。 mba黑幕：提前面试全程录像，杜绝利益输送，黑幕基本很少，教育部严格监管。 6、你与成功差一份备考攻略？ 打算未来报考在校的大学生：先认真学习，多参加社团的活动，制定职业规划 职场新人：培养视野和管理能力，一定要作出出色的成绩，先改变自己才有资格报考，明确定位，提高笔试能力，读书英语 马上报考的人：整理自己的 参考资料： 千聊《北大学长教你逆袭MBA》 https://www.qlchat.com/official/student 中国研究生招生网: https://yz.chsi.com.cn/z/yzmba/ MBA智库： https://wiki.mbalib.com/wiki/MBA MBA中国网：http://video.mbachina.com/mba 知乎：https://www.zhihu.com/topic/20169588/hot","categories":[],"tags":[{"name":"总结","slug":"总结","permalink":"http://zichao.me/tags/总结/"}]},{"title":"19年的展望","slug":"19年的展望","date":"2019-01-14T14:59:12.000Z","updated":"2019-01-29T09:33:02.278Z","comments":true,"path":"2019/01/14/19年的展望/","link":"","permalink":"http://zichao.me/2019/01/14/19年的展望/","excerpt":"","text":"时间过得很快，快到还没反应过来新的19年就已经过去半个月，硬生生的把18年的回顾写成了19年的展望，不过这半个月确实是忙得飞起，事情一件一件，还都不是小事，也就可以理解一些。想想这一年都干了啥，人真的健忘，除了一些关键节点的记忆，剩下的时日着实想不起在做啥，是因为工作和生活的重复而忙碌让可圈可点的世界显得平凡了些？让我开始慢慢总结2018年。 一、回顾：1、工作：Biu项目记得年初的时候我在封闭项目，年底的时候我也在封闭项目，公司这样高速发展到处都在开新项目也属正常。biu项目的定位是校园社交，最开始让去支持这个项目的时候，我认为块领域是可以做的，非常乐意的就去往，毕竟人人网落幕之后这块再没出现有影响力的产品，如果能够做出一款有新社交产品，影响甚至改变人们的生活 将是非常有价值和意义的事情。 项目前期花较长的时间在一个评价的玩法上，类似国内的tataUFO,不过这个玩法有些单一，兴许是国内外环境不同，这样的功能用户看来最多图个新鲜却留不住，几个产品却在这上面花了很多心思，讲到我们需要添加更多玩法，我因此针对性的接入了小程序的sdk,建立了两个小游戏在上面。做了一段时间后，产品决定不往外推，内测的反馈和定位都不太好。随后我们开始做朋友圈功能，并要在IM的及时聊天中继续玩上述的评价游戏，与此同时运营同学开始去拉在校学生进行使用和会谈，找一找学生们的想法。随着一波内测的外部用户推广，有些学生进来，他们也坚持发朋友圈，收到了一些有效的反馈，但是到这里的时候下一步的发展依旧不太清晰有些迷茫。整个过程中我们感觉到产品同学其实没有太多的社交想法，比如IM对话框内复杂的交互设计还是我提出的优化，或许是因为之前没有做过社交产品吧。作为研发的立场提出的一些想法，是一些产品设计上的想法，在产品方向上并没有机会参与到更多，方向不能确立，整个团队就开始变得有些摸不着头脑，后来几个负责人出现分歧，导致项目有些停滞，就逐渐的解散了。 当然尽管项目没做起来，还是学到了很多，不仅仅是技术上的问题，更多的是团队和产品的理解，一款好的产品需要优秀的团队合作来支持，一个优秀的团队也需要好的产品来引领，创意的产品方案和良好的团队合作才有机会做出战略市场的产品。项目结束后就到了年终评定，这个时候是4月份了，认真做事勇于参与合作让我获得了好的评价，获得了提升。 2、求学：获得英国高级计算机硕士offer我不仅有做出一款互联网产品的愿景，内心深处蕴藏着一个求学的理想。本科毕业没有再坚持继续读研究生的路线，一方面是视野不够宽，考虑不清楚读什么研究生方向，想自己进入社会建立认识后再选择，另一方面是父母已经培养我辛苦了很久，自己也想先回报下父母。17年的时候有意识的开始申请，想看下自己能够申请到什么样的学校，学习了一段时间雅思，考试完开始提交申请材料，让还在学校的老同学帮忙办理各种证明，也是心生感谢。因为各种原因我申请的时间比较晚，错了很多学校的投递，到18年3月的时候才开始出结果，令我欣慰的还是申请到2所学校的offer,一所是曼切斯特大学，一所是布里斯托大学，在全球算是排名靠前的学校，我看到了自己大学成绩和背景能对标英国学校水平。拿到offer后，我思考了良久，决定放弃offer，因为随着在公司发展的成长和认识变化，自己如果出去读书，不仅错过了字节跳动高度发展的难得机遇，也给自己增加了很多经济压力，像字节跳动这样的企业发展在互联网的历史算其中一个奇迹了。 3、工作：从头条到抖音社交项目结束后，回到今日头条主业务组。做了一段时间，公司开始针对主业务进行人员变更，老部门的划分到新部门的成立，业务也分拆出去。在头条业务组呆了2年多，恰逢业务和人员变更，决定在公司内部进行岗位调整，于是联系了抖音这边，新环境新开始。交接完毕后来到抖音主业务组工作，认识了很多新同事，团队氛围很好，感觉自己做了一个正确的决定。我开始接触更新的产品，与更大的团队进行开发合作，有机会去上海出差，参与到国际化的项目中，也参与到春节封闭的项目中，又与之前的保密项目进行对接。到目前为止已经大半年了，工作上还是蛮开心的，收获了很多，但也发现了自己的不足地方，还需要再提升。 4、出行： 北京周边爬过野长城，滑雪成功拿下张家口万龙的高级雪道，从山顶下来的酸爽正是滑雪的乐趣，蛮有成就感的，感觉离阿尔卑斯又近了一步。 去了泰国一次，算是第一回出国了，东南亚的风情确实不一样，711好便宜。 去了宁夏一次，怀念和感受了当年大话西游的情怀，蹦极的刺激 去香港一次，第一回带着爸妈出去旅游，正好是妈妈50岁生日，以后要做更多对父母尽孝的事情。 去重庆一次，新房交接，自己工作3年的成果之一，很开心。 5、业余学习： 看了几本业外书籍，对企业和团队的认识有明显提升。 报了个钢琴班，坚持培养一个习惯，练习得不够多。 二、展望：虽然写了不少，其实还发生了很多事情，不仅是工作学习，在对亲人朋友在感情上的认识有了一些变化。新的19年已经开始，我也马上就要回家过年，希望在新年里能够做得更好，找准自己要走的路线，去大胆尝试。又到了立目标的时候了，不断的修正和检验自己的目标，年底进行验收，还是那句话年轻就要多奋斗，在北京这样的地方目标需要十分清晰。 继续在抖音团队效力，主动承担更多，业务上有明显产出，技术上有明显提升。 扩展边界，学习产品经理的能力 探索方向，放弃英国留学后寻找下一个突破 阅读管理和经济方面的书籍，眼界和思维的提升 继续坚持钢琴的学习，虽然慢，但在进步 坚持锻炼，跑步或者去健身房，年轻人应当有充沛的精力和体力 最后，加油吧，当你渐渐的不再少年……","categories":[],"tags":[{"name":"总结","slug":"总结","permalink":"http://zichao.me/tags/总结/"}]},{"title":"遇见上海","slug":"遇见上海","date":"2018-08-21T14:59:12.000Z","updated":"2019-01-29T14:18:23.344Z","comments":true,"path":"2018/08/21/遇见上海/","link":"","permalink":"http://zichao.me/2018/08/21/遇见上海/","excerpt":"","text":"转岗到抖音一个多月，逐渐融入团队，也适应了业务的变化。老大是个非常奈斯的人，常常想着给组员谋福利，不是出去聚餐就是发放活动的票务，这次得到机会出差去上海和国际团队交流，第一次感受大上海的魅力,暗自激动着。 周三早早的就出门去机场，同行的小伙伴也是开心得很，一路有说有笑，真是一趟不一样的出差，我们作为客户端的研发，业务在哪人就在哪，很少说有机会去出差的，加上现在公司的远程沟通工具已经愈加方便，所以这次出差可以用喜出望外来形容，在机场吃了一顿真功夫的套餐，然后就径直的开始登机。 落地到达虹桥机场，下了飞机大家都开始激动起来，中关村的码农来到了金融大上海见世面的样子哈哈。我们开始乘坐地铁去住宿的酒店，看了下上海的地铁线路，还是北京的比较齐整，地形差异大。大概一个小时地铁，我们到达了徐家汇全季酒店，虽然环境很棒，但是大家都很饿了，来不及欣赏就收拾好出门，去到了上海著名的日月光中心广场，在大众点评上搜索了传说中的本帮菜，味道还是很不错的，饭饱之余来一张合照： 第二天我们前往Musical.ly的办公区，被字节跳动收购后就与抖音和在一起了，目前国内是抖音，国外就是Musical.ly和Tiktok。正在办公的同事给我们安排了座位接待我们，带着我们参观8号桥创意园区。 参观结束之后，我们开始了紧锣密鼓的业务对接，针对各个业务需求线的开发工作开了蛮久的会议。晚上由当地的同事带着一起去吃了晚饭，相互认识认识。 第三天是周五正常的上班，认真做完手上的工作后，就约同学出去吃饭了。 上海的同学蛮多的，大学高中都有不少，是各行各业的精英啊，当然还在正在上学的朱博士。本来约的周六，突然说家里有事就改到周四了，查询地图才发现八号桥距离上海交通大学的校区很远，还想说去学校逛逛，来个夜游上交的什么的，无奈是真远，往返得三小时，于是订了个中间的位置。有一年没见吧，一起吃了顿火锅，聊了很多，内容广，故事长。 第二天周五，大家都下班得早，我联系了高中同学阿曾，也是博士，复旦的曾博士，刚好就在日月光附近上班，有点巧，说到打车来我附近带我去吃东西，我说好的。哈哈，不知道前方高能有多高。下车之后给我打电话，说自己站在哪哪个地方，我真的是望穿秋水都没看到人，八年没见了，高中毕业之后就再没见过，而且曾博士完全变了个样，以前高中那会儿是肥肥的，现在已经是代表月亮消灭你的美少女了，我一脸震惊然后一顿狂笑，花了大概半个小时适应她现在的样子，嗯，女大真是十八变呢，不过她说我完全没有变样，还是老样子。打了个车就去了一个看起来很高级很有格调的地方吃饭，嗯，在楼顶，周围可见的高楼灯光，嗯，云南菜。随后两个重庆娃儿夹扎着不飘准的普通发，在上海的夜里谈笑风生。 随后，我打车前往资深自动驾驶项目经理老夏的家里，嗯，老夏不是博士。在我之前老冯已经比我先到，正和老夏两口子一起撸火锅，是的，又是火锅。我到达后就一起交谈，在相互吹牛的时候隐约感觉有点不对劲，吃完火锅就去老夏家留宿了，果然第二天老夏自己去了公司，把我和老冯放在了家里。本来老夏之前说喊我来上海，要带我去游玩，带我去去看海，我还是满怀期待的到处走走的，结果还是一如即往的坑，不注重朋友相互来往的用户体验。我和老冯在他家里呆到了下午，老冯似乎没啥所谓的，毕竟上海呆了这么久啥没见过，可是我出差只有这点时间第二天就要回北京的啊。到晚饭时间，约了同期的高中同学一起聚聚，他们也很久没聚会了，趁着我来上海刚好组织一波。我和老冯先出发过去，老夏从公司打车过去，吃饭的地点是一家火锅店，没错，还是火锅，我来上海一连三顿，幸好第一天品尝了本帮菜。 见到老同学们大家都挺开心的，刚开始有些腼腆，相互问候了下情况，结果说着说着就起飞了，一下子龙门阵就扯了起来，哈哈，都是在上海生活的精英们，不少同学表示将来要留在上海，也有一些同学正在为下一步工作做打算，怀念啊，高中毕业已经过去多年。 饭后，大家说带着我逛逛，看看江滩的风景，看看以前上海的老建筑，我终于来到了传说中的上海滩。 第二天起飞回北京的飞机在浦东机场，特意选在那边的，想去感受下到机场的磁悬浮列车，老冯就是住在那边，晚上就和他一起过去留宿，聊着聊着就困睡了。第二天早上与老冯道别后，我在地铁站约了另外两个朋友笑娃和老冉见面吃饭，因为他们刚好都在浦东这边，之前几天的地方离他们都很远，前两天吃火锅真是吃够够的，选了一家贵州菜。三个不同行业的人坐在一起，讲述着各自的工作认识和生活见解，真别有一番体验，看到了社会不同的世界，我在北京中关村敲键盘，笑娃在上海通用拧螺丝，老冉在中科院药学所写方子，我们都有光明的前途。 饭后，我就要起程返航北京了，送走了两位朋友离开，钢嫂在最后的时候赶了过来，我们在地铁站聊了一会，打了两把刺激战场，我就坐上磁悬浮列车去往了机场，磁悬浮是真快，快到感觉列车转弯就要飞出去。 回顾整个上海之行，还是很匆忙的，除了正常工作之外，其他地方也没有太多去逛逛，主要时间是会见朋友，虽然都短暂，但大家都太忙，有机会都见不到下次再见不知何时。我走的时候上海正在下雨，内心很平静喜欢，来北京已经4年了，很久没有见到上海这般刷刷大雨，大概还是以前大学的时候吧。","categories":[],"tags":[{"name":"总结","slug":"总结","permalink":"http://zichao.me/tags/总结/"}]},{"title":"26岁","slug":"26岁","date":"2018-06-15T14:59:12.000Z","updated":"2019-01-25T08:04:08.823Z","comments":true,"path":"2018/06/15/26岁/","link":"","permalink":"http://zichao.me/2018/06/15/26岁/","excerpt":"","text":"18年过了一半，感觉这半年过得好快，不知道为什么觉得比之前的时间都快，埋头一想来北京的第4年马上就结束了。这一路摸索走来，做了好些思考和尝试，4年的工作路线的规划和实现，对自己是满意的。 4年相当于我在北京又念了一个大学，才来的时候周围读研的人很多，觉得在北京高中和大学同学都蛮多的，多到很多都来不及约，这样的氛围也让我不觉得孤单。慢慢的，他们毕业找了工作，一些人离开了这里，或去了别的城市，或回去了重庆，看朋友圈的一些动态，大部分高中同学还是都选择了回去，回去那个他们曾经想要离开的城市。重庆，在外地人眼里是个好吃好玩的旅游城市，这半年随着抖音的兴起，又让重庆火了一把，洪崖洞的夜景总是人山人海，而我在重庆的时候就白天去逛过一次，这就好比，就九寨沟因为地震毁了的时候我才想起，自己好像从来没有闲下心来去欣赏那些本来离我很近的风景。故事大多如此，多数人都这样，你眼里的普通在他人眼里却是一道独立的风景。我想我可以改变一下了，做点什么。 我开始变得不像从前那样匆忙，发现一些更为有趣的生活；在图书馆看书，去学校跑步，去音乐会，去酒吧嗨一嗨，去北京的周边走一走，或者更远的地方，一个人。 我开始不再因为领导的话语而坐在办公室更久，工作这个事情还是讲效率和成果，投入时间多了没什么产出反而影响效率，并且我也意识到他不是一个优秀的老大，我的人生里不想再受他的想法影响太多。 我开始享受一个正常的人生速度，不想再急切的实现去实现一个个目标，梦想也是可以慢慢实现的。我爸说的对，人这一生这么长，你们这个行业变化很多，你们从业人员一直出于不断学习的过程，总会在一个时候能做出成绩的。是的，我也热爱互联网，因为这里常常诞生奇迹。 组里来了一些小鲜肉，我开始不再是年龄的末尾了，不能再有小兄弟的心态，反而我会称呼他们为小兄弟或者小伙子，然后开启商业互吹模式。 我感受到了自己的认识和心态的变化，节奏稍微慢一点会有条理一些，真的很喜欢《从前慢》这首歌，在歌声描述的环境里会觉得时间是自己的，自己再享受时间的流逝。不过我依旧得保持一颗积极向上的心，不能因为节奏的慢而放松懒散，因为我希望在北京的日子里，是无悔的奋斗青春史，就和之前一样，让我在北京这时间里做一些有意义的事情。 整理下这半年的情况 ： 1、头条内部创业创新项目完结，工作上升 2、英国学校Offer，曼切斯特大学和华威大学的高级计算机 3、看了几本书 下半年想做的一些事情，年底再来check ： 1、加强技术知识，刷刷Leetcode 2、出去旅行一次 3、入门一门乐器，周六日上培训班 4、头条的日常工作有所产出，加强与同事沟通 5、搬家、办理工作居住证、日本护照签证、香港签证、 整理了下感觉还行，一下子路线又有了纹路，就按照这几个方面去完成吧。 今天是6月15日，我坐在去往天津的火车上，26岁，祝自己生日快乐。","categories":[],"tags":[{"name":"总结","slug":"总结","permalink":"http://zichao.me/tags/总结/"}]},{"title":"New一个golang爬虫","slug":"New一个golang爬虫","date":"2017-09-01T10:22:41.000Z","updated":"2019-01-24T12:14:28.315Z","comments":true,"path":"2017/09/01/New一个golang爬虫/","link":"","permalink":"http://zichao.me/2017/09/01/New一个golang爬虫/","excerpt":"","text":"刚好七八双月结束，工作整理完毕，下个双月OKR还没开始。做久了IOS开发也来扩展下领域，抽空几天学了下Golang，实现一个爬虫。 一、知识要点1、爬虫1.1 工作方式传统爬虫从一个或若干初始网页的URL开始，获得初始网页上的URL，在抓取网页的过程中，不断从当前页面上抽取新的URL放入队列,直到满足系统的一定停止条件。聚焦爬虫的工作流程较为复杂，需要根据一定的网页分析算法过滤与主题无关的链接，保留有用的链接并将其放入等待抓取的URL队列。然后，它将根据一定的搜索策略从队列中选择下一步要抓取的网页URL，并重复上述过程，直到达到系统的某一条件时停止。另外，所有被爬虫抓取的网页将会被系统存贮，进行一定的分析、过滤，并建立索引，以便之后的查询和检索；对于聚焦爬虫来说，这一过程所得到的分析结果还可能对以后的抓取过程给出反馈和指导。 1.2 分类 全网爬虫，爬行对象从一些种子 URL 扩充到整个 Web，主要为门户站点搜索引擎和大型 Web 服务提供商采集数据。 聚焦网络爬虫，是指选择性地爬行那些与预先定义好的主题相关页面的网络爬虫。 增量式网络爬虫，是指对已下载网页采取增量式更新和只爬行新产生的或者已经发生变化网页的爬虫，它能够在一定程度上保证所爬行的页面是尽可能新的页面。 Deep Web 爬虫，表层网页是指传统搜索引擎可以索引的页面，以超链接可以到达的静态网页为主构成的Web页面。Deep Web 是那些大部分内容不能通过静态链接获取的、隐藏在搜索表单后的，只有用户提交一些关键词才能获得的 Web 页面。 1.3爬虫算法 深度优先策略 其基本方法是按照深度由低到高的顺序，依次访问下一级网页链接，直到不能再深入为止。 爬虫在完成一个爬行分支后返回到上一链接节点进一步搜索其它链接。 当所有链接遍历完后，爬行任务结束。 这种策略比较适合垂直搜索或站内搜索， 但爬行页面内容层次较深的站点时会造成资源的巨大浪费。 广度优先策略 此策略按照网页内容目录层次深浅来爬行页面，处于较浅目录层次的页面首先被爬行。 当同一层次中的页面爬行完毕后，爬虫再深入下一层继续爬行。 这种策略能够有效控制页面的爬行深度，避免遇到一个无穷深层分支时无法结束爬行的问题，实现方便，无需存储大量中间节点，不足之处在于需较长时间才能爬行到目录层次较深的页面 2、golang2.1 语法学习 为了让学习更加快速，想要优先上手，而不是沉浸在大量语法里面，找了一遍基础的语法文档，直接全读整体语法，先有个基础但是全面的认识。语法教程链接 然后直接手一本web教程书籍，此本书籍是开源的，在github上有1.78万star，5年前就开始书写，一直被追捧和使用。书籍链接 2.2 环境安装1.1 在MacOSX上安装 下载地址 源码包：go1.4.linux-amd64.tar.gz。 将下载的源码包解压至 /usr/local目录。 1tar -C /usr/local -xzf go1.4.linux-amd64.tar.gz 将 /usr/local/go/bin 目录添加至PATH环境变量： 1export PATH=$PATH:/usr/local/go/bin 注意：MAC 系统下你可以使用 .pkg 结尾的安装包直接双击来完成安装，安装目录在 /usr/local/go/ 下。 1.2 其他方式参考链接 二、代码实现先确立一个小目标，就是我们要爬取的网页的数据源是什么。一直觉得国内的大学排名争议比较有趣，TOP2的两所，但是TOP5的有8所，TOP10的有20所，哈哈，所以来爬个大学排行榜玩玩吧。 1、网页抓取1.1 定义一个学校123456789101112type SchoolObj struct &#123; rankTypeName string RankIndex int SchoolName string EnrollOrder string StarLevel string LocationName string SchoolType string UrlAddress string SchoolTags []string&#125; 1.2 单页面html解析 引入go语言的http函数包和上面定义的学校结构题 发起一个网页请求返回，go语言会返回网页的以下全部的html格式字符串 如何从这些字符串中遍历查找和解析出我们需要的学校排名字段？ 因为有过前端开发的经验，我自然而然想到，使用CSS选择器会比直接使用遍历算法来得高效，有CSS的选择规则，我可以批量规律的获取和处理HTML的DOM结构数据。端开发中的jQuery提供了方便的操作 DOM 的 API。使用 Go 语言做服务器端开发，有时候需要解析 HTML 文件，比如抓取网站内容、写一个爬虫等。这时候如果有一个类似 jQuery 的库可以使用，操作 DOM 会很方便，而且，上手也会很快。果然，还真有这样的工具，此处推荐一个GitHub的开源框架 — Goquery 。 A、使用介绍： goquery定义了一个Document结构，直接对应网页Javascript的Document节点，通过一个NewDocument方法，传入参数地址为网页的url地址，直接生产一个虚拟的go语言上的dom。 1234567891011121314type Document struct &#123; *Selection Url *url.URL rootNode *html.Node&#125;func NewDocument(url string) (*Document, error) &#123; // Load the URL res, e := http.Get(url) if e != nil &#123; return nil, e &#125; return NewDocumentFromResponse(res)&#125; Document有定义find方法，方法的使用和JQuery里面一直，传入目标字符串的css选择器即可。通过对Document执行find查找方法，获得全部学校目标的字符串数组。 1doc.Find(&quot;.bangTable table tr&quot;) 这里的选择器怎么来的呢，我们在chrome里面打开url地址，找到我们想要收集的数据排名，右键打开审查元素，可以看到HTML的选择器名称。这里需要有一点CSS基础，因为有的选择器不是直接唯一的，需要自己去判断，怎样的选择器组合才能准确的拿到想要的目标字符串。 Document有定义each方法，用于遍历数组，也就是各个大学所对应的dom节点。在each方法中继续使用查找方法，并最后获得想要的字符串。 每一个dom对应一个SchoolStruct，新建并赋值，放入数组中返回。 B、代码如下： 1234567891011121314151617181920212223242526272829303132import ( &quot;github.com/PuerkitoBio/goquery&quot; &quot;SchoolReptile/struct&quot; &quot;net/http&quot;)func GaokaoquanRank(urlAddress string) []SchoolStruct.SchoolObj &#123; var array [] SchoolStruct.SchoolObj doc, err := goquery.NewDocument(urlAddress) if err != nil &#123; log.Fatal(err) &#125; // Find the review items doc.Find(&quot;.bangTable table tr&quot;).Each(func(i int, s *goquery.Selection) &#123; // For each item found, get the band and title var obj SchoolStruct.SchoolObj obj.RankIndex = s.Find(&quot;.t1 span&quot;).Text() obj.SchoolName = s.Find(&quot;.t2 a&quot;).Text() obj.UrlAddress ,_ = s.Find(&quot;.t2 a&quot;).Attr(&quot;href&quot;) obj.LocationName = s.Find(&quot;.t3&quot;).Text() obj.SchoolType = s.Find(&quot;.t4&quot;).Text() obj.StarLevel = s.Find(&quot;.t5&quot;).Text() obj.EnrollOrder = &quot;本科第一批&quot; array = append(array, obj) &#125;) return array&#125; 2、接口请求我们再爬去数据的时候，一般都能直接抓取网页数据，但是有的数据在第一页炳辉展示出来，需要有点击操作，比如加载更多。此处的大学排行有200位，第一页请求只有20位，这时候就会发现，接口请求的方便。有的网页在接口上做了cookie校验，摸清别人的请求规则，才能正确模拟出请求获得返回数据。 我们此处拿乐学高考作文例子，获取各个类型的大学排行榜。通过charles代理，我们获得请求的各类参数。 拼接请求url 1url := LexueHost+&quot;/college/ranking?page=&quot;+pageStr+&quot;&amp;rank_type=&quot;+rankObj.RankType+&quot;&amp;page_size=15&quot; 发送HTTP请求，获取返回 网络请求返回的是一个字符串结构的数据，我们需要把它映射成map结构好获取key对应的value值。 这里推荐一个go语言在json解析上的一个开源库Simplejson，将返回的数据进行JSON结构化，然后通过get方法可以直接获得对应的参数值。 1234567defer resp.Body.Close()data, err := ioutil.ReadAll(resp.Body)jsonBody,err := simplejson.NewJson(data)schoolJsonArray,err := jsonBody.Get(&quot;schools&quot;).Array() 多页请求使用递归的方式，不断改变get请求的pageStr参数，pageindex ++ ，当判断请求返回的json为空的时候，则说明接口请求已经到到了最后一页，跳出递归 12var nextArray [] SchoolStruct.SchoolObjnextArray = LexueRankEachList(rankObj,pageIndex) B、代码如下： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960import ( &quot;SchoolReptile/struct&quot; &quot;net/http&quot; &quot;io/ioutil&quot; &quot;fmt&quot; &quot;bytes&quot; &quot;encoding/json&quot; &quot;strings&quot; &quot;github.com/bitly/go-simplejson&quot; &quot;strconv&quot;)func LexueRankEachList(rankObj SchoolStruct.RankTypeObj,pageIndex int ) []SchoolStruct.SchoolObj &#123; pageStr := strconv.Itoa(pageIndex) url := LexueHost+&quot;/college/ranking?page=&quot;+pageStr+&quot;&amp;rank_type=&quot;+rankObj.RankType+&quot;&amp;page_size=15&quot; resp, err := http.Get(url) if err != nil &#123; // handle error &#125; defer resp.Body.Close() data, err := ioutil.ReadAll(resp.Body) jsonBody,err := simplejson.NewJson(data) schoolJsonArray,err := jsonBody.Get(&quot;schools&quot;).Array() var array [] SchoolStruct.SchoolObj if len(schoolJsonArray) &lt;= 0 &#123; println(&quot;请求到头了&quot;) return array &#125; for i,_ := range schoolJsonArray &#123; schoolJson := jsonBody.Get(&quot;schools&quot;).GetIndex(i) var obj SchoolStruct.SchoolObj obj.RankIndex = strconv.Itoa(schoolJson.Get(&quot;school_rank&quot;).MustInt()) obj.SchoolName = schoolJson.Get(&quot;school_name&quot;).MustString() obj.SchoolTags = schoolJson.Get(&quot;school_tags&quot;).MustStringArray() array = append(array, obj) println(obj.RankIndex,obj.SchoolName,obj.SchoolTags) &#125; pageIndex++ var nextArray [] SchoolStruct.SchoolObj nextArray = LexueRankEachList(rankObj,pageIndex) if len(nextArray) &gt; 0 &#123; for _,obj := range nextArray &#123; array = append(array,obj) &#125; &#125; return array&#125; 3、保存到Excel前两部获得了网络数据，并解析生成了对应的SchoolStruct数组，这个时候我们只需要创建excel边。遍历数组，把数组里面的数据字段都存入表格即可,git开源库xlsx能够让我们轻松的创建、查找、赋值Excel表。 代码如下： 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465func SaveSchoolRank(schoolArray [] SchoolStruct.SchoolObj,excelName string,sheetName string) &#123; var file *xlsx.File var sheet *xlsx.Sheet var row *xlsx.Row var cell *xlsx.Cell var err error file,err = xlsx.OpenFile(excelName + &quot;.xlsx&quot;) if err != nil &#123; file = xlsx.NewFile() sheet,err = file.AddSheet(sheetName) &#125; else &#123; sheet = file.Sheet[sheetName] &#125; if err == nil &#123; for i := 0; i &lt; len(schoolArray); i++ &#123; obj := schoolArray[i] row = sheet.AddRow() cell = row.AddCell() cell.Value = obj.RankIndex cell = row.AddCell() cell.Value = obj.SchoolName cell = row.AddCell() cell.Value = obj.StarLevel cell = row.AddCell() cell.Value = obj.LocationName cell = row.AddCell() cell.Value = obj.EnrollOrder cell = row.AddCell() cell.Value = obj.SchoolType cell = row.AddCell() cell.Value = obj.UrlAddress var tagStr string for _,value := range obj.SchoolTags &#123; tagStr += &quot;+&quot; + value &#125; cell = row.AddCell() cell.Value = tagStr if err != nil &#123; fmt.Printf(err.Error()) &#125; &#125; &#125; err = file.Save(excelName + &quot;.xlsx&quot;) if err != nil &#123; fmt.Printf(err.Error()) &#125;&#125;","categories":[],"tags":[{"name":"开发","slug":"开发","permalink":"http://zichao.me/tags/开发/"}]},{"title":"如何成功的交付产品","slug":"如何成功的交付产品","date":"2017-08-03T03:21:45.000Z","updated":"2019-01-25T08:04:35.707Z","comments":true,"path":"2017/08/03/如何成功的交付产品/","link":"","permalink":"http://zichao.me/2017/08/03/如何成功的交付产品/","excerpt":"","text":"摘要 所有的流程和规范最终都是为了解决实际问题 的，不要贸然引入流程，除非已经碰到问题，否则尽量简化流程，提高效率。要交付 一个产品，其中最重要的只有 3 点:1)确定用户需求和预期指标;2)以最小成本实 现最主要的需求;3)发布并获得数据反馈，确定下一个迭代目标。 用用户能理解的语言 去描述你要交付的产品带给他们的价值和好处十分重要，如果写不出来，或者写出来 用户看了一点兴趣都没有，请尽快停止这个产品，因为即使整个产品开发和交付过程 极其完美，这也注定会是一个失败的产品。 在软件行业中，我们把设计、打造、发布一款符合市场需求的软件称为交付 (shipping)。 尽管时日尚短，交付却已展现出非凡的价值。它简直是一剂灵丹妙药。它能解决 钱的问题，因为投资人给你追加投资的前提是你取得了好结果;它能解决客户的问题， 因为交付能力的强弱决定了你是否能推出客户需要的功能和补丁;它能解决团队的问 题，因为没有什么比取得进展更能让团队士气大振!所以，如果你想追逐名望、财 富、幸福感，那么，交付出卓越的软件，你将赢得一切。 我只身前往达特茅斯学院的塞耶工程学院和 塔克商学院学习了一段时间，并取得了工程管理硕士学位。我花了 5 年多的时间研究可扩容性、商 业决策以及软件团队内部的人际动力学。 快速迭代、部 署、互联网服务托管已经变成了主流。 因为软件交付不只是如何管理项目，也不只是如何提升开发效率，你必须具备更 全面的技能。你既要加深对技术的理解，又要贡献更好的产品创意，更重要的是，整 个过程中，你需要展现出你强有力的商业洞察力。你也许要做所有工作，包括要求工 程师编写测试用例，或者用 Photoshop 绘制产品原型。这个工作要求你追求极致，只 要你不惧挑战，它终将成为你的舞台! 让观点更犀利点儿！ 交付卓越产品，步步为赢一、确定正确的产品方向好的产品一定要满足众多客户所共有的某个真实的需求。你的使命就是 找到一种独特而有意义的方法去满足这一需求。 1.1 如何找到正确需求 以客户为导向，而不是以竞争为导向 在于它解决的问题比我们最初意识到的那个问题要难得多 1.2 如何构建卓越的使命团队一定要有自己的使命。如果你没有清晰地阐述使命则会导致失败，因为你的 团队、组织和投资人会根据自己对使命的不同理解而各自为战。你需要的是一个能够反映代表性产品或服务的使命，而不是一个 面面俱到的使命。举个例子。我在 Google Talk 时肩负的使命是“使人与人之间在任何地点均能通 过任何终端沟通”。 能够唤起人们的兴趣 长期吸引利益相关者的注意，你才有时间去挖掘产品细节。 提供言之有物且能指明方向的原则 适合印在T桖上 不要以为有一个高智商天才组成 的团队就不必这样做，他们的天才能力可不一定表现在对这类事情的记忆上。 1.3 如何制定正确的策略策略是指在竞争对手的压力下，利用公司独特的优 势来争取目标用户的粗略计划。它只是一段用于说明对目标客户来说你的产品将如何长期保持比 竞争对手更强的吸引力的话。简而言之，你需要阐明三件事:客户、公司和竞争。 策略举例:随着越来越多内容的产生，用户每天消费的内容也越来越多，但对于 20 ~ 40 岁的工薪一族来说，他们在海量的内容面前却不知道如何选择。我们需要 给这些用户以启发，帮助他们找到想看的视频，并让他们在看的过程中对内容有更 深的理解。我们之所以首先选择工薪一族是因为，与有大把的时间耗在 Facebook 和 YouTube上的青年不同，工薪一族时间有限，但他们人际网络丰富、个人主见强烈， 还有可自由支配的收入，愿意在内容上消费。我们有独特的方法来解决用户挑选视频的问题。通过整合 IMDb 独有的电影数 据集、亚马逊对数码内容分门别类的能力以及可靠的个性化推荐技术，我们可以构 建出有效的视频推荐算法。虽然其他竞争对手(如 Netflix)也有一套推荐引擎，但 我们覆盖的平台多，拥有的数据也更丰富，能够提供比竞争对手更有趣的观看体验 和更精准的推荐。我们将把这种观看体验通过各种载体来传递给观看者，这些载体展现了与内容 相关的背景数据(如 YouTube 视频的演员阵容)，包括 YouTube 等网站的浏览器插件、 手机应用程序等。我们还会提供丰富的与内容相关的信息以启发观看者，并提示观 看者进行反馈——这就创建了一个良性循环并惠及所有用户。 这个策略满足了所有要求:阐述了 IMDb 应该提供什么产品以及为什么这家公司适 合提供这类产品，分析了竞争对手的情况以及 IMDb 应如何与之差异化竞争，还论证了 IMDb 为什么要针对这样一个特别的消费者群体。该策略不但简明扼要、详略得当，还 直接指明了我们的具体目标。 二、尽可能清晰详细地定义产品交付的下一阶段是让你的产品方案具体且可理解。通过制订使命和策略，你知道 了你的客户是谁，他们的需求是什么。你也知道如何做才能比对手更出色、更具备差 异性。有了这些知识再加上一些头脑风暴，便可以得出一个大致的产品方案。 当设法细化产品方案时，你会发现产品要解决的一些客户问题都是你主观臆断 的，，而证明的最好方法就是把产品提 供给客户使用，然后听听他们的意见。在《精益创业》一书 中充分论证了为什么该构建一个最小化可行产品。 当迭代越小越快时，你甚至不需要花大力气去猜测客户的需求，而是 更多按照客户告诉你的去做，这样成功的可能性更大。 产品定义过程主要分为 10 步，完成这些步骤后，工程团 队就会对项目形成统一的认识，管理层或投资者也会了解并认可产品的设计，包括： 2.1 撰写 新闻稿所谓新闻稿是指一篇向市场宣布将要推出新产品的通告。不管是新 闻稿还是博客文章，都应该简单明了地传达关于产品的关键信息。 产品命名 发布时间 目标客户 解决了什么问题 如何解决(务必简明扼要) CEO 的公开赞辞 邀请设计团队和工程团队主管参与产品评审 找客户测试产品概念 命名、定价以及预测收益 向管理层汇报 2.2 创建并不断更新 FAQ 文档我喜欢那些愚蠢的问题，因为它们让我感觉好像没花多少精力就消灭了一个问 题，这真是一种少有的乐趣啊。 遇到回答不上的问题时，我也会把它放入 FAQ 并期望有人能够回答它。最坏情况下你也可以把这个 FAQ 当做个人的 Bug 列表或者团队讨论主题库. 它能节省你大量回复邮件的时间，还能抵御一些内部责难。 当你的客户支持团队和科技写作团队开始整理所有面向公众的内容时， FAQ 将是一个很有价值的资源。 2.3 绘制线框流程图流程图可以帮助你准确地解释用户工作流和系统交互相关问题，简要线框图则可以帮助你 具象化产品各环节的用户体验。 2.4 撰写产品单页或者演示文稿产品单页是一篇写给高管或多数风险投 资人看的产品介绍文章，你需要把控好介绍的详略程度。 你需要去争取工程团队、管理层、VC(风险投资人)或其他利益相关方的初步支持。你需要弄清楚他们对产品的认可程度，否则等到第 7 步功能规格 文档都快完成了，而他们还对产品的价值存有疑义，你将面临不断的返工。你会发现产品单页和演示文稿实际上是新闻稿的延伸，它们增加了市场机会(用户量)、收益机会(解决方案的价值)和长期竞争优势(对手长时间内无法模仿)这 三方面内容。 面对 VC 时，两样都需要准备，因为你既需要发邮件介绍你的产品，又需要面对面做产品演示。不过无论你在哪里工作，这两份文档的内容都是一样的，它们都是新 闻稿的延伸。 下面介绍这两份文档所需包含的五个要素: 产品名称 目标客户 + 数量有多少 解决了什么问题 + 这个问题对于目标客户来说有多大价值 解决方案 + 这个解决方案类似线上哪个产品，为什么你的方案能让竞争对手在 长时间内都无法模仿 何时交付 + 主要的里程碑有哪些? 团队背景(仅针对 VC) 2.5 FAQ中添加API文档API 文档可以说明你的团队如何与其他团队协作、外部开发者如何使用这套系统 以及你需要存储什么数据。预先定义清楚 API 还有个好处，它可以帮助你搭建由这些 API 构成的面向服务的体系架构。 2.6 撰写功能呢规格文档产品的规模以及成熟度决定了你需要几天还是几周才能写完功能规格文档。如果 产品尚不成熟，你应当尽可能缩小产品规模以快速验证客户需求的真实性。 简介：说明了为什么要做这个产品以及做些什么，每个新进入项目的成员 都可以从中了解到必要的背景信息。同时它还说明了文档中一些术语的含义，你可能 因为使用习惯了这些术语而忘记别人其实并不理解 目标与非目标：需要将其细化成不同目标，每个目 标都应保持清晰简洁并将它们按优先级排列，这样工程团队就可以合理地进行设计 与开发。目标是告诉别人你要做什么，那么非目标则是告诉别人你不要做什么 用例和用户场景：用例是指用简要的语句来描述那些用户必须 执行的操作，用户场景则是指用叙述故事的方式来描述用户是如何体验产品的 原型图或线框图 API 负载规划：负载规划是指对未来一段时间内用户的使用量进行粗略估计并制订应对计划，这 对工程团队来说非常重要。 依赖：你需要将全部依赖方及其负责人列出来，如果有应急方案也一并列出来。 FAQ和开放问题 关键事件：最好能列出主要事件的达成时 间，如特性完成时间、可信测试者版发布时间，如果具体的工程量尚未评估出来，那 预计的时间应该保守一些。 2.7 边界情况你需要时间 来仔细地、创造性地思考用户会如何弄坏你的软件或者在某种意义上没有按照你的预 期来使用软件。当你“漫步”时，请将想到的所有可能的边界情况以及应对策略写在 FAQ 或者产品需求文档中。 2.8 客户测试团队会轻易陷入一场为莫须有的客户问题构建完美解 决方案的狂欢中，主张的是去找一 批现存的或潜在的客户，向他们介绍你的产品设想和原型，并听听他们的反馈 。 2.9 基本商业要素——命名、定价和收益命名：可以交给别人想想 定价：看起来很科学，但最终大部分定价都是拍脑袋出来的。按成本定价、按价值定价以及对比定价。分析竞争对手、调研客户愿意支付、简化初始定价以降低用户理解成本、等产品正式推出后再想涨价就难了 收益：制定收益模型。 1、估算买家总体市场规模2、预估市场规模的增速3、估算你的目标市场占总体市场的比率4、估算通过市场推广你能触碰到的用户规模5、预估触碰产品的人中会有多少转化成产品用户6、找到其他新用户增长渠道并加入到模型中7、产品定价乘以每个时期增长的用户数便是收益 2.10 取得上层认可议你先花点时间预售 产品。在谷歌，最优秀的主管都知道怎么做这件事情，因为预售可以让管理层在公开 回应你的产品方案之前先了解一些背景。 种预售方式是“路过式”预售。趁着负责决策的高管站在走廊或者倒咖啡 的时候走到他身边和他聊一两分钟你想做的产品，这时候你追求的不是一个决策，而 仅仅是让他知道有这么一个事。 2.11 产品准备就绪开始构建阶段三，设计用户体验你需要从用户的角度出发，和设计团队不断沟通、反复 迭代，最终构建出良好、直观、简洁的用户体验。 阶段四，做一些基础的项目管理工作 括跟踪交付物的进展、指出问题以及控制项目范围。 阶段五，开始测试作为团队主管，你需要主导 Bug 的处理并慎重决定哪些可以容忍出现在版本 1 而哪些又必须在发布之前修复掉。 阶段六，你差不多可以准备发布了要求你建立一套衡量产品成败的指标 最后，正式发布产品你需要制订市场营销和公关方案，并在发布前仔细核查清单中的每一项内 容。基本上每次发布都会有一些糟糕的事情发生，不过只要处理得好，大部分用户都 不会察觉到。 三、赢在用户体验用户体验不仅是产品的外观样式，它还是产品的使用方式,为了让设计团队发挥出最佳水平，你需要先理解设计，再让设计团队理解你,需要了解的东西便是如何和每种 设计角色有效地沟通，其中包括了解如何评论视觉稿以及如何向设计师提供反馈。最后一个了解设计的要点是学会使用线框图或原型图来辅助沟通，你可以通 过 Photoshop 或其他画图程序来绘制这些图形。 3.1 各类角色 用户体验(UX，User Experience) 关注的是用户如何完成任务以及该如何优化向 用户展现信息的方式。通常用户体验设计师会通过制作流程图或原型图来说明用户体 验，其中原型图是用来描述用户界面某一部分外观的图形，对信息架构(IA，Information Architecture)尤为关注。 用户界面 它更关注单个页面或屏幕的 设计，是用户体验的组成部分。 视觉设计 如何通过一种既赏心悦目、夺人眼球又清 晰明了的方式来展示内容的一门学问 用户体验研究 是用户体验的一个特殊组成 部分，它专注于研究用户是如何看待你的产品的。 角色模型 你的设计和业务团队将创 建一组虚拟角色来代表目标客户，这些角色模型拥有姓名、薪水和目标，你还可以赋 予他们任何你知道的目标客户的特征，然后利用这些角色模型来评估设计的效果。 3.2 如何评估设计■该用户界面要求用户完成的最重要的任务是什么?■这是最简单的解决方案吗?■信息是否组织得当?■设计是否易用且一目了然?■标准是否一致?■能否减少用户点击次数? 3.3 如何与设计师沟通 以用户的口吻说话 以提问的方式建立共识 讲述业务目标的相对优先级 用数据说话 提供竞争对手的运作良好的案例 3.4 借助图画进行沟通■只制作用户界面中相关部分的原型。■总是使用完整的、经过适当编辑的文本。■控制花在视觉设计上的时间。■使用灰度色，不要使用其他颜色。■预期你的线框图会发生很大改动。■当心视觉花招。 四、赢在项目管理4.1 创建一张简单的计划表并持续维护。■它是我制作的。永远不要低估这种自豪感……■它便于你的团队更新剩余时间以及查看项目进展。■它便于发现长杆工程师。■它便于配置或自定义。■它便于跟踪假期，因为假期在这里也是一个任务。■它便于挪动任务至后续版本。如果发现版本发布时间不满足要求，你可以将该版本中一些任务的“目标版本值”改成后续的版本号。你也能使用这个模型来跟踪里程碑。■它还适用于管理项目最后 30 天的冲刺。■它便于平衡团队内的任务分配。如果不想让克里斯在 V1 版本的关键路径上，可以将他的任务重新分配给维奇。■它便于预测项目各时间节点，包括编码完成时间、测试完成时间以及发布完成时间。现在你的测试团队知道什么时候可以开始新一轮的测试，你的市场部门也知道这款产品什么时候可以面世。■它预先将你的假设传达给了你的团队。■“天”是一个很好的用于跟踪任务的度量单位。你也许常用“0.2 天”来描述那些非常小的任务，但我发现跟踪这些任务的最佳办法是放到 Bug 列表中。 4.2 如何评估工作量 如果你不是工程经理，那么让你的工程经理去要评估量。 表面上接受评估结果 认识到你的权力 只跟踪剩余时间 要求不考虑余量的评估 每周一次在团队会议上评估各任务的剩余时间 4.3 跟踪Bug并创建Bug燃尽图4.4 管理依赖 如果去除它也可以运转，那就去除它。 如果内部能构建，那就内部构建。 如果必须添加一个依赖，那就趁早添加。 如果必须添加一些依赖，那就依靠它上一个已构建的版本。 如果交付得早，被依赖伤害的可能性就小。 五、赢在测试 坚持测试驱动开发。 围绕优秀的测试主管组建测试团队。 选择一:降低标准雇佣测试人员并聘请管理者去管理他们 选择二:按高标准雇佣外包团队 选择三:按高标准雇佣测试人员，不使用外包团队 亲自评审测试计划和测试用例。 自动化测试。 虔诚地推行内部试用(Dogfood)。 开展找虫总动员。 勤勉且有条理地处理 Bug。 任命可信测试者以构建最后一道防线。 可信测试者是指在保密协议的约束下，在产品发布前使用产品内部试用版的用户。 思想火花:以新用户的方式来使用整个产品 六、赢在量化量化数据是团 队主管的命根子，作为团队主管你全部的工作都是说服别人或被别人说服，各种量化 数据为这样的讨论提供了理性基础。 6.1 如何采集正确的量化数据且只采集正确的量化数据 测量成本低廉 测量可靠且可重复检验 最好能实时测量 团队能够根据它做出明智的改变 专注于客户 6.2 你需要采集的三类量化数据1. 目标进度目标指标会告诉你目标的完成进度。在谷歌一个重要的目标指标是“7 天活跃用 户数”。没有人会看不懂使用精确增量表达法来描述的目标，而且这样的描述基本符合 SMART 的定义. 2. 经营绩效经营绩效指标会告诉你产品的问题在哪里以及如何提升用户体验。这些指标通常 是用比率表示，比如从点击购买按钮到付款成功的转化率。和目标指标一样，选择合 适的经营绩效指标至关重要。比如说你想做一个优秀的社交产品，监控好友数量是没 有用的，不同类型的用户有不同的好友数。你应该去监控用户参与度，这样你才能回 答“用户会花费时间在网站上吗”、“用户会发信息吗”这类问题。反映这些行为的相 关指标可能包括 7 天活跃用户平均 7 天发帖量、7 天活跃用户平均停留时间等。 3. 系统性能系统性能指标能说明你产品的实时健康度。这类指标包括 99.9% 平均延迟、每 秒请求数、并发用户数、每秒下单数以及其他基于时间的指标。 6.3 专注于目标本身，忽略细枝末节但是核心指标是不可能被糊弄过去的。 七、赢在发布7.1. 对改动说不。7.2. 开启作战室。7.3. 营造紧迫的气氛。7.4. 核查发布清单。7.5. 撰写博文。如果你是完全按照产品开发过程行事的，那么你应该已经写过一篇博文了，或者 至少写过相同主题的产品预告。那篇博文的目的在于阐述你的使命、你的目标客户以及你能解决的问题。从传统新闻的角度来看它就是你的“导语”。 7.6. 发布软件。7.7. 亲自验证软件。7.8. 应对发布带来的各种影响。【重点查看】 应对回滚。 处理产品危机。 演示产品。 应对媒体。 庆祝发布。 八、赢在团队8.1 如何组建一支团队为了组建一支高效的团队，你必须找到能默契配合的工程主管、产品主管和设计 主管。当发现这些人时，你要巴结好他们，哪怕给他们写赞美诗、买糖果甚至洗车都 行。纵观整个行业，你会发现不管 是在业务中还是在项目中，优秀的人总是聚在一起工作。 项目集经理 PM负责交付软件，项目集经理的职责重点在于整合不同团队和不同工作职能。一种看待项目集经理的方式是把它看做是一个比产品经理更少关注业务、比项 目经理更少关注项目的技术角色。 产品经理 通常产品经理的职责更偏重软件的业务方面。甚至有些产品经理不负责软件，他 们是典型的 MBA 出身，专注于品牌管理、定价、市场进入策略等。 项目经理 项目经理的主要职责在于排定项目计划和协调团队工作，在谷歌这个职位也被 称作技术项目经理。他们负责向工程师要评估值，辨识从属关系以及弄清楚如何在 更短的时间内做更多事 工程经理 工程经理常常是由老牌的程序员担任的。最佳的工程经理是那些由于热爱团队、 善解人意、精通交付并乐于构建卓越产品而晋升到该职位的人。产品经理、项目集经理或者项目经理，甚至是技术项目经理都可以是工程经理的 属下，但也可以是合作伙伴。 8.2 雇佣原则■雇佣比你聪明的人。■雇佣懂得自己不是来当老板的人。■雇佣表达清晰、言之有物的人。■雇佣用数据说话的人。■雇佣充满活力的人。 8.3 如何收购一家公司8.3.1 知识产权你能使用这家公司构建的技术、内容和专利。 8.3.2 人才你能使用这家公司雇佣的人才。关键人物、好的雇员、多余人才 8.3.3 客户你能凭借这家公司的客户来加快业务增长。 8.3.4 防御你买这家公司是为了让别人没法买它。 8.3.5 收购的陷阱和最佳实践 计划将你团队的部分人员调入他们团队 计划整合产品 了解之前所有的交易和负债 8.4 如何远程团队合作■组建一支工程师团队■充分沟通■不要外包设计或 PM 角色■适应文化差异■构建清晰的需求 ■忍受时差，通过任何方式会面 ■委任得力的主管。 ■大量出差，或者完全不出差 ■与远程团队共饮 8.5 如何加入一个新团队弄清楚在这个特殊团队中你的理想角色应该是什么很关键。 你必须敏感地意识到团队需要什么。 第一件事，不要和团队说你们的产品一团糟这种话。后来我才认识到在大多数情况下你 都应该尽量先将事情本身搞清楚，而不是张口就说产品一团糟这种话。 必须做的第二件事情是做一个选择:你是打算延期交付以解决这种 混乱状况，还是承认它的存在然后正常交付。做出延期决定的最佳时间点是你刚加入 团队的时候。 九、胜在技术如果想快速交付一款卓越的产品，你必须会询问富有洞见的问题，会正确地引 导方向，并明智地决定哪些事必须现在做，哪些事可以之后再做。你还要会评估和雇 佣工程经理。因此，你对技术的了解程度最不济也要与对你车里的汽油的了解程度相 当。。如果你想顺利地通过面试或者从容地 掌控产品开发过程，你需要了解四个S:服务器(server)、服务(service)、速度(speed)和扩容(scaling)。一旦理解了这四个基本元素，你就能够向团队询问恰当 的问题了。 9.1 服务器尽量不要买服务器自己搭建。优秀的工程师会尝试学习如何避免去做运维的琐事。展现层、业务逻辑层、数据库 9.2 服务SOA面向服务的架构(SOA，Service-Oriented Architecture），SOA 将包含业务逻辑的中间层分解成一系列独立的服务。这些服务 可能运行在相同的服务器上，但它们的构建、版本管理和运行都是独立的。他们相互调用和返回，从而形成了服务链，产生耗时。 9.3 速度缓存策略 9.4 扩容你能通过增加服务器来增加容量，且增加的每个服务器都能带来接 近完整服务器的容量。不过在许多系统中你依然会遇到瓶颈，如在 VIP 这块，一个 VIP 只支持那么多连接。这时面向服务的架构的一个好处是你可以独立为每个服务扩 容，当决策服务需要更多马力，回应服务需要更多空间时，你可以通过合理分配相应 类型的硬件给他们扩容。 9.5 如何询问正确的技术问题你现在的知识已经足够 向工程团队询问一些重要的问题并听懂他们大部分的回答了。你必须询问一些这类问题，它们会揭示出一些潜藏的问题 并帮助你的团队想清楚他们的设计。 十、胜在沟通10.1 如何写好邮件你要向比你更忙的、有更多邮件需要处理的人们传达与决策或进展相 关的大小事项。因此写好邮件对你能否成功至关重要。写邮件最主要的目标应该是清 晰、简要地传递单个信息。 像记者写新闻一样写邮件 使用了精确增量表达法、用了 20 秒时间来为邮件加上称呼、敬 语和署名，这样可以帮助信息传递给正确的受众 使用精确增量表达法 见差值、见开始值、见结束值 分点阐释原因 立即停笔，你已经写完了这封邮件 设法用建议取代质疑 考虑受众的感受 10.2 如何应对五种类型的会议 团队会议 了解近况以及利用团队合力来深入讨论和解决特定问题 站会 一种超级简短的会议，它只用来交流近况 1对1 产品 / 工程 / 用户体验评审 头脑风暴会 10.3 如何组织好会议■会后立即发出主题纪要■允许改变开会的目的■拒绝在团队会议中发泄负面情绪，但允许在 1 对 1 会议中发泄■使用鱼骨图等辅助工具解决问题 10.4 如何做好演示■将演示时间控制在 15 分钟内■永远传达且只传达一个信息■讲故事■制作“综述单页”■重点演示用户体验■极度专注倾听 十一、胜在决策11.1 推后:我们明天再完成。11.2 谈判:“行，再给你10分钟。”■聚焦于促进。■“先寻求理解，再寻求被理解。”■如果你已经有了倾向性的判断，不妨先说出来，然后让其他人继续发表观点 阶段1:这不是你的错 阶段2:公平谈判并使用数据支持 阶段3:那个数据没谈成……我们编个新数据吧! 阶段4:寻找可免费提供的东西 阶段5:转身离开并安静思考 阶段6:协议、文书工作、以及互相指责 11.3 处理冲突 不说“你”或“我” 聚焦在角色模型上，而不是人上 使用客观指标 十二、胜在从容■如何平衡交付、质量和影响、团队这三者的关系，你才能交付一款卓越的软件。■如何应对随机情况，你才能继续按原定节奏交付一款卓越的软件。随机情况是 指当你的管理层掷给你一个弧线球或者你的团队脱离正轨时出现的情况。随机 情况是每个在谷歌或亚马逊工作的人都理解的词之一，因为它是与帮助团队专 注于交付相对立的。■如何妥善地管好你的精力，你才能 1 个顶 3 个。 ■如何找人以及在什么时候找人，你才能让合适的人做合适的事。 ■如何咽下狗屎三明治，因为有时候你的确得咽下去。 十三、再度起航先回过头来审视一下周边的环境。软件从来没有做完一说。 你需要问问自己是应该开始做软件的第二版，还是开始做些新的东西。某些情况下你 会发现对产品的投入所带来的回报正在递减。我所说的投入是指你的时间。时间构成 的风险资本是最具利用价值的资产之一。 如果你各方面都表现不凡——按照本书的指导来做事你就能变成这样，就永远可 以选择下一个项目。考虑每种选择对你的业务或个人意味着什么。或许是时候换一个 团队或换一个产品了，或许你因为理解错了客户的需求而需要重构刚刚交付的产品， 或许你只是简单地喜欢和那个工程经理小伙伴一起工作。评估维度有很多，你需要花 些时间来考虑。 项目过渡之所以具有挑战性，是因为它就像铁人三项赛一样，你必须中断之前的 192 第二部分 掌握卓越技能，更胜一筹做事方式(如专注于细节、预发布)然后开始新的做事方式(如参与头脑风暴和策略 游戏)。它的另一个挑战性还在于你需要设法做好两份工作。第一份工作是维护已经 在生产环境中的软件，它几乎肯定会遇到一些早期发展过程中的困难。第二份工作是 启动新项目。大部分新项目在启动时都需要巨大的精力去推动，并在推动不利时需要 以坚韧的精神去承受不可避免的迎头痛击。 十大交付原则 你不是来当老板的——团队主管是仆人，他们存在的目的就是为了伺候工程团队。 2. 从用户角度出发。 用独特的方法解决很多人都有的大问题。 坏的消息就是好的消息。——杰克·韦尔奇 先寻求理解，再寻求被理解。——史蒂芬·柯维 构建最简洁的可用的产品。 交付手中有的，而非脑中想的。 无法测量的东西也就无法提升。——开尔文勋爵 你不可能做完所有工作，所以你应首先做那些只有你能做的工作。 10. 永远走在交付的康庄大道上。 团队不可或缺的工件在管理产品开发的过程中，你会创建很多文档、指南、核查清单以及其他工件。 下面这张列表是贯穿产品生命周期中你可能期望创建的工件的略述。你很可能需要创 建以下所有工件，所以它们没有按照特别的顺序排列。你能从 www.shippinggreatness. com 上下载到其中一些工件的模板。■轮值表——将寻呼器号码和手机号码的清单复制到一张钱包大小的纸上。 ■使用 Wiki 搭建的“联络簿”，用于遇到故障、突发事件或问题时寻找相关负责 人。这个列表应该包括法务、公关、市场、产品团队、工程团队和网络运维(或者任何负责生产基础设施的部门)的负责人和联系信息。■描述使命的语句。 ■关于未来两年的清晰策略。 ■一页简要说明产品的人物 / 事件 / 原因 / 时间 / 方法的文档。 ■产品需求文档，或者叫功能规格说明。 ■新闻稿。 ■线框原型图或者餐巾纸草图。 ■内部 FAQ 文档，其中部分问答打上外部 FAQ 标签以作为客户支持内容的原始素材。 ■沟通文档，包括关键信息、有潜在危险的问题和对这些问题的回应。 ■发布时穿的 T 恤衫。 ■包含测试时间的开发计划表。■未来两年的路线图。 ■内部用户列表和迁移时间表(适用于基础设施项目)。 ■可信测试者列表(适用于面向外部的产品)。 ■特性需求列表，并将内部和外部客户中呼声最高的三个特性需求高亮。 ■开放问题列表，并清晰标记这些问题的状态。 ■进行中的会议纪要。最好建一个文档保存项目所有的历史会议纪要。 ■发布计划或发布规程。 ■记录什么特性在什么时间发布的生成变更列表。在排查客户问题时特别有用。 ■对增长预测和硬件配置需求提前进行计划的生产设计文档。 ■专利注册文件、商标注册文件和版权申明文件。 ■隐私说明。 ■出色的数据指标——包含内部的状态面板和一些供外部消费的清洗过的数据指标。 ■为幻灯片、演示、评审、发布准备的产品截图。 ■团队本季度目标以及上季度目标完成情况。 ■Bug 状态面板和阻碍每个发布的 Bug 列表。■错误原因报告或事后调查报告。 ■会议纪要和团队周会、用户界面评审、产品评审、工程评审、Bug 处理、法务评审、业务拓展周会以及客户支持碰头会的时间计划表。","categories":[],"tags":[{"name":"产品","slug":"产品","permalink":"http://zichao.me/tags/产品/"}]},{"title":"关于产品经理","slug":"关于产品经理","date":"2017-07-02T15:17:59.000Z","updated":"2019-01-25T08:18:20.140Z","comments":true,"path":"2017/07/02/关于产品经理/","link":"","permalink":"http://zichao.me/2017/07/02/关于产品经理/","excerpt":"","text":"一、产品和产品经理1.1 产品 帮助人们解决问题与麻烦的、可被使用和消费的、有形或者无形的服务、组织和观念 1.2 产品经理 负责设计出或者改进某产品的人 目前主要指代计算机设备的应用程序的产品经理。 二、如何设计应用程序2.1 问题： 帮助我们解决一个或多个问题。 2.2 流程与页面： 各种各样的页面存在一定的流程关系。 2.3 内容与功能： 不同页面内容和功能不同。 2.4 布局： 内容和功能有不同的位置。 2.5 样式： 优雅美观的设计风格。 三、应用程序的工作分工3.1 分工 产品经理：2.1 \\ 2.2 交互设计：2.3 \\ 2.4 UI设计师：2.5 开发：研发工程师 测试：测试工程师 上线 推广：市场推广，让更多人接触和使用 运营：产品运行，让用户更长的使用和产生收益 运维：运维工程师，数据和服务器的高速稳定。 3.2 调整小型公司部分岗位进行融合，比如无交互设计和运维。 四、产品经理的具体工作4.1 解决什么问题与麻烦 洞察机会：可以帮助人们解决什么问题，也就是点子 市场分析：解决这个问题，有没有市场前景，能不能得到好处 用户研究：什么样的人会碰到这样的问题？什么情况下？ 需求分析：用户达到什么目的？用户有什么要求? 竞品分析:有没有产品已经解决这个问题，怎么做的，优缺点。 产品策划：为什么要做？应该怎么做？需要什么方法和资源？4.2 功能与内容 需求管理：问题优先、稍后、暂不解决 功能设计: 什么功能来解决问题 内容设计：什么内容来解决问题 功能模块设计:模块与系统，如何组合 信息结构设计：信息流的逻辑梳理 需求文档撰写：需求文档把上述内容都说清楚 4.3 流程页面 流程设计：按照什么流程来查看和使用 页面设置：哪些内容放在一个页面上，都有哪些页面 信息架构设计：如何让用户明白产品有哪些功能，并能快速定位到自己的需求 原型设计：具体的页面视图 交互文档撰写：把原型的展示细节说清楚 4.4 其他工作 配合UI设计师：一同选择设计风格并验收 配合开发工程师：不理解和不好实现的问题 管理项目进度：项目排期和按时发布 配合产品测试：发现可能存在的问题和不足 配合市场推广：帮助获取更多用户来使用产品 配合运营：协助设计运营方案。 五、产品经理能力5.1 素质能力 逻辑分析能力：对产品和用户思考 设计规划能力： 功能和内容的迭代 文字表达能力： 问题和方案描述清楚 良好沟通能力：与各方沟通 管理能力： 需求和项目进度管理 5.2 工具能力 思维导图：Xmind 流程图：processon 原型工具：墨刀、Axure 文档撰写：word 数据整理分析：excel 展示和回报：PPT 六、小结 产品经理确实是更符合我的性格，如果最开始入行就选择，到如今肯定已经做到较高的水平。从前选择了从程序员方向切入，不过我始终保持发散思维，对程序开发的认识更进一步，相信待到合适的现实时机下，有机会直接做事，拥有懂程序的优势。","categories":[],"tags":[{"name":"产品","slug":"产品","permalink":"http://zichao.me/tags/产品/"}]},{"title":"机器学习在IOS中的应用 Core ML","slug":"机器学习在IOS中的应用 Core ML","date":"2017-06-22T11:42:52.000Z","updated":"2019-01-24T12:14:28.320Z","comments":true,"path":"2017/06/22/机器学习在IOS中的应用 Core ML/","link":"","permalink":"http://zichao.me/2017/06/22/机器学习在IOS中的应用 Core ML/","excerpt":"","text":"2017年的WWDC大会苹果赋予了开发者们新能力，能够将机器学习应用在移动端上，着实是一次让人感到兴奋的事情，一颗赛艇！！积极开展的Session学习活动，在第一节和第二节引用了一些概念和背景来帮助理解，熟练工请忽略，跳至第三节直接开始操作,第五节开始有图片学习的demo可查看。 本篇相关文档和Session有： document: Core Ml FrameWork Session: WWDC 2017 Session 703 Introducing Core ML Session: WWDC 2017 Session 710 Core ML in depth 一、AI.ML.DL1、 人工智能1.1 定义：让人工制造出来的系统或者机器，其运作行为看起来就像是人所表现出的智能行为一样，即机器“像人一样思考”、“像人一样行动”、“理性地思考”和“理性地行动”。人工智能的研究是高度技术性和专业的，比如机器学习就是属于学习方向的课题，让机器具有人一样的学习行为。 1.2 研究课题：演绎推理和解决问题、知识表示法、规划、学习、自然语言处理、运动和控制、知觉、社交、创造力、多元智能、伦理管理、经济冲击 2、机器学习2.1 定义：通过在大量数据中寻找模式,从数据中自动分析获得规律，并利用规律对未知数据进行预测的算法.因为学习算法中涉及了大量的统计学理论，机器学习与推断统计学联系尤为密切，也被称为统计学习理论，涵盖一切有关数据训练的学习算法。 2.2 方式分类： 监督学习： 从给定的训练数据集中学习出一个函数，当新的数据到来时，可以根据这个函数预测结果。监督学习的训练集要求是包括输入和输出，也可以说是特征和目标。训练集中的目标是由人标注的。类似概念还有半监督学习和无监督学习。 增强学习： 通过观察来学习做成如何的动作。每个动作都会对环境有所影响，学习对象根据观察到的周围环境的反馈来做出判断。 2.3 使用算法： 构造间隔理论分布，聚类分析和模式识别： 人工神经网络、决策树、感知器、支持向量机、集成学习AdaBoost、降维与度量学习、聚类贝叶斯分类器 构造条件概率，回归分析和统计分类： 高斯过程回归、线性判别分析、最近邻居法、径向基函数核 通过再生模型构造概率密度函数，最大期望算法概率图模型： 贝叶斯网、Markov随机场、Generative Topographic Mapping 近似推断技术： 马尔可夫链、蒙特卡罗方法、变分法 3、深度学习3.1 定义：深度学习是机器学习中一种基于对数据进行表征学习的方法，起源于人工神经网络，在前期机器学习并没有深度学习这样的学习模型。所以我们现在也认为它是属于深度学习属于机器学习范畴内。它试图使用包含复杂结构或由多重非线性变换构成的多个处理层对数据进行高层抽象的算法。 3.2 关系图： 二、机器学习的应用发展：2.1 发展：1956年，达特茅斯会议提出了“人工智能”的概念。其后，人工智能就一直萦绕于人们的脑海之中，并在科研实验室中慢慢孵化。之后的几十年，人工智能一直在两极反转，或被称作人类文明耀眼未来的预言；或者被当成技术疯子的狂想扔到垃圾堆里，直到2012年之前，这两种声音还在同时存在。主要问题来自于运算需求难以得到满足，即使是最基本的神经网络，也需要大量的运算。过去几年，尤其是2015年以来，人工智能开始大爆发，很大一部分是由于GPU的广泛应用，使得并行计算变得更快、更便宜、更有效。当然，无限拓展的存储能力和骤然爆发的数据洪流（大数据）的组合拳，也使得图像数据、文本数据、交易数据、映射数据全面海量爆发。 2.2 应用： 领域列举机器学习已广泛应用于数据挖掘、计算机视觉、自然语言处理、生物特征识别、搜索引擎、医学诊断、检测信用卡欺诈、证券市场分析、DNA序列测序、语音和手写识别、战略游戏和机器人等等 场景举例句子翻译、动态手势识别、个人化推荐、美化的图像处理、云歌曲推荐、无人机航拍的视频实时分类路况信息等等 2.3 大公司 FaceBookFacebook AI研究项目（FAIR）专注于基础科学以及长期研究,另外一个叫应用机器学习部门（AML）,将技术用于现有Facebook产品。 Microsoft微软1991年就已经开始涉足机器学习，有数百名科学家和工程师。 GoogleGoogle Assistant是谷歌深度学习研究的集大成者。 Amazon其CEO贝索斯称，已经悄悄研究了AI四年，目前在其语音识别生态系统上投入的人力有1000人。 Baidu2014年，百度重金挖来谷歌深度学习项目负责人Andrew Ng，发力AI研究。 AppleWWDC2017，苹果宣布面向开发者的机器学习框架Core ML ，加速在 iPhone、iPad、Apple Watch 上的人工智能任务。 三、在IOS中使用机器学习 使用Core ML，你可以将训练好的机器学习模型整合到你的应用中。 3.1 Core ML简介Core ML是一个训练好的模型Model，一个机器学习算法应用到一个训练数据集之后所得到的结果。利用该模型可以基于新的输入数据而进行预测，也就是利用了机器学习的结果。比如，如果一个模型在一个地区的历史房价数据上进行了训练，那么它就可能能够根据房子的卧室和浴室数量来预测房价。Core ML 为设备性能进行了优化，从而减少了内存占用和功耗。严格在设备上运行能够确保用户数据的隐私，并且能保证你的应用在没有网络连接时也能够工作和响应。Core ML 框架本身构建于低层面的原语（primitives）之上，比如 Accelerate、BNNS 和 Metal Performance Shaders；构建完成的Core Ml又作为其他更高级框架的基础，比如支持用于图像分析的 Vision 框架，用于自然语言处理的 Foundation类，以及用于评估已经学习到的决策树的 GameplayKit。结构图如下: 3.2 支持的系统 iOS 11.0+Beta macOS 10.13+Beta tvOS 11.0+Beta watchOS 4.0+Beta 3.3 如何获得CoreMl Model从如上定义看出，CoreMl框架只是将机器学习后的成果拿来应用，本身并不涉及机器学习的运行环境和过程。获得这些结果的方式有两种。 苹果爸爸为你提供的现在model根据自己的需要下载：https://developer.apple.com/machine-learning 自己创建model苹果爸爸为开发者提供了生成方法，不满意官方或者使用不足的时候，可以自己去机器学习完成，在创建应用，即第四节的内容。 3.4 将CoreML模型用在你的应用中 新建demo工程，在工程target中在Build Phase的Link Binary With Libraries里，加上CoreML.framework系统框架。 将获得的 CoreMl Model 添加至工程中，我们以GoogLeNetPlaces.mlmodel为例: 注意中间有个Model Class ，点击查看api调用，有两点注意，输入参数为 CVPixelBufferRef 格式,图片需要是224X224像素的大小，所以需要自己写方法去转化为合适的参数。 调用示例 123456GoogLeNetPlaces *model = [[GoogLeNetPlaces alloc] init];UIImage *scaledImage = [self imageScaleToSize224:CGSizeMake(224, 224)];CVPixelBufferRef buffer = [self pixelBufferFromImage:scaledImage];GoogLeNetPlacesInput *input = [[GoogLeNetPlacesInput alloc] initWithSceneImage:buffer];GoogLeNetPlacesOutput *output = [model predictionFromFeatures:input error:nil];NSLog(@&quot;Scene label is: %@&quot;, output.sceneLabel); 结论百度搜索图片，下载常规的桌子、卧室图片，利用google此个model进行判断输出，正确。输入健身房的图片，判断输出为博物馆。由此可以看出，训练样本过少，当输入数据变复杂的时候就不能判断正确，侧面激励开发者们自己开展训练模型。 四、创建自己的Core Ml Model4.1 Apple支持的模型苹果支持由第三方工具和框架训练出来的机器学习模型转化，我们可以只用苹果提供的转化工具,将个人已经训练好的数据模型转化为CoreML进行支持。工具为 Core ML Tools ，是基于Python开发的工具，需要自己安装配置，到这里，上面一二节的概念理解就有作用了，前面提到了机器学习所使用到的思想算法，这里工具有对应的类型支持转化。我从官网对照理解过来如下图： 学习模型 子算法类型 工具框架 人工神经网络 多层向前反馈网络（Multilayer Feedforward Network）、CNN卷积神经网络（Convolution Neural Network、RNN递归神经网络（Recurrent Neural Networks） Caffe、Keras 1.2.2 集成算法 随机森林（Random forests）、迭代树（boosted trees）、决策树（decision trees） scikit-learn 0.18、XGBoost 0.6 支持向量机 线性回归（Scalar regression）、多分类器（multiclass classification） scikit-learn 0.18、LIBSVM 3.22 广义线性模型 线性回归（Linear regression）、多分类器（multiclass classification）、标量回归（Scalar regression） scikit-learn 0.18 特征工程 稀疏向量化（Sparse vectorization）、密集向量化（ dense vectorization）、分类处理（categorical processing） scikit-learn 0.18 机器学习流 马尔可夫链（Sequentially chained models） scikit-learn 0.18 4.2 转换你的学习模型微信朋友圈常常被一些风格奇异的图片刷屏，app里上传自己的照片就能变成特定风格的画像，有油画、漫画等等，这些都是机器学习的结果，Neural Transfer Style。一般有两种实现：第一种是快速渲染，输入一张原图+一个某种固定画风的模型 = 输出结果，这个你只需要模型就OK；第二种方法是，输入一张原图+一张风格图 + 在线渲染 = 输出结果，需要一个原始模型就行。搜索查询都是基于python的训练实现，有基于tensorflow,也有基于torch的，没到已生成的model，因而这里还是拿一个已有的图像识别的例子来讲。 已下载材料 bvlc_alexnet.caffemodel、 deploy.prototxt、 class_labels.txt 其他参考Caffe Model： Caffe model 4.2.1 pip安装Coremltools12&gt;&gt; sudo easy_install pip&gt;&gt; pip install -U coremltools 4.2.2 打开mac终端1234567&gt;&gt; python&gt;&gt; import coremltools&gt;&gt; coreml_model = coremltools.converters.caffe.convert((&apos;bvlc_alexnet.caffemodel&apos;, &apos;deploy.prototxt&apos;),predicted_feature_name=&apos;class_labels.txt&apos;)&gt;&gt; coreml_model.author = &apos;徐子超&apos;&gt;&gt; coreml_model.license = &apos;字节跳动&apos;&gt;&gt; coreml_model.short_description = &apos;Predicts the price of a house in the Seattle area.&apos; &gt;&gt; coreml_model.save(&apos;BVLCObjectClassifier.mlmodel&apos;) 4.2.3 得到model结果我下载的bvlc_alexnet.caffemodel大小有244M左右，在终端中转化为CoreMl却基本没有转化耗时，可见苹果在开发工具的创造上下了功夫。我们得到了CoreML的模型如下图： 直接在工程文件中，加入model,添加到对应的target 点击中间Model Class即可查看对应的定义，Model依旧244M大小，我在打开定义的过程中感受到了Xcode的明显延迟卡顿。 到这里，我们的model转化就完成了，在WWDC上也介绍了别的python工具，我这里没有使用，直接在终端里面完成即可。接下来，做个实测demo跑一下效果，本次转化的model过大，此处我们还是继续拿第三节的model来做。 五、相机即时画面的图像解析Demo4.1 新建一个相机demo即时的图像识别，需要在摄像头打开后，实时的获取手机屏幕上展示的每一帧图像，所以通常的UIimageViewPicker是无法做到的，我们需要自己搭建UI并手写捕捉相机视图的代码来构建一个自己的相机，通过AVFoundationKit,我们可以拿到相机里面图像流动的每一帧，从而可以将图像传递给GoogleNet进行识别。来，继续改造第三节的demo工程，将viewController变成一个简化版本的相机。 相机启动在三个时机，viewDidLoad的时候直接建立好组件，主要涉及AVFoundationKit的类有： AVCaptureDevice：获取手机功能里的相机设备 AVCaptureSession：连接相机device到输出数据流的会话层 AVCaptureVideoPreviewLayer：用于展示图片的画布，也是我们常见的相机窗口 AVCaptureVideoDataOutput：数据流 AVCaptureConnection ：数据连接 12345678910111213141516171819202122232425262728293031323334- (void)initAVCapturWritterConfig&#123; self.session = [[AVCaptureSession alloc] init]; //视频 AVCaptureDevice *videoDevice = [AVCaptureDevice defaultDeviceWithMediaType:AVMediaTypeVideo]; if (videoDevice.isFocusPointOfInterestSupported &amp;&amp; [videoDevice isFocusModeSupported:AVCaptureFocusModeContinuousAutoFocus]) &#123; [videoDevice lockForConfiguration:nil]; [videoDevice setFocusMode:AVCaptureFocusModeContinuousAutoFocus]; [videoDevice unlockForConfiguration]; &#125; AVCaptureDeviceInput *cameraDeviceInput = [[AVCaptureDeviceInput alloc] initWithDevice:videoDevice error:nil]; if ([self.session canAddInput:cameraDeviceInput]) &#123; [self.session addInput:cameraDeviceInput]; &#125; //视频 self.videoOutPut = [[AVCaptureVideoDataOutput alloc] init]; NSDictionary * outputSettings = [[NSDictionary alloc] initWithObjectsAndKeys:[NSNumber numberWithInt:kCVPixelFormatType_32BGRA],(id)kCVPixelBufferPixelFormatTypeKey, nil]; [self.videoOutPut setVideoSettings:outputSettings]; if ([self.session canAddOutput:self.videoOutPut]) &#123; [self.session addOutput:self.videoOutPut]; &#125; self.videoConnection = [self.videoOutPut connectionWithMediaType:AVMediaTypeVideo]; self.videoConnection.enabled = NO; [self.videoConnection setVideoOrientation:AVCaptureVideoOrientationPortrait]; //初始化预览图层 self.previewLayer = [[AVCaptureVideoPreviewLayer alloc] initWithSession:self.session]; [self.previewLayer setVideoGravity:AVLayerVideoGravityResizeAspectFill];&#125; 然后，在viewDidAppear的开始捕捉画面，viewWillDisappear停止相机捕捉。在viewDidAppear的时候我们开始相机的录制，代码会在videooutput的协议里回调给我们相机设备录制到的每一帧图像，这个时候我们就可以开始处理了。关键代码如下： 1234567891011121314151617181920- (void)startVideoCapture&#123; [self.session startRunning]; self.videoConnection.enabled = YES; self.videoQueue = dispatch_queue_create(&quot;videoQueue&quot;, NULL); [self.videoOutPut setSampleBufferDelegate:self queue:self.videoQueue];&#125;#pragma mark --AVCaptureVideoDataOutputSampleBufferDelegate- (void)captureOutput:(AVCaptureOutput *)captureOutput didOutputSampleBuffer:(CMSampleBufferRef)sampleBuffer fromConnection:(AVCaptureConnection *)connection&#123; dispatch_queue_t queue = dispatch_queue_create(&quot;CMSampleBufferRef&quot;, NULL); dispatch_sync(queue, ^&#123; CGImageRef cgImage = [UIImage imageFromSampleBuffer:sampleBuffer]; NSString *text = [self predictImageScene:[UIImage imageWithCGImage:cgImage]]; dispatch_async(dispatch_get_main_queue(), ^&#123; self.googleLabel.text = text; &#125;); &#125;);&#125; 注意此处，相机给我们回传的是CMSampleBufferRef格式的数据，而我们在第三节需要传入的是CVPixelBufferRef，所以会有一步在UIImage+Utils里的转化,最后附上代码地址。 4.2 实时显示效果到官网下载安装配置，把手机升级到IOS11的beta版本后，将相机demo连上手机真机调试得到实时显示,当我移动手机对准不同画面时，相机底部会对应解析出识别结果: 六、小结从本次实践上，还是可以看出一些问题： 1、Core ML 框架只在IOS11以上才开始支持，现状是很多APP还在支持低版本。比如目前微信支持IOS8以上。 2、每一个机器学习模型引入的model都是很大，我们的demo使用偏小的model，但是数据却又不准确，model的引入会给IOS安装包带来包体积很大的增加。 3、机器学习的结果分析大量的运算，虽然目前iphone在不断的升级硬件GPUCPU，但是我测试过程中还是发现计算的延迟，就异步计算返回的。 4、对于非专业的机器学习人士来讲，IOS开发能拿到现在的model来使用，很多酷炫的效果都没有现成的model,这里也是一个门槛。 随着Core ML技术的引入，移动端上实现机器学习开始变得可能，这也让IOS开发者为之兴奋，然而在IOS上实践机器学习还是有较长的路要走，当然apple本身的布局正在推动这一发展，保持期待。本文不仅仅是对WWDC新技术的探索和分享，也是对机器学习的兴趣认识。 github代码:IOS-Core ML，有兴趣的同学可以下载在IOS11的设备上跑起来。","categories":[],"tags":[{"name":"开发","slug":"开发","permalink":"http://zichao.me/tags/开发/"}]},{"title":"写在2016年末","slug":"写在2016年底","date":"2016-12-25T14:59:12.000Z","updated":"2019-01-25T08:17:58.540Z","comments":true,"path":"2016/12/25/写在2016年底/","link":"","permalink":"http://zichao.me/2016/12/25/写在2016年底/","excerpt":"","text":"现在已经是16年的年尾了，想起去年元旦节那天和几个老基友在一棵年树下合影留念，恰好是自己入职今日头条第一天，那时候自己在工作上又上了一个台阶，特别开心。入职的一月给自己定了16年的目标，16年是本命年啊，要好好的过好这一年。 针对个人的各方面规划，看起来真是个美好的愿景，一天天按部就班的做着事情，希望能再年底的时候给自己惊喜。如今回头去看，有的目标还没有进展！贼哈哈哈哈哈！想起来我也是快乐的！是啊，这大半年有些浪。总结回顾，大概去年创业大半年给整累了，来了头条后，各种更好的生活，各种轻松的姿态，逐渐的也就有些懒散，当然头条也是创业驱动型公司，氛围是很强烈的，不过对于我这样从创业公司过来的，还是觉得条件会好些，少了点之前那股劲头。 目标这个东西确实容易让人清醒，想起当时的积极澎湃都去哪了，看着一个个目标的进度，上哪说理去？客观原因分析后，主要是一年自己没有想好怎么过，年初定的目标有偏颇，总是一个探索的心，自己尝试了好多方向去认识自己，在知道想干什么的前提下，尝试去判断自己能不能做到。而这些尝试呢，和原本设定的目标是有出入的。既定的目标的实现时机由于一个客观原因也发生了变化，在今年是完成不了的。就这样，在一个个夜里深睡去，直到每日早上九十点，几个老基友基本每周都聚，自己的生活节奏也是存在影响的。工作期间，找我的头聊了聊，他也看出了我的一些困惑，觉得我可能是有些茫然，大概对应了工作两年的人都会有的现象，给我讲述了他的一些故事。这又让我想起了自己大学的时候，好像大二是有点茫然，未来那么长，我该做点什么。对，是的，我该做点什么了。中间我也修正过一些计划，在中秋节的时候总结了一下，但是没有从根本上做出变动。 经过不断的自我认识，不断的尝试，我觉得现在比较清楚自己之后的安排了，可以拟定一些方向性质上的目标，以前定目标都是相对较短期目标，接下来要完成这些目标的时间是相对较长的，是到17年年底的时候才会来check的。因为是从自己目前的情况来看，这样相对来说合适一点，这段时间内，我也做不了比这些更大的事情了。总感觉这次和以往定目标时不太一样，也许这就是成长。 目标时间：16-12-25 目标 1： IOS技术扩展挖深 头条的业务需求、管理一块业务 目标 2： 产品经理继续学习 头条数据分析；网站上学习理论知识，应用在独立App上 目标 3： 维护一个头条号 每周发两篇 目标 4： 争取能够自己发一款独立APP IOS端至少能够达到演示的目的 目标 5： 托福考试过，申请香港或新加坡的硕士 目标 6： 成都或者重庆买下自己的第一套住房 去闯，闯不了就滚回去 目标 7： 学会摄影或者学会一门乐器 一个人拥有一个爱好是很重要的 目标 8： 锻炼 健康是最重要的，年轻人就得有肌肉 检验时间：17-12-28 目标 1： 问答业务进展顺利，开发独立app 主导应用工程平台化。 主导内部创业新项目 目标 2： 零零散散的看了一些产品的博客和大咖的文章，看了两本书 目标 3： 建立了头条号，只发了几篇文章 目标 4： 画过原型和设计，做了部分APP的代码组件和雏形，在做解耦拆分，工作量大。 目标 5： 前后加起来背了有两千单词，然后被杂事打乱。 做完一本托福阅读的书籍。 由于一些原因改为考了一次雅思，发出了英国学校申请 目标 6： 从11月份和12月份的观察，到1月份回去查看了各处的楼盘，对这事情的认识有所改观，房子这个事情先不着急，但是也可以做，牵扯到的东西多，春节回来办公积金卡，5月份的时候可以再去看看。 4月份的时候回了重庆，买在了照母山旁边，目前房价已经涨起来 目标 7： 单反出去拍过，有进步 自己买了个无人机，飞行了几次，在北京由于禁飞限制，每次都要开车跑很远，飞行成本很高 买了个小提琴，没怎么动过，以后可以考虑参加培训班 目标 8： 打过打乒乓球和羽毛球，偶尔跑步 力量训练少，整体频次低 身在IT行业再难做到学校的作息","categories":[],"tags":[{"name":"总结","slug":"总结","permalink":"http://zichao.me/tags/总结/"}]},{"title":"使用CocoaPods创建私有仓库","slug":"使用CocoaPods创建私有仓库","date":"2016-11-22T11:09:59.000Z","updated":"2019-01-24T12:14:28.320Z","comments":true,"path":"2016/11/22/使用CocoaPods创建私有仓库/","link":"","permalink":"http://zichao.me/2016/11/22/使用CocoaPods创建私有仓库/","excerpt":"","text":"一、两个概念：1、XXX.podspec 配置文件spec 配置文件是cocoapods的每一个代码仓库所对应的信息管理文件，主要是对仓库的行为进行配置，每一个版本的代码仓库都对应有一个配置文件。 包括仓库的名称、版本号、描述、主页地址、证书说明、作者、版本指定方式、工程的目标版本号、文件和资源的路径、依赖的库关系等。举例如下： 12345678910111213141516171819202122232425262728293031323334353637383940## Be sure to run `pod lib lint ios-category.podspec&apos; to ensure this is a# valid spec before submitting.## Any lines starting with a # are optional, but their use is encouraged# To learn more about a Podspec see http://guides.cocoapods.org/syntax/podspec.html#Pod::Spec.new do |s| s.name = &apos;ios-category&apos; s.version = &apos;0.0.2&apos; s.summary = &apos;ios-category is used for ios-network&apos;# This description is used to generate tags and improve search results.# * Think: What does it do? Why did you write it? What is the focus?# * Try to keep it short, snappy and to the point.# * Write the description between the DESC delimiters below.# * Finally, don&apos;t worry about the indent, CocoaPods strips it! s.description = &lt;&lt;-DESC s.homepage = &apos;http://www.example.com&apos; # s.screenshots = &apos;www.example.com/screenshots_1&apos;, &apos;www.example.com/screenshots_2&apos; s.license = &#123; :type =&gt; &apos;MIT&apos;, :file =&gt; &apos;LICENSE&apos; &#125; s.author = &#123; &apos;xuzichao&apos; =&gt; &apos;xuzichao03@gmail.com&apos; &#125; s.source = &#123; :git =&gt; &apos;git@code.xuzichao.org:tt_pods_ios-category.git&apos;, :tag =&gt; s.version.to_s &#125; # s.social_media_url = &apos;https://twitter.com/&lt;TWITTER_USERNAME&gt;&apos; s.ios.deployment_target = &apos;6.0&apos; s.source_files = &apos;ios-category/Classes/**/*&apos; s.resource_bundles = &#123; &apos;ios-category&apos; =&gt; [&apos;ios-category/Resources/*&apos;] &#125; # s.public_header_files = &apos;Pod/Classes/**/*.h&apos; # s.frameworks = &apos;UIKit&apos;, &apos;MapKit&apos; # s.dependency &apos;ios-categorying&apos;, &apos;~&gt; 2.3&apos;end 2、Spec repo组合词，表示仓库的概念，主要是用于存储pod代码库对应的podspec文件，管理各个仓库的各个版本的代码，它其实就是一个容器。Cocoapods会默认在本地建立一个容器，包含了你各个工程对应的代码仓库，当你使用了Cocoapods后，它们就会被clone到本地的~/.cocoapods/repos目录下。这里指代的是Cocoapods默认创建的仓库，其实我们不需要关心。 当我们创建私有库的时候，我们需要有自己的容器，用于存放自己的各个代码库，和上面的Cocoapods创建的是区别开的。我们自己创建的容器，其实就是一个远端的git仓库，我们把代码库对应的各个版本配置文件提交上去。 二、创建的操作：1、使用cocoapods：1.1 命令 1234sudo gem install cocoapodstouch podfilepod installpod update 1.2 pod install 、 pod update pod install 将pod的版本写入Podfile.lock文件中.对于已经在Podfile.lock中有记录的Pod下载对应的版本，即便有新的版本，也不会去更新.对于没有记录的，根据Podfile中的约定，下载版本，并把版本信息写入Podfile.lock中. 只有当需要更新pod版本时，才用pod update,其余时间都用pod install 2、私有库2.1 创建并设置一个私有的Spec Repo。 1$ pod repo add TestSpecs https://coding.net/test.git 2.2 创建Pod的所需要的项目工程文件，并且有可访问的项目版本控制地址。 1234$ git add .$ git commit -s -m &quot;我的工程代码文件&quot;$ git remote add origin git@coding.net:ios-category.git $ git push origin master 2.3 创建Pod所对应的podspec文件。 1$ pod spec create ios-category.podspec 2.4 本地测试配置好的podspec文件是否可用。 123$ pod lib lint $ pod &apos;ios-category&apos;, :podspec =&gt; &apos;~/Users/ios-category.podspec&apos; #指定podspec文件 2.5 向私有的Spec Repo中提交podspec。 1pod repo push TestSpecs ios-category.podspec 2.6 在个人项目中的Podfile中增加刚刚制作的好的Pod并使用。 12345678# privatesource &apos;https://coding.net/test.git&apos;# publicsource &apos;https://github.com/CocoaPods/Specs.git&apos;target &apos;ReactiveCocoaDemo&apos; dopod &quot;ios-category&quot;, &quot;0.1.0&quot;end 三、其他说明按照阶段二进行操作，即可顺利完成pod工程的引用，其他介绍说明文档中可能出现的，testpod 工程，其实可以不用管。比如： 1pod spec create PodTestLibrary git@coding.net:test.gitt 以及由于pod的各个版本变化，spec文件有可能本来是正确的，但是pod lib lint这一步始终不能通过，这样pod repo push这一步就无法完成。可以直接将spec文件通过git 提交的方式放进远端的Spec Repo中，依然可以正常运行。","categories":[],"tags":[{"name":"开发","slug":"开发","permalink":"http://zichao.me/tags/开发/"}]},{"title":"AOP面向切面编程","slug":"AOP面向切面编程","date":"2016-10-04T14:59:12.000Z","updated":"2019-01-24T12:14:28.313Z","comments":true,"path":"2016/10/04/AOP面向切面编程/","link":"","permalink":"http://zichao.me/2016/10/04/AOP面向切面编程/","excerpt":"","text":"AOP可以理解为面向切面编程，如果OOP编程可以将各个业务模块化，那么我们可以认为AOP是从模块的侧面一刀切入进行操作，提炼出各个业务模块中公共部分进行操作，侧面切入可以做到不影响原本的业务功能，实现相对独立的功能构建，与原业务无耦合。大的功能比如各个业务的日志统计、性能分析、异常处理等等，小的功能点可以一些运行时信息的读取。 在iOS中实现AOP的编程思想主要是基于Runtime机制，Objectve-c是动态的编程语言，在运行时也能够对外提供交互的方法，不仅仅是方法交换，所有你能想象的应用场景，这非常有利于我们进行AOP切面编程。 一、Category构建安全校验开发过程中我们通常遇到一些安全检验判断，防止数据格式不对的时候引起异常或者崩溃。比如对字典和数组进行的操作，是否存在对应的数据类型，是否超出下标越界，添加的对象是否为空。通常我们再开发的时候每次都需要进行if条件的判断，这样的操作其实很繁琐。 1、代码中频繁的判断操作1.1 如果没有添加判断，obj为nil将出现异常崩溃 1234567891011//字典NSMutableDictionary *param = [NSMutableDictionary new];if (obj) &#123; [params setObject:obj forKey:@&quot;obj&quot;];&#125;//数组NSMutableArray *array = [NSMutableArray array];if (obj) &#123; [array addObject:obj]&#125; 1.2 获取字典或者数组中对应的数据类型 1234567891011121314//字典NSDictionary *dic = fromNetDic; NSString *str = @&quot;&quot;; id value = [dic objectForKey:key]; if (value &amp;&amp; [value isKindOfClass:[NSString class]]) &#123; str = value; &#125;else if(value &amp;&amp; [value isKindOfClass:[NSNumber class]])&#123; str = [value stringValue]; &#125;else&#123; str = @&quot;&quot;; &#125;//数组同理 2、通过切面编程改进上面的都是日常频繁操作，每次都写编程就会变得低效，我们通过新建分类进行改善，不需要再频繁判断，且保证代码原本操作的不变。 2.1 新建替换操作方法基于NSObject的分类 1234567891011121314151617181920212223242526#import &quot;NSObject+MethodReplace.h&quot;#import &lt;objc/runtime.h&gt;@implementation NSObject(MethodReplace)- (void)swizzleMethod:(SEL)origSelector withMethod:(SEL)newSelector&#123; Class class = [self class]; Method originalMethod = class_getInstanceMethod(class, origSelector); Method swizzledMethod = class_getInstanceMethod(class, newSelector); BOOL didAddMethod = class_addMethod(class, origSelector, method_getImplementation(swizzledMethod), method_getTypeEncoding(swizzledMethod)); if (didAddMethod) &#123; class_replaceMethod(class, newSelector, method_getImplementation(originalMethod), method_getTypeEncoding(originalMethod)); &#125; else &#123; method_exchangeImplementations(originalMethod, swizzledMethod); &#125;&#125;@end 2.2 字典的安全写法替换，不需要再判断类型， 数组也是同理 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354#import &quot;NSDictionary+Safe.h&quot;#import &quot;NSObject+MethodReplace.h&quot;@implementation NSDictionary (Safe)+ (void)load&#123; static dispatch_once_t onceToken; dispatch_once(&amp;onceToken, ^&#123; id obj = [[self alloc] init]; [obj swizzleMethod:@selector(valueForKey:) withMethod:@selector(safeValueForkey:)]; &#125;);&#125;- (id)safeValueForkey:(NSString *)key&#123; id value = nil; if (key &amp;&amp; ![key isEqualToString:@&quot;&quot;]) &#123; if ([self.allKeys containsObject:key]) &#123; value = [self valueForKey:@&quot;key&quot;]; if ([value isKindOfClass:[NSNumber class]]) &#123; value = ((NSNumber *)value).stringValue; &#125; else if ([value isKindOfClass:[NSString class]]) &#123; value = (NSString *)[self valueForKey:@&quot;key&quot;]; &#125; &#125; &#125; return value;&#125;@end@implementation NSMutableDictionary (Safe)+ (void)load&#123; static dispatch_once_t onceToken; dispatch_once(&amp;onceToken, ^&#123; id obj = [[self alloc] init]; [obj swizzleMethod:@selector(setObject:forKey:) withMethod:@selector(safeSetObject:forKey:)]; &#125;);&#125;- (void)safeSetObject:(id)anObject forKey:(id&lt;NSCopying&gt;)aKey&#123; if (aKey) &#123; if (anObject) &#123; [self setObject:anObject forKey:aKey]; &#125; &#125;&#125;@end 二、AOP编程库AspectsAspects是iOS面向切面编程的一个代表，本质上也是对runtime在方法替换上的一个封装，包含了强大也简单易用的方法，可以再原方法的前后执行或者替换删除执行，并且提供了AspectInfo作为所有方法的参数。 1234567891011121314151617181920212223242526272829303132333435typedef NS_OPTIONS(NSUInteger, AspectOptions) &#123; AspectPositionAfter = 0, /// Called after the original implementation (default) AspectPositionInstead = 1, /// Will replace the original implementation. AspectPositionBefore = 2, /// Called before the original implementation. AspectOptionAutomaticRemoval = 1 &lt;&lt; 3 /// Will remove the hook after the first execution.&#125;;@protocol AspectInfo &lt;NSObject&gt;/// The instance that is currently hooked.- (id)instance;/// The original invocation of the hooked method.- (NSInvocation *)originalInvocation;/// All method arguments, boxed. This is lazily evaluated.- (NSArray *)arguments;@end@interface NSObject (Aspects)+ (id&lt;AspectToken&gt;)aspect_hookSelector:(SEL)selector withOptions:(AspectOptions)options usingBlock:(id)block error:(NSError **)error;/// Adds a block of code before/instead/after the current `selector` for a specific instance.- (id&lt;AspectToken&gt;)aspect_hookSelector:(SEL)selector withOptions:(AspectOptions)options usingBlock:(id)block error:(NSError **)error;@end 我们从他的具体实现上可以看到，本质的也是利用了runtime的methodReplace 12345678910111213141516171819static void aspect_prepareClassAndHookSelector(NSObject *self, SEL selector, NSError **error) &#123; NSCParameterAssert(selector); Class klass = aspect_hookClass(self, error); Method targetMethod = class_getInstanceMethod(klass, selector); IMP targetMethodIMP = method_getImplementation(targetMethod); if (!aspect_isMsgForwardIMP(targetMethodIMP)) &#123; // Make a method alias for the existing method implementation, it not already copied. const char *typeEncoding = method_getTypeEncoding(targetMethod); SEL aliasSelector = aspect_aliasForSelector(selector); if (![klass instancesRespondToSelector:aliasSelector]) &#123; __unused BOOL addedAlias = class_addMethod(klass, aliasSelector, method_getImplementation(targetMethod), typeEncoding); NSCAssert(addedAlias, @&quot;Original implementation for %@ is already copied to %@ on %@&quot;, NSStringFromSelector(selector), NSStringFromSelector(aliasSelector), klass); &#125; // We use forwardInvocation to hook in. class_replaceMethod(klass, selector, aspect_getMsgForwardIMP(self, selector), typeEncoding); AspectLog(@&quot;Aspects: Installed hook for -[%@ %@].&quot;, klass, NSStringFromSelector(selector)); &#125;&#125; 在AspectOptions执行方式上的实现，是通过数组进行保存，并放在替换方法的前后invoke执行的 12345678910111213141516171819202122// Before hooks.aspect_invoke(classContainer.beforeAspects, info);aspect_invoke(objectContainer.beforeAspects, info);// Instead hooks.BOOL respondsToAlias = YES;if (objectContainer.insteadAspects.count || classContainer.insteadAspects.count) &#123; aspect_invoke(classContainer.insteadAspects, info); aspect_invoke(objectContainer.insteadAspects, info);&#125;else &#123; Class klass = object_getClass(invocation.target); do &#123; if ((respondsToAlias = [klass instancesRespondToSelector:aliasSelector])) &#123; [invocation invoke]; break; &#125; &#125;while (!respondsToAlias &amp;&amp; (klass = class_getSuperclass(klass)));&#125;// After hooks.aspect_invoke(classContainer.afterAspects, info);aspect_invoke(objectContainer.afterAspects, info); 三、小结AOP编程给开发者在一些公共方法的解耦和实现带来一些新的思路，提高的编程效率和优化了工程结构，除了Aspects，类似的库还有JRSwizzle和RSSwizzle。","categories":[],"tags":[{"name":"开发","slug":"开发","permalink":"http://zichao.me/tags/开发/"}]},{"title":"iOS热补丁方案","slug":"iOS热补丁方案","date":"2016-09-11T14:59:12.000Z","updated":"2019-01-25T09:21:41.345Z","comments":true,"path":"2016/09/11/iOS热补丁方案/","link":"","permalink":"http://zichao.me/2016/09/11/iOS热补丁方案/","excerpt":"","text":"TTSparkRescue 备注：2017年4月开始出现使用热修复审核不通过的情况，经过混淆的方式后，绕过了苹果的检测，但是到5月初的时候，苹果全方面严打IOS热修复策略，各方APP包括头条在内的方案被迫下架。 1. 简介TTSparkRescue是头条公司层面的通用的热修复库，同时提供给其他产品线使用。设计包括如下： 启动崩溃计数修改为3秒后清除 启动初始化的预清理 启动崩溃本地有缓存预先执行 启动崩溃第二次，启动上报逻辑和预处理 启动崩溃第三次，开始启动修复逻辑 启动后修复 补丁下发更新机制 客户端本地处理下发的patch错误 下发JS空白 下发前，本地预先运行，验证JS脚本 本地模拟crash 管理的系统版本号粒度更精细 增加端监控，传出参数，由TTMonitor在外部配合调到 2. 快速集成2.1 Podfile引用123source &apos;头条内部的git地址&apos;pod &apos;TTSparkRescue&apos;, &apos;2.3&apos; 2.2 代码块替换 方法A: APP原本的didFinishLaunchingWithOptions的全部逻辑didFinishLaunchingWithOptions 方法B : 新建并复制，参数和函数体与方法A保持一致 12- (BOOL)application:(UIApplication *)application normalLaunchProcessWithOptions:(NSDictionary *)launchOptions 使用TTJSPatch结构替换方法A，下面部分可以直接复制即可用： 123456789101112131415161718192021222324252627282930313233343536373839404142434445- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions &#123; __weak typeof(self) wself = self; #if DEBUG //默认注释关闭 // [[TTSparkRescue shareInstance] setTestPatch:YES simulationCrash:YES];#endif //内部监控上报 [[TTSparkRescue shareInstance] setReportBlock:^(NSString *key, NSDictionary *info) &#123; //crash的预处理逻辑 if ([key isEqualToString:TTJSPatchLaunchCrash]) &#123; //优先清理coredata缓存 //解决可能造成的crash //连续崩溃第四次才启用安全模式 &#125; [[TTMonitor shareManager] trackService:key status:1 extra:info]; &#125;]; //运行错误处理，内部已加监控, type == 1 for JS, type == 2 for OC [[TTSparkRescue shareInstance] setJSCrashHanlder:^(NSInteger type, NSString *msg) &#123; &#125;]; //CompletionBlock:头条正常启动逻辑 [[TTSparkRescue shareInstance] setBoolCompletionBlock:^BOOL&#123; #if DEBUG //本地测试的时候模拟crash，不必注释，由前面的开关控制即可 [[TTSparkRescue shareInstance] simulationLauchCrash]; [[TTSparkRescue shareInstance] simulationLauchDelayCrash]; [[TTSparkRescue shareInstance] simulationActiveCrash]; #endif return [wself application:application normalLaunchProcessWithOptions:launchOptions]; &#125;]; //启动执行逻辑，完成后调用CompletionBlock return [[TTSparkRescue shareInstance] launchContinuousCrashProcess];&#125; 3. 功能设计3.1、说明：1、启动崩溃计数修改为12秒后清除 如果启动过程中，出现延迟操作，操作时间在原先的5秒之外，那么这次操作如果出现崩溃将无法被记录下。也就无法再启动中修复。 将清除时间调大，设置为一个网络请求的返回时间，覆盖了延迟造作造成的crash。 2、启动初始化的预清理 当我们判断当前版本号发生变化时，直接清除本地的patch文件，避免升级覆盖安装后，还持有原先逻辑或者错误。 3、启动崩溃本地有缓存预先执行 因为是修复崩溃的逻辑，之前需要达到崩溃条件后才开始请求下发，原本就体验差了，如果再遇上网络缓慢的时候，启动会很慢， 体验更差。并且每次都会崩溃后重新启动。此次修改后，出现一次之后同步请求返回patch,正常启动，下次进入，判断有缓存就直接执行， 执行异步的请求更新。 4、启动崩溃第二次，启动上报逻辑和预处理 APPDelegate 上报和预处理逻辑 ReportBlock，当出现第二次崩溃的时候，可以删除本地的一些可能会导致crash的东西，比如本地的数据库可以先清理掉，等等。然后统计上报。 5、启动崩溃第三次，开始启动修复逻辑 如果本地有缓存，则网络异步更新，因为后面的逻辑保证本地已有的缓存patchJS执行没错，所以可以先执行。如果本地无缓存，则网络同步请求，返回补丁，运行成功后再启动APP正常流程。不会再出现再次崩溃3此的情况。只要出现3次崩溃，忽略本地缓存，直接请求更新。 6、启动后修复 启动中的时候，判断本地有缓存文件，预先执行，之后，每次active就会请求更新文件 7、补丁下发更新机制 本地无缓存，直接存储，有缓存，判断版本号。 我们在后台下发补丁的时候，目前依旧保持，升级版本号，全量覆盖。也就是说，app每个版本，在客户端里依旧保持唯一一个补丁，启动前和启动后各自有对应的唯一一个。此处，服务端也有策略，我们上传的参数包含当前，版本，如果服务端有更高版本，就会升级。 8、客户端本地处理下发的patch错误 (void)handleException:(void (^)(NSInteger crashType,NSString *msg))exceptionBlock;crashType == 1 的时候是 JS环境 运行的CrashcrashType == 2 的时候是 OC环境 运行的Crash当我们下发的脚本有问题的时候，客户端本地直接删除全部补丁文件，包括启动前和启动后。APPDelegate 中 JSCrashHanlder 被调用，可以填写上报逻辑和反馈运行的错误原因。在此条件下，当用户退到后台之后，自动崩溃，重新打开客户端没有patch，这个留出来及时下发修正后Patch的时机。 9、下发JS空白 直接删除本地补丁文件 10、下发前，本地预先运行，验证JS脚本 直接将要在后台要下发的JS代码，非BASE64编码，贴到工程里的test.js 文件里，此处文件名固定。并在APPDelegate 打开测试运行的开关，然后直接运行即可，测试完毕，防止错误，必须关闭。 11、本地模拟crash 增加错误的OC代码导致crash，用于模拟各种情况，包括启动中，启动中延时，启动后。并设置了开关，默认都是关闭的，随测试方法的开关一起，正式提交时，必须关闭。 2、管理的系统版本号粒度更精细 整数示例：8，9，10 —- 后台命中：8.x,9.x,10.x IOS系统版本精确示例：9.1.2 — 后台命中：9.1.2 IOS系统版本 13、下发补丁一并写注释 每次下发补丁，需要填写说明，包括：【事故原因】【下发人】【下发日期】 14、启动后的下发调用改为通知 不需要在applicationDidBecomeActive中再显示调用原来的makePatchRequestAfterLaunch，manager内部监听通知即可。 15、增加端监控，传出参数，由TTMonitor在外部配合调到 监控请求成功和失败、下发更新、版本升级删除的等等用于统计patch的使用情况，后期有利于生成分布和图形。TTSparkRescueLaunchCrashAPPDelegate 上报和预处理逻辑 ReportBlock，当出现第二次崩溃的时候，可以删除本地的一些可能会导致crash的东西，比如本地的数据库可以先清理掉，等等。然后统计上报。TTSparkRescueServerCloseCrash服务器端下发关闭运行JSPatch的统计TTSparkRescueDeleteFile删除清空本地文件的统计，下发空白、错误、运行错误、升级都会删除之前的缓存文件，用action字段区分。TTSparkRescueError内部运行的错误报告，文件请求失败和运行失败等。TTSparkRescueUpdateFile统计更新成功的事件 3.2、测试Case1、启动中，有崩溃，包括延时崩溃，无缓存文件。正常同步请求返回，APP启动完成。 2、启动中，有崩溃，包括延时崩溃，有缓存文件。直接读取本地文件，APP启动完成。 3、启动中，有崩溃，包括延时崩溃，下发JS语法的patch文件。无法正常启动，连续crash3次后走同步请求。 4、启动后，有崩溃，无缓存文件。正常异步请求返回，APP正常运行。 5、启动后，有崩溃，有缓存文件。直接读取本地文件，正常同步请求返回更新文件，APP正常运行。 6、启动后，下发错误JS语法的patch文件。客户端判断文件出错，删除全部补丁缓存文件，清零，开始重新请求更新。 7、以上case通过线上下发运行一次，再本地测试开关运行一次。testPatch.js 在主工程被正确添加后，都可以正确执行。 8、升级版本号，覆盖安装。删除本地原有的补丁文件，清零。 9、监控点事件上报。正常对外输出事件和外带信息到APPDelegate中 4. 使用说明4.1 补丁后台管理客户端的修复需要后端的支持，提供接口和后端管理平台，用于托管修复文件，控制版本和保证传输安全。客户端根据反馈的崩溃信息(版本、名称、设备、用户)，针对某一批用户或者某一个版本号，在后台进行选择对应的版本JS文件，进行下发即可。 4.1.1 热修复接口定义应用名称和应用ID作用一致，为了兼容老的已经发出去的版本，我们保留app_name，之后的都是用app_id，两者等效力，参数命中其中一个，至少有一个就行，就可以返回值。 参数 参数ID 举例说明 应用版本号 app_version 5.6.0 应用名称 app_name 今日头条 应用ID app_id com.iphone.text 启动前后 app_launch 0前1后 设备ID device_id 用户的手机设备ID 编号 无，客户端不作请求参数 服务端后台的文件号，随意定，不重复即可 百分比 无，客户端不作请求参数 服务端后台按量下发补丁 ON/OFF 无，客户端不作请求参数 服务端后台控制补丁开关 逗号分隔 无，客户端不作请求参数 服务端后台下发补丁，支持不同的版本，逗号分隔 应用版本号扩展 无，客户端不作请求参数 服务端后台下发的补丁，补丁本身的版本号，格式约定：应用版本号整数数字.补丁版本号整数数字，比如：570.1，591.21 4.1.2 数据格式123456789&#123;status:0, message:&quot;&quot;,data:&#123; js_crash:0, //修复代码本身出错的时候打开 js_version:560.4, //5.6.0版本的第四个JS版本 js_value: &quot; sfkdsfnldjgdfnkgndkfngdsfgmdfngfjshdbfkhrwnf&quot; //js的BASE64编码值，客户端直接解码运行 &#125;&#125; 4.2 客户端运行：补丁分为启动前和启动后，和前面快速集成代码块一样，只需要这里，就已经是全部，启动前后的划分在内部执行，通知监听，不需要手动再调用。 4.3、具体案例：案例：5.7.0版本上bug修复 当我们需要完全替换方法的时候，我们需要注意替换原则，就是尽量使用原生的Native方法，这样JSpatch在转化的过程中可以遵循原生方法规则，生成对应代码，在解析的时候可以还原。比如： 4.3.1 使用注意123static inline void setAutoresizingMaskFlexibleWidthAndHeight(UIView *view)&#123; view.autoresizingMask = UIViewAutoresizingFlexibleWidth|UIViewAutoresizingFlexibleHeight;&#125; setAutoresizingMaskFlexibleWidthAndHeight(self.footerView);我们在写的时候得写成：self.footerView.autoresizingMask = 2|16;系统自定义的常量，比如：UIViewAutoresizingFlexibleWidth,在JSPtatch中将被转化为同名的变量，然而这个变量，却在JS环境中没有定义，从而会报错。所以我们直接使用对应的常量数字 2. 1[[self.footerView footerScrollView] tt_addDelegate:self asMainDelegate:NO]; 用于JSPatch自定义的语法为使用下划线区分方法名称，所以当转化为的JS再次被转回来OC方法的时候，会出现[[self.footerView footerScrollView] tt:addDelegate:self asMainDelegate:NO];这样就崩溃了。 4.3.2 示例Native源代码： 12345678910111213141516171819202122@implementation TTDetailWebviewContainer- (void)addFooterView:(UIView&lt;TTDetailFooterViewProtocol&gt; *)footerView detailFooterAddType:(TTDetailNatantStyle)natantStyle&#123; self.natantStyle = natantStyle; self.footerView = footerView; [self.footerView addObserver:self forKeyPath:@&quot;footerScrollView&quot; options:NSKeyValueObservingOptionOld | NSKeyValueObservingOptionNew context:nil]; [[self.footerView footerScrollView] tt_addDelegate:self asMainDelegate:NO]; self.footScrollView = self.footerView.footerScrollView; self.footerView.frame = self.bounds; //footerScrollView被赋值后，刷新scrollEnable和scrollToTop的状态； self.footerStatus = self.footerStatus; setAutoresizingMaskFlexibleWidthAndHeight(self.footerView); if ([self shouldOpenInsertionOptimization]) &#123; [self addFooterView]; &#125; else &#123; [self addFooterView]; &#125;&#125;@end 目标JS代码： 123456789101112131415161718defineClass(&apos;TTDetailWebviewContainer&apos;, &#123;addFooterView_detailFooterAddType: function(footerView, natantStyle) &#123;self.setNatantStyle(natantStyle);self.setFooterView(footerView);self.footerView().addObserver_forKeyPath_options_context(self, &quot;footerScrollView&quot;, 1|2, null);self.footerView().footerScrollView().tt__addDelegate_asMainDelegate(self, false);self.setFootScrollView(self.footerView().footerScrollView());self.footerView().setFrame(self.bounds());self.setFooterStatus(self.footerStatus());self.footerView().setAutoresizingMask(2 | 16);if (self.shouldOpenInsertionOptimization()) &#123;self.addFooterView();&#125; else &#123;self.addFooterView();&#125;&#125;,&#125;); 5. 原理介绍5.1 三方库JSPatch(Github链接)诞生于2015年5月，最初是腾讯广研高级iOS开发@bang的个人项目。在Github.com上开源后获得了几千个star和几百个fork，广受关注，目前已被应用在大量腾讯/阿里/百度的App中。只需要在项目里引入极小的引擎文件，就可以使用 JavaScript 调用任何 Objective-C 的原生接口，替换任意 Objective-C 原生方法。所以我们通过下发 JS 脚本替换原生 Objective-C 代码，就可以实时修复线上 bug。针对头条客户端用于解决客户端发布后的崩溃修复问题，尤其是解决客户端的启动崩溃问题。 12#import &lt;objc/runtime.h&gt;#import &lt;objc/message.h&gt; 5.2 TTSparkRescue5.2.1 修复类型5.2.1.1 启动进行中当发生启动崩溃的时候，通过同步的网络请求，下发JS脚本执行修复。下发的条件由本地的崩溃计数决定，应用每次启动都会在本地增加一次崩溃计数，并在3秒之后将计数清理，如果3秒内崩溃，则判定为一次真实的崩溃。当崩溃次数达到设置的条件的时候，比如连续崩溃3次，客户端就开始执行修复的逻辑过程，向后端发起对此接口的同步请求，由接口信息告知是否需要使用JS修复，是否需要更新JS文件，文件版本号以及JS文件内容的加密值。请求返回后，由客户端本地判断更新文件，下载，并执行。如果本地之前没有修复的JS 文件，默认需要请求更新。更新文件成功后，对应更新本地的文件版本号和MD5值。 同步请求： 123456789101112dispatch_semaphore_t semaphore = dispatch_semaphore_create(0);dispatch_queue_t queue = dispatch_queue_create(&quot;queue&quot;, NULL);dispatch_async(queue, ^(void) &#123; HandlerBlock semaphoreBlock = ^(TTSparkRescueCrashType type,NSString *msg)&#123; dispatch_semaphore_signal(semaphore); &#125;; [self getLaunchRequestBlock:semaphoreBlock];&#125;); dispatch_semaphore_wait(semaphore, DISPATCH_TIME_FOREVER); 请求返回保存本地 12- (void)updateLaunchLocalJS:(NSString *)launchJS versionCode:(NSNumber *)versionCode 执行本地JS代码 12- (void)exvalueBase64Script:(NSString *)base64Script;- (void)exvalueRescueScript:(NSString *)jsScript; 监听是否有执行错误 1- (void)setJSCrashHanlder:(HandlerBlock)handlerBlock; 5.2.1.2 启动完成后，使用中当到达启动崩溃条件的时候，我们直接执行启动热修复逻辑。启动的时间稍微加长，遇见网络慢的情况用户需要等待的时间就会更久，当然为了避免崩溃这都是必要的。还有，另外的情况是，当用户使用我们的应用的时候，在一个层级比较深的地方操作并出现崩溃，当用户用到这里之前才会崩溃都不会有，这种情况我们依然需要进行热修复。流程类似，为异步。 5.2.2 补丁模拟自测123456789101112/** * 测试环节，用一个方法控制开关 * 执行测试的testPatch.js,固定命名，测试完毕提交的时候必须关闭 * 模拟启动中崩溃,立刻 * 模拟启动中延迟崩溃，延迟启动中网络请求返回的默认时间10s * 模拟激活后崩溃,60s */- (void)setTestPatch:(BOOL)testJsOn simulationCrash:(BOOL)crashOn;- (void)simulationLauchCrash;- (void)simulationLauchDelayCrash;- (void)simulationActiveCrash; 5.2.2 混淆方式，绕过审核5.2.2.1 原理：我们大致判断，苹果审核部检测应用是否使用JSPatch是通过运行时方法名检测。所以通过宏定义替换的方式，我们将与”JSPatch“有关的字段都用混淆的字符串进行宏定义替换，运行时检测到的都是混淆的不可读名称。 5.2.2.2 脚本替换shell脚本： 1234567891011121314151617181920212223242526#!/usr/bin/env bash STRING_SYMBOL_FILE=&quot;func.list&quot; HEAD_FILE=&quot;./confuseMacro.h&quot; export LC_CTYPE=C ramdomString() &#123; openssl rand -base64 64 | tr -cd &apos;a-zA-Z&apos; |head -c 16 &#125; rm -f $HEAD_FILE touch $HEAD_FILEecho &apos;#ifndef Demo_codeObfuscation_h #define Demo_codeObfuscation_h&apos; &gt;&gt; $HEAD_FILE echo &quot;//confuse string at `date`&quot; &gt;&gt; $HEAD_FILE cat &quot;$STRING_SYMBOL_FILE&quot; | while read -ra line; do if [[ ! -z &quot;$line&quot; ]]; then ramdom=`ramdomString` echo $line $ramdom echo &quot;#define $line $ramdom&quot; &gt;&gt; $HEAD_FILE fi done echo &quot;#endif&quot; &gt;&gt; $HEAD_FILE 宏定义替换结果： 1234567891011121314151617181920212223242526272829303132333435363738394041#ifndef Demo_codeObfuscation_h #define Demo_codeObfuscation_h//confuse string at 2017年 5月 9日 星期二 15时09分20秒 CST#define JPEngine zLuEDxRvmBuomcFI#define JPExtension IoAZxAmFBjgEOaIg#define JPBoxing wzZsoLGKuQUTRFsi#define startEngine PRqvWWtwFlXUqdBe#define evaluateScriptWithPath cNHrlJKiZyWXkfKo#define _evaluateScriptWithPath oDyiimPOHiIWBOEI#define addExtensions MbpkqoMunCfIBgxY#define defineStruct jIfCtJkMsIshJCvx#define formatPointerJSToOC IcHiIjXLjFucrQHR#define formatRetainedCFTypeOCToJS lyCjsaHwzQaYUiBE#define formatPointerOCToJS DdwjOGMUveuHjYQq#define formatJSToOC BBFoPIaVlHRWBNQx#define formatOCToJS PHwNpfqmydeeFhMY#define TTSparkRescue euibpyTZoKOvrKyO#define exvalueBase64Script fcXBLgUPqmsRqIWx#define _JSOverideMethods FBOBELKtnClIUhEa#define _TMPMemoryPool ysvnOHCwoCVvFwfY#define _propKeys cnyhVgwVNuEVAvEp#define _JSMethodSignatureCache inrkXDymTFAbwLRo#define _JSMethodSignatureLock LmXaTYYBizrQBKzn#define _JSMethodForwardCallLock YdmfSXxrtNuKsJkp#define _protocolTypeEncodeDict NxHWlKlDFjjgpzYV#define _pointersToRelease pybucmDygKyxFMvj#define jp_methodSignatureForSelector cyzfrUQNsmWrwIgU#define jp_fixMethodSignature vlSNUMpVTTXwTWJl#define JPForwardInvocation gflqBWbUOmJHNfcL#define JPExecuteORIGForwardInvocation itGMsXKksYYFyCPL#define _initJPOverideMethods hpoUXLPSkKsFbHRk#define overrideMethod KCgQjNlpCNXOixZS#define invokeVariableParameterMethod YITOuEIcAICefCkG#define convertJPSelectorString wwttXxSrZoFlmKML#define getJSFunctionInObjectHierachy JjRtFUqUREPdZAgY#define unboxOCObjectToJS MeVMxsEAmgCokbXc#define makePatchRequestAfterLaunch icreqUfezHNyjLdw#define setJSCrashHanlder hwsfKTIzZPvTEMmc#define getLaunchPatchVersionCode jqRICpprUZpVeKVy#define getActivePatchVersionCode zZIvunQsewkyABXu#endif","categories":[],"tags":[{"name":"开发","slug":"开发","permalink":"http://zichao.me/tags/开发/"}]},{"title":"移动端持久化存储方案","slug":"移动端持久化存储方案","date":"2016-08-03T04:01:51.000Z","updated":"2019-01-24T12:14:28.327Z","comments":true,"path":"2016/08/03/移动端持久化存储方案/","link":"","permalink":"http://zichao.me/2016/08/03/移动端持久化存储方案/","excerpt":"","text":"一、持久化方案：1.1 NSUserDefault通常用来存储用户偏好设置和应用配置信息，偶尔也会存放一些服务端版本标识数据，比如AB方案的判断开关。它适合小规模的数据，并且这些数据是不具备私密性的。常见的应用启动的时候是否需要展示引导页，就可以在这里设置一个是否已显示过的标志。它的背后实际上是一个特殊的 .plist 文件。 1.2 KeychainKeychain 用来存储一些敏感的数据，比如密码，token 等。由于相关的 API 比较底层，我们可以使用对其做了封装的更友好的第三方库，比如 FXKeychain。 1.3 文件文件存储一般用于存取媒体文件，包括视频音频图片等。比如iOS端上由于本地资源库没法直接读取视频数据本身，通常会转化到文件里面再进行上传处理。 1.4 Plist.plist 文件用来存储小规模的结构化的数据，用到的时候可以很方便的读取。常见的比如“省-城市”数据。但存储对象类型只能是这些：NSData，NSString，NSNumber，NSDate，NSArray，NSDictionary。NSKeyedArchiver：由于 Plist 对存储对象类型的限制，如果想存更大量的，结构更复杂的对象，就可以用归档。只需要自定义的数据类型遵守 NSCoding 协议。 1.5 数据库上面提到的几种方案都是很轻量级的，一旦数据量更大，数据结构及关联关系更复杂，需要更频繁和方便的增删改查，我们就需要用上数据库来满足这些需求。本篇涉及的数据包括：GYDataCenter、Core Data、Realm。 二. 数据库对比2.1 CoreDataCore Data 是 Apple的对象图管理和数据持久化框架。它的底层是通过 SQLite，XML 或二进制文件存储数据的。在数据存储之上，又提供了数据模型的解决方案。可以说它搭起了下层数据和上层对象之间的桥梁，将关系型数据转成对象，并通过对象图组织起来，进行自动管理。同时使得开发者可以面向对象编程。 虽然是苹果自带的数据库方案，但是它常常为人所诟病。不展开对它的使用，因为我们要采用的方案从来都不是它。说说那些列举不完的原因： 学习成本高，要很久才能得心应手 对象Schema改变后，数据迁移比较棘手 对于一次大量更新删除等操作效率较低 对主键的支持要自己去维护 占用内存会高 Context之间的关系和线程之间的处理感到很头痛 多个持久化文件很麻烦 2.2 RealM在选择替换数据库方案的时候，网上看了很多对realm的赞扬，尤其是在和coredata的对比之下，没有哪里是不完爆的，各种好使各种快速。不过我们还是好好的来理一下他的优缺点。 优点 使用方便 Realm并不是基于SQLite的对象关系映射数据库。它是使用自己的持久化引擎，为简单和速度而生。 快 零拷贝的设计使得它比其他数据库都更快。 跨平台 优秀的特性 如加密，图形查询，轻松的迁移。Realm的API是一个非常适合打造高响应的应用程​​序，并且Realm为我们提供方便的组件。 ### 缺点 关联关系弱 对象跟对象之间的一对多关系和多对多关系，并不能映射，需要在双方里面都写上属性，此外还需要在设置的时候两边同时设置。查询时候也是 NSPredicate 也仅仅只支持一些一层的查询，没法做出带SUBQUERY的复杂查询出来。 强制内省容错机制导致存储文件不断变大 Realm本身感觉有一个数据容错机制。但是这个机制在数据库文件有错误的情况自己修复的时候，会无限增大。官方文档里面有说到会造成这种情形的原因，我在尽我所能的避免问题以后，存储文件还是会有可能不那么夸张的变大一些。 没有细粒化通知 在某个地方做出修改。 其他地方只知道Realm有修改，但是没法知道我是增加、修改还是删除了数据。不知道我更新的是那一条数据。 增加包体积 官方说会增加1MB左右的包大小，如果你是一个小体积应用，或者是一个几千万用户的主流应用。 核心代码目前闭源 2.3 GYDataCenterGYDataCenter 是一个 SQLite 数据库框架，提供了一套简单易用的面向对象的数据操作接口，同时保留了 SQL 查询的灵活性。GYDataCenter 简单易上手，相对于 CoreData，GYDataCenter 的学习成本更低。同时，根据自己的需求，开发者可以更方便地划分数据库，设计数据库表，数据库索引等。 GYDataCenter 具有以下特性： 面向对象的数据操作接口 使用 SQLite 的 where 语句做为查询条件 自动创建及更新数据库表 高性能 cache 层 faulting 机制（类似 Core Data） 自动批量写入磁盘 使用 ANALYZE 优化查询 三、封装GYModelObject对比了上述三种数据库之后，决定放弃当前使用的coredata存储方式。另外两种在使用上各有优势，考虑到realm比较重，我们对数据库的要求不高，觉得采用比较轻量级的GYmodel尝试实现存储需求。 GYDataCenter的上手使用非常快，核心点在于继承GYModle然后与对应的数据库建立映射，并且不需要自己手动建立数据库的过程。GY基于FMDB做的封装。具体的使用这里就不展开叙述了，在具体的使用中为了更方便易用，我们讲一下对它的升级。首页我们自定一个Model,它继承自GYModelObject，叫做BaseEntity,以后其他业务使用需要存入数据库的数据，直接继承BaseEntity。 3.1 字典模型转化GYModelObject继承自NSObject，拥有基础的读取、查询和保存到数据的接口。但是通常的应用中，原始的Json数据需要转化到模型上使用，参照JSModle的使用，我们给BaseEntity新增两个方法。 (void)updateWithDictionary:(NSDictionary *)dictionary 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980- (void)updateWithDictionary:(NSDictionary *)dictionary &#123; NSArray *persistentProperties = [[self class] persistentProperties]; NSDictionary *propertyTypes = [[self class] propertyTypes]; NSDictionary *keyMapping = [[self class] keyMapping]; for (NSString *modelKey in persistentProperties) &#123; NSString *jsonKey = [keyMapping objectForKey:modelKey]; if (!jsonKey) &#123; jsonKey = modelKey; &#125; id value = [dictionary objectForKey:jsonKey]; if (value &amp;&amp; value != [NSNull null]) &#123; GYPropertyType propertyType = [[propertyTypes objectForKey:modelKey] unsignedIntegerValue]; if (propertyType == GYPropertyTypeRelationship) &#123; NSAssert([value isKindOfClass:[NSDictionary class]], @&quot;&quot;); Class propertyClass = [[[self class] propertyClasses] objectForKey:modelKey]; value = [dictionary ttentity_dictionaryValueForKey:jsonKey defalutValue:nil]; if (value) &#123; value = [propertyClass objectWithDictionary:value]; &#125; else &#123; //value不合法，忽略 NSAssert(NO, @&quot;wrong relation type&quot;); continue; &#125; &#125; else if (propertyType == GYPropertyTypeInteger) &#123; value = @([dictionary ttentity_longlongValueForKey:jsonKey defaultValue:0]); &#125; else if (propertyType == GYPropertyTypeFloat) &#123; value = @([dictionary ttentity_doubleValueForKey:jsonKey defaultValue:0]); &#125; else if (propertyType == GYPropertyTypeString) &#123; value = [dictionary ttentity_stringValueForKey:jsonKey defaultValue:nil]; &#125; else if (propertyType == GYPropertyTypeBoolean) &#123; value = @([dictionary ttentity_boolValueForKey:jsonKey defaultValue:NO]); &#125; else if (propertyType == GYPropertyTypeDate) &#123; if (![value isKindOfClass:[NSDate class]]) &#123; NSAssert(NO, @&quot;wrong date type&quot;); continue; &#125; &#125; else if (propertyType == GYPropertyTypeData) &#123; if (![value isKindOfClass:[NSData class]]) &#123; NSAssert(NO, @&quot;wrong data type&quot;); continue; &#125; &#125; else if (propertyType == GYPropertyTypeUndefined || propertyType == GYPropertyTypeTransformable) &#123; //NSNumber, NSDictionary, NSArray会走这个分支 NSString *className = [GYReflection propertyTypeOfClass:[self class] propertyName:modelKey]; Class propertyClass = NSClassFromString(className); if (propertyClass == nil || //取不到时也认为value合法，WenDaInviteData会出现这种情况 [value isKindOfClass:propertyClass] || [value isKindOfClass:[NSData class]]) &#123; // value合法 &#125; else if ([propertyClass isSubclassOfClass:[NSNumber class]] &amp;&amp; [value isKindOfClass:[NSString class]]) &#123; value = @([(NSString *)value longLongValue]); &#125; else &#123; //类型不匹配，认为value不合法，忽略赋值 LOGD(@&quot;setWrongTypeValueForKey %@ value %@&quot;, modelKey, value); continue; &#125; &#125; @try &#123; [self setValue:value forKey:modelKey]; &#125; @catch (NSException *exception) &#123; NSAssert(NO, @&quot;exception %@&quot;, exception); &#125; &#125; &#125;&#125; (NSDictionary *)toDictionary 1234567891011121314151617181920212223- (NSDictionary *)toDictionary &#123; NSArray *persistentProperties = [[self class] persistentProperties]; NSDictionary *keyMapping = [[self class] keyMapping]; NSMutableDictionary *dictionary = [NSMutableDictionary dictionaryWithCapacity:persistentProperties.count]; for (NSString *modelKey in persistentProperties) &#123; NSString *jsonKey = [keyMapping objectForKey:modelKey]; if (!jsonKey) &#123; jsonKey = modelKey; &#125; id value = [self valueForKey:modelKey]; if (value) &#123; if ([value isKindOfClass:[TTEntityBase class]]) &#123; [dictionary setValue:[value toDictionary] forKey:jsonKey]; &#125; else &#123; [dictionary setValue:value forKey:jsonKey]; &#125; &#125; &#125; return dictionary;&#125; 3.2 查询 (NSArray )objectsWithQuery:(NSDictionary )queryorderBy:(NSString *)orderKey offset:(NSInteger)offset limit:(NSInteger)limit 12345678910111213141516171819202122232425262728293031+ (NSArray *)objectsWithQuery:(NSDictionary *)query orderBy:(NSString *)orderKey offset:(NSInteger)offset limit:(NSInteger)limit &#123; NSMutableString *sql = [[NSMutableString alloc] init]; NSMutableArray *arguments = [[NSMutableArray alloc] init]; NSArray *allKeys = query.allKeys; NSUInteger count = [allKeys count]; for (NSUInteger i = 0; i &lt; count; ++i) &#123; NSString *key = [allKeys objectAtIndex:i]; if (i == 0) &#123; [sql appendFormat:@&quot;WHERE %@ = ?&quot;, key]; &#125; else &#123; [sql appendFormat:@&quot; AND %@ = ?&quot;, key]; &#125; [arguments addObject:query[key]]; //NSLog(@&quot;%@=%@&quot;, key, query[key]); &#125; if (orderKey.length &gt; 0) &#123; [sql appendFormat:@&quot; ORDER BY %@&quot;, orderKey]; &#125; if (limit &gt; 0 &amp;&amp; limit &lt; NSIntegerMax) &#123; [sql appendFormat:@&quot; LIMIT %ld OFFSET %ld&quot;, (long)limit, (long)offset]; &#125; NSArray *results = [self objectsWhere:sql arguments:arguments]; return results;&#125; 3.3 size大小 (float)dbSize 123456789+ (float)dbSize &#123; NSError *error = nil; NSDictionary *fileDictionary = [[NSFileManager defaultManager] attributesOfItemAtPath:[self pathForDbName:[self dbName]] error:&amp;error]; if (!error) &#123; float result = [[fileDictionary objectForKey:NSFileSize] floatValue]; return result; &#125; return 0.f;&#125; 3.4 删除 (void)deleteDBFileIfNeeded 1234567891011121314+ (void)deleteDBFileIfNeeded &#123; NSString *key = [NSString stringWithFormat:@&quot;k%@DBVersion&quot;, NSStringFromClass(self)]; NSInteger oldNewsDBVersion = [[NSUserDefaults standardUserDefaults] integerForKey:key]; NSInteger newsDBVersion = [self dbVersion]; // 升级或降级都要删数据库 if (newsDBVersion != oldNewsDBVersion) &#123; if (oldNewsDBVersion &gt; 0) &#123; [self deleteDBFile]; &#125; else &#123; [[NSUserDefaults standardUserDefaults] setInteger:newsDBVersion forKey:key]; &#125; &#125;&#125; (BOOL)deleteDBFile 1234567891011121314151617+ (BOOL)deleteDBFile &#123; NSString *path = [self pathForDbName:[self dbName]]; BOOL ret = YES; if ([[NSFileManager defaultManager] fileExistsAtPath:path]) &#123; ret = [[NSFileManager defaultManager] removeItemAtPath:path error:nil]; &#125; if (ret) &#123; //dbVersion更新为当前版本 NSString *key = [NSString stringWithFormat:@&quot;k%@DBVersion&quot;, NSStringFromClass(self)]; [[NSUserDefaults standardUserDefaults] setInteger:[self dbVersion] forKey:key]; &#125; return ret;&#125; 3.5 使用小结使用下来还是比Coredata,更快捷、更方便。原本我们的数据库有点积重难返，每次升级不好管理容易冲突，整个迁移过程中，比较正常顺利，没有因为数据库出现严重的显示问题，bug还很少，且容易追查，对于我们以后数据持久化是一次重大的更新。说一下还有哪些地方不太满足需求的： 关联很弱，不同model之间基本没有什么关系 同一model更新保存，其他地方的引用得不到刷新 每次修改数据库存储的字段，需要整体删除原有数据库重新生成新的，带来版本号问题 当数字很大时候，使用NSNumber属性作为存储属性，保存值会出现不正确情况 BaseEntity里面出现子model，需要变为BaseEntity且重写读取方法，包括删除和保存都需要单独调用 虽然如此，我们从迁移到目前一直使用着，可见开发中还是没有出现严重问题，对比realm,给我们带来的收益应该会好一点，看到有新的数据库我们还是会尝试。","categories":[],"tags":[{"name":"开发","slug":"开发","permalink":"http://zichao.me/tags/开发/"}]},{"title":"参加iWeb峰会","slug":"参加iWeb峰会","date":"2016-05-12T11:09:59.000Z","updated":"2019-01-25T09:21:14.923Z","comments":true,"path":"2016/05/12/参加iWeb峰会/","link":"","permalink":"http://zichao.me/2016/05/12/参加iWeb峰会/","excerpt":"","text":"16年的时候，赶上周末去参加了一趟北京的iweb峰会，会上来自各个公司的人分享和宣传自己的产品和技术，我作为一名普通开发者的角度去听大会，并了解和记录当前的一些技术发展。 一、主题峰会 9:00 – 12:001、主持人开场 – 田爱娜 HTML5梦工场 创始人HTML5梦工场是中国最有影响力的技术社区团队，由国内最早一批HTML5探索者和狂热拥护者发起，为广大开发者搭建一个开放、自由的互动交流平台，旨在推动HTML5在中国的应用与普及。“梦工场”也被誉为最接地气的草根公益组织。 2、HTML5发行的力量 – 凌海 蝴蝶互动 CEO公司的创始人凌海、王峰都来自于中国互联网上市公司核心高管，有业界极为丰富的互联网产品经验和创新精神。凌海曾任盛大集团高级副总裁，盛大游戏总 裁，韩国上市公司ACTOZ董事长。王峰曾任盛大游戏技术副总裁。《传世H5》工作室组建于2015年初，由策划团队、美术团队、技术研发团队、运营团队、测试团队等组成。除了《传世H5》蝴蝶互动又相继推出了《鬼吹灯》、《天天赚钱》、《蛮荒创世》等优秀的HTML5游戏，收到用户和业界的不断好评，之后蝴蝶互动即将推出《武 神》、《鹿鼎记》等。 3、天下武功，唯快不破 – 陈书艺 白鹭时代 CEO白鹭移动游戏解决方案包含白鹭引擎、工具和白鹭开放平台，提供从游戏开发、上线到商业化运营的一站式免费服务。白鹭引擎（Egret Engine）、HTML5加速器(Egret Runtime)、骨骼动画工具(Dragon Bones)、可视化编辑器(Egret Wing)等共计14款核心产品，可以帮助开发者高效地开发出HTML5游戏。白鹭开放平台联动开发者、发行商、渠道商、第三方服务商，让HTML5游戏实现了从开发、上线到商业化运营生态连线，并且让所有技术服务和商业化服务，得以落地。案例：围住神经猫、访问量三天过亿 4、 社交生态下的HTML5游戏新契 – 王哲 触控科技副总裁公司起步于2008年初创建的CocoaChina社区，专注于苹果产品和iOS系统开发。2010年11月12日触控科技正式组建团队，并在之后2年间获得北极光、迪士尼思伟创投、红杉创投以及纪源资本（GGV）的风险投资，融资总规模3200万美金。2011年凭借一款《捕鱼达人》游戏一战成名。 5、 HTML5和Docker容器如何重构和颠覆应用产业 – 李明 很快 创始人兼CEO6、WeX5移动开发云 马科 CEOWeX5开发H5 app，遵循Apache开源协议，完全开源免费，上百个组件框架，全部开放，可视化的组件框架，开发者可自定义组件，集成第三方组件，采用MVC设计模式，数据和视图分离，页面描述和代码逻辑分离，支持浏览器调试、真机调试、原生调试，等多种调试模式，开发者可掌握每一行代码。WeX5一直坚持采用H5+CSS3+JS标准技术，一次开发，多端任意部署. 7、 Web 前端的实时化 – 江小丹 英特尔 Web技术研发总监8、移动互联网下半场，不用好HTML5将无法生存 – 肖光宇 野狗实时后端云 联合创始人实时通信—包括消息订阅，推送，双向通信等功能。网络延迟小，服务响应速度快，API简单易用。数据存储—提供了一个Key-Value的云端数据存储，直接通过API就可以对数据进行存取操作。操作简单，按需扩展。 9、 H5游戏进入精品新时代 — 王安 Dcloud CEODCloud面向HTML5行业分别推出了开发工具HBuilder、手机强化引擎5+ Runtime、跨平台前端框架mui、应用发行产品流应用，通过系列产品对HTML5的强化支持，使得HTML5能达到原生的功能和体验，同时在发行上更优于原生应用。 类似 : APICloud 10 、谢成鸿 LayaBox CEOLayabox是HTML5引擎之一，引擎以HTML5技术为核心，定位于全平台的高性能引擎，让游戏开发者一次开发，可同时发布APP、HTML5、VR、Flash版本。开发语言支持Flash AS3、JavaScript、TypeScript三种，让开发者人才选择范围更广泛。引擎核心库仅100K左右，除了大型游戏和小型游戏、还可以用于HTML5应用、APP、广告、营销、教育、3D、VR等众多领域。另外，LayaPlayer运行器移动设备安装量覆盖超5亿，帮助Layabox引擎的开发者进行产品发行。 Layabox是Laya中国实验室历经4年倾力打造的全球顶级HTML5技术框架，核心产品包括：Flash开发H5的框架（LayaFlash）、多语言H5开发引擎（LayaAir）、H5运行器（LayaPlayer）、嵌入式H5应用商店（LayaStore）。 二、应用工具专场1 13：30 – 17：001、HTML5 App开发云实践-基于完全开源的WeX5开发框架王洁 WeX5 首席技术运营 2、 Web技术推进多样化人机交互方式吴栋霞 英特尔 软件工程师 3、 Yo-去哪儿移动UI框架杜瑶 去哪儿网 前端开发总监 4、 手机QQ React Web极致优化李成熙 腾讯AlloyTeam 前端工程师 5、 手机淘宝营销互动页面最佳实践黄华健 阿里巴巴 前端工程师 6、大型SPA的复杂工程如何化简陈恺睿 小米 高级前端工程师 7、 UC前端业务套件体系三桥 阿里巴巴UC移动事业群 高级前端工程师 三、应用工具专场2 13：30 – 17：001、Web Components — Web 前端开发的未来趋势1、陈本峰 云适配 创始人兼CEO 云适配由前微软美国总部专家、美通云动（北京）科技公司CEO陈本峰在美国西雅图研发，只需在原网站中插入一行代码，即能创建移动化网站，并实现网址不变、内容实时更新，它颠覆了传统手工移动网站建设模式，可快速打开移动营销六大入口。 2、 web Components : 组件化给前端开发带来了极大的效率提升，组件化的UI框架也因此层出不穷，从EXTJs、YUI到 jQuery UI ，再到 Bootstrap、React、Ratchet、Ionic等等等等等等，几乎每年都有很多新的UI框架冒出来，它们或者借鉴或者颠覆其他已存在的框架。简单对比一下就会发现这些框架的很大一部分模块在功能上是重合的，但也仅仅在功能层面重合，代码层面确完全不兼容。 Web Components 的出现给组件标准化带来了很好的契机： WEB组件目前仍然依靠各种类似”Hack”的方式来模拟，模拟方式也各有不同，很难统一和标准化，而 Web Components 则直接提供了标准化的组件定义方式，这是组件标准化的基石，使得未来的组件能够统一创建、方法调用、事件监听、属性访问等。基于标准化的组件定义方式，我们便可以像W3C等标准组织一样来定义组件标准，无需再依赖、等待“内置”组件，这也使得我们获得了“渔”的能力 2、语音智能与H5的结合陈家军 科大讯飞 云平台事业部研发主管 3、 浅析HTML5中的无障碍标签及用处张昆 中国信息无障碍产品联盟 首席专家 4、HTML5多屏互动平台实践苏震巍 苏州盛派网络 CEO 5、iWeb 议题：Weex 开发者工具探究勾三股四（阿里巴巴 前端工程师）、梧叶（阿里巴巴 高级技术专家） 手淘和天猫曾经尝试过React Native，然后放弃了。但是把它的思想吸收过来，结合Web Component和Vue.js，然后就成了Weex. 6、小米应用商店Hybrid性能优化实践杨伟贤 小米 高级前端工程师 7、Vue.js从入门到上线陈陆扬 精雕细课 前端负责人 四、游戏专场1 13：30 – 17：001、文学连接游戏 阅文集团“泛娱乐2.0”迎接H5领域新时代朱靖 阅文集团 副总裁 腾讯COO任宇昕与副总裁程武宣布正式成立阅文集团，统一管理和运营原本属于盛大文学和腾讯文学旗下的起点中文网、创世中文网、小说阅读网、潇湘书院、红袖添香、云起书院、榕树下、QQ阅读、中智博文、华文天下等网文品牌。 2、Cocos Creator：全面提升 H5 游戏的开发和运行速度王楠 触控科技 产品总监 Cocos Creator 是以内容创作为核心的游戏开发工具，在 Cocos2d-x 基础上实现了彻底脚本化、组件化和数据驱动等特点 3、快创互娱，人人都是HTML5游戏创想家段会锋 快创互娱 合伙人兼技术副总 快创互娱是由大连文森软件特科技有限公司设计开发的一款HTML5在线开发平台。快创互娱是一款可视化、零代码、拖拽式编程的在线开发平台，基于HTML5及MIT开源协议，具有跨平台的强大性能。使用者可通过鼠标拖拽的简单方法，创造属于自己的故事、动画、游戏、课件，同时一键分享，轻松将作品上传至网络。 4、Yahoo Y5平台飛躍出海、強勢出航！赖俊光 Yahoo台湾与香港游戏频道 负责人 5、发行和渠道为什么推那个产品李力维 独角兽游戏 CEO 6、腾讯浏览服务，鼎力服务H5游戏生态魏晓海 腾讯浏览器 内核开发总监技术专家 7、H5游戏2.0时代到来姬海江 交叉点 CEO 一个外包公司 五、游戏专场2 13：30 – 17：001、约三端，战未来汪阔 Layabox 技术副总裁 2、《小小战争》的设计经验分享李瑞峰 圣堂科技 CEO H5策略游戏 3、H5游戏的未来发展赵鹏 横石科技 副总裁 在线网页游戏《弑沙》 4、Lie to Me—聊聊HTML5多人实时在线游戏的优化大城小胖 自由程序员 http://weibo.com/finscn?is_hot=1 https://github.com/finscn 5、强化渠道产品联动，升级用户游戏体验林玮 北京游琥科技 副总经理 6、从市场角度分析H5游戏该如何立项谭德文 上海越山科技 CEO 7、H5游戏的困境和破局黄加阳 9G游戏 CEO 六、数字营销专场 13：30 – 17：001、后营销时代：借H5实现“移动互联网+张翔 白鹭时代、青雀移动 联合创始人、总经理 2、 共享创赢移动网页大平台马岳 Google 商业合作部行业总监 3、 裂变·营销闭环·H5生态刘旭 易企秀 联合创始人兼副总裁 易企秀是一款针对移动互联网营销的手机幻灯片、H5场景应用制作工具，将原来只能在PC端制作和展示的各类复杂营销方案转移到更为便携和展示的手机上，用户随时随地根据自己的需要在PC端、手机端进行制作和展示，随时随地营销。 4、 喵葩：天猫电商互动技术新思路续彬 天猫 高级技术专家 5、 网络营销未来的五大发展趋势葛甲 北京蓝时代 互联网分析师，自媒体人 6、 H5数字营销的技术痛点余悠 跳跳糖创意 CEO 7、 纽约广告节最佳数字营销作品赏析吴金君纽约广告节 中国首席代表","categories":[],"tags":[{"name":"开发","slug":"开发","permalink":"http://zichao.me/tags/开发/"}]},{"title":"MVC、MVP与MVVM","slug":"MVC、MVP与MVVM","date":"2016-04-22T04:34:10.000Z","updated":"2019-01-25T09:20:26.459Z","comments":true,"path":"2016/04/22/MVC、MVP与MVVM/","link":"","permalink":"http://zichao.me/2016/04/22/MVC、MVP与MVVM/","excerpt":"","text":"看了不少关于工程结构的文章，不限于在iOS编程的工程和语言，设计主要有几种，分别是MVC、MVP、MVVM以及Redux，每一篇都有自己细微独到的认知，在一些职责分配理解上有稍微的区别，不过都围绕着一个真理：工程层级分工清楚，通信同步，减少结构的臃肿与耦合，提高开发效率。要理解各个结构，其实主要就是理解他们之间的交通规则，也就是他们分别代表谁，而谁能和谁说话。 一、MVCMVC历史比较悠久也有着很多衍生体，本来一直以为MVC结构是一种固定标准的工程设计结构，后来了解到它在不同的语言和领域中体现出的职能机制可以说是大不相同的。 1.1 标准的MVC我表示不知道哪里有标准的完整的MVC，只是它们之间都有一些共同的定义，引用至百科： Model：表示程序的数据模型对象，是应用程序中用于保存数据和处理数据逻辑的部分。 View：表示程序的视图界面，代表显示部分。 Controller：表示程序的控制器，处理用户交互输入，包括视图数据读取并向模型发送数据等。 Model与View之间是相互可知道的 1.2 各种不同的MVC规则 Spring ASP Rails WIKI 1.3 iOS中的MVC1.3.1 交通规则 我们可以看到iOS中的MVC和其他是很接近的，苹果的整个开发框架设计都遵循着MVC结构。其中： Model和View永远不能相互通信，只能通过Controller传递。 Controller可以直接与Model对话，Model可以通过Notification和KVO机制与Controller间接通信。 Controller可以直接与View对话，View通过action向Controller报告事件的发生与状态，Controller去数据交互回来再更新View. 但是实际开发中，由于框架的限制，我们还是会发现iOS在MVC的开发遵循了上述的标准模式，model和View之间会存在耦合。 1.3.2 缺点 model与View的职责过于简单 臃肿的ViewController View的加载显示逻辑 网络请求数据逻辑 工具类逻辑 交互操作逻辑 dataSource和代理逻辑 页面的生命周期 状态记录 界面跳转 维护成本高、测试性差 1.3.3 优化 model 不做为单纯的数据结构体，应当包含数据流动的全部处理逻辑，包括网络请求，数据库存取，数据格式处理转化。 ViewController 单独的工具类处理方法，新建View的容器用于组织和管理view加载显示，传递生命周期给View自我管理，界面跳转使用scheme路由分发给View自身事件，网络请求可以单独新建一个category或者service，状态和事件的响应拆分出一个事件派发中心的管理器。 view 容器概念处理布局，接受生命周期，更多的承担VC中的显示逻辑与代理协议，监听数据变化与同步 二、MVPMVP其实一个MVC的变种，不存在明显的区别，看实际的应用场景是Android币iOS多，如果按照上述标准的MVC结构来讲，MVP主要的特点为： V变种为被动视图，不在主动更新数据，所有的交互都通过presenter来进行处理并更新，保罗View的协议代理 视图层对于模型层没有任何依赖，两者被presenter进行了解耦，他俩是无感知的 三、MVVM记得从前MVVM刚出来的时候被炒的出神入化，但是发现很多人在理解和使用上并没有用出MVC的区别来，存在误区，我们来看一下职责。 3.1 职责Model：提供业务逻辑实现方法(本地存储数据的交互、服务端数据的交互)，数据结构 View: 负责View的初始化释放与布局,响应用户交互事件 ViewModel：从Model层 获取数据，同步数据到Model中，向View层提供接口，其中包括 数据接口(格式化的数据) 以及事件处理接口，通知View层数据改变，业务逻辑，页面跳转 看到这里是不是发现似曾相识，VM不就是从前的C吗，只不过是臃肿的C变成了臃肿的VM而已。但是如果你仔细的理解正确，会发现MVVM与MVC的区别。 3.2 关键区别 VM 是 对View层视图的逻辑抽象，包括直接的数据显示格式和状态保存 VM 与View之间进行了绑定关系，VM的更新会自动同步给View VM 里面不包含Controller所具有的独特功能 3.3 小结MVVM是MVC的进化,依旧是已解耦分工为目标，这个时候View和Model之间不再有联系，彻底分隔开，有VM进行统一管理。在实际的应用中，Controller一层是存在的，所以MVVM结构本质上的结构多了隐式绑定和C这么一层，并且绑定用于绑定关系的出现，iOS在MVVM的应用上结合reactiveCocoa进行响应式编程更为开阔的思路。结构如下：","categories":[],"tags":[{"name":"开发","slug":"开发","permalink":"http://zichao.me/tags/开发/"}]},{"title":"AVFoundation视频开发总结","slug":"视频开发总结","date":"2016-03-28T11:09:59.000Z","updated":"2019-01-24T12:14:28.318Z","comments":true,"path":"2016/03/28/视频开发总结/","link":"","permalink":"http://zichao.me/2016/03/28/视频开发总结/","excerpt":"","text":"AVFoundation是为数不多的几个框架,您可以使用和创建基于时间的视听媒体。它提供了一个objective - c接口用于工作与基于时间的视听数据详细的级别。例如,您可以使用它来检查,创建、编辑或reencode媒体文件。你也可以输入流从设备和操作视频实时捕捉和回放。 一、概念引导：1、ASSets媒体文件:1）AVAsset 一个抽象类来表示时间等视听媒体视频和声音。每个资产包含一组跟踪旨在呈现或加工在一起,一个统一的媒体类型,包括但不限于音频、视频、文本、关闭字幕,字幕。 AVURLAsset *anAsset = [[AVURLAsset alloc] initWithURL:url options:nil];属性有tracks、duration、preferredVolume、preferredTransform等等。 2) 一个AVAssetTrack 对象提供了所有资产提供track-level检查接口,方便对ASSets进行更具体的属性获取以及对应的操作。 3）AVAssetImageGenerator 对象提供缩略图或预览图像的资产独立于回放，可以生成单独的图片，也可以生成图片队列，这是获取视频缩略图的方式之一，还有另外两种ALAsset的thumbnail 和 - (UIImage *)imageFromSampleBuffer:(CMSampleBufferRef)sampleBuffer。 4）AVAssetExportSession 针对AVAsset源对象的内容进行转码，创建一个被指定输出形式的资源。 2、Playback播放控制:1) AVPlayer 你使用一个AVPlayer对象来实现控制器和用户接口单一或多种条目回放。 - (instancetype)initWithPlayerItem:(AVPlayerItem *)item play 、 parse 、 end - (void)seekToTime:(CMTime)time 2) AVPlayerLayer 用于显示视频内容，相当于大屏幕。里面有videoGravity，默认值 AVLayerVideoGravityResizeAspect. 3) AVPlayerItem 一个AVPlayerItem代表资产的表现状态,由一个AVPlayer对象和可以观察到的状态。对视频播放状态修改一起监听的过程多数发生在正对这个对象的操作操作上，比如： seekToTime，从哪里开始播放 各种资源播放状态的通知AVPlayerItemFailedToPlayToEndTimeNotification等 4) AVPlayerItemTrack 你用一个AVPlayerItemTrack对象修改资产的表现状态跟踪(AVAssetTrack)一个AVPlayer对象。通常视频的加载播放有各种状态，我们需要KVO监听或者添加通知去知道播放器的准备、进行、暂停、停止等状态。 5) AVQueuePlayer 按照队列播放视频 queuePlayerWithItems， insertItem:(AVPlayerItem *)item afterItem:(AVPlayerItem *)afterItem 3、Editing资源编辑:AVFoundation框架提供了一个功能丰富的组类促进视听资产的编辑。AVFoundation的编辑API的核心成分，就是一组追踪从一个或多个不同的媒体资产。AVMutableComposition类提供了一个接口,用于插入和删除操作的痕迹,以及管理自己时间排序。 1）AVMutableComposition 是一个可变的AVComposition子类，当您想要从现有资产创建一个新的资源。你可以添加和删除跟踪,可以添加、删除和时间范围。比如： – insertEmptyTimeRange：可以增加一段空白时间 – insertTimeRange:ofAsset:atTime:error:插入的所有跟踪给定的时间范围内指定的资产到接收机。 AVAsset *videoAsset = &lt;#AVAsset with at least one video track#&gt;; AVAsset *anotherVideoAsset = &lt;#another AVAsset with at least one video track#&gt;; // Get the first video track from each asset. AVAssetTrack *videoAssetTrack = [[videoAsset tracksWithMediaType:AVMediaTypeVideo] objectAtIndex:0]; AVAssetTrack *anotherVideoAssetTrack = [[anotherVideoAsset tracksWithMediaType:AVMediaTypeVideo] objectAtIndex:0]; // Add them both to the composition. [mutableCompositionVideoTrack insertTimeRange:CMTimeRangeMake(kCMTimeZero,videoAssetTrack.timeRange.duration) ofTrack:videoAssetTrack atTime:kCMTimeZero error:nil]; [mutableCompositionVideoTrack insertTimeRange:CMTimeRangeMake(kCMTimeZero,anotherVideoAssetTrack.timeRange.duration) ofTrack:anotherVideoAssetTrack atTime:videoAssetTrack.timeRange.duration error:nil];&apos; 2) AVMutableAudioMix 一个AVMutableAudioMix对象管理混合音轨的输入参数。它允许自定义音频处理在回放期间音轨或执行其他操作。 AVMutableAudioMix *mutableAudioMix = [AVMutableAudioMix audioMix]; // Create the audio mix input parameters object. AVMutableAudioMixInputParameters *mixParameters = [AVMutableAudioMixInputParameters audioMixInputParametersWithTrack:mutableCompositionAudioTrack]; // Set the volume ramp to slowly fade the audio out over the duration of the composition. [mixParameters setVolumeRampFromStartVolume:1.f toEndVolume:0.f timeRange:CMTimeRangeMake(kCMTimeZero, mutableComposition.duration)]; // Attach the input parameters to the audio mix. mutableAudioMix.inputParameters = @[mixParameters]; 4、Media Capture媒体捕捉:1) AVCaptureDevice 代表输入设备,如摄像头或麦克风 2) AVCaptureInput 输入设备的配置端口，我们可以理解为输入 3）AVCaptureSession 协调数据流从输入到输出,用startRunning开始从输入到输出的数据流,并调用stopRunning停止流动。采取关闭代理，保证取景器一直流动。 4) AVCaptureOutput AVCaptureMovieFileOutput，输入到视频文件，代理AVCaptureFileOutputRecordingDelegate AVCaptureVideoDataOutput，如果想要实时的处理每一帧数据，或想要有自己的图形动画，代理AVCaptureVideoDataOutputSampleBufferDelegate AVCaptureAudioDataOutput ，音频数据，代理AVCaptureVideoDataOutputSampleBufferDelegate AVCaptureStillImageOutput ，图片数据 5）AVCaptureVideoPreviewLayer 实时展示被session传出出来的视频流数据，也就是我们的取景器 6）AVCaptureConnection 代表捕获之间的连接输入和输出对象关联到一个捕获会话。 5、Export媒体输出:1) AVAssetExportSession 针对AVAsset对象转码，创建一个输出的形式被指定出口预设内容。包括对输出媒体资源的属性设定，可以设置presetName进行视频品质压缩，AVAssetExportPresetLowQuality等。也可以设置属性包括：outputFileType、fileLengthLimit、timeRange等。 2）AVAssetReader 直接从媒体读取存储样本,获得样本解码成可渲染的形式。组合资产多个音轨和组合多个视频跟踪(通过使用AVAssetReaderAudioMixOutput和AVAssetReaderVideoCompositionOutput)。 addOutPut startReading cancelReading 读取一个音频： AVAudioMix *audioMix = &lt;#An AVAudioMix that specifies how the audio tracks from the AVAsset are mixed#&gt;; // Assumes that assetReader was initialized with an AVComposition object. AVComposition *composition = (AVComposition *)assetReader.asset; // Get the audio tracks to read. NSArray *audioTracks = [composition tracksWithMediaType:AVMediaTypeAudio]; // Get the decompression settings for Linear PCM. NSDictionary *decompressionAudioSettings = @{ AVFormatIDKey : [NSNumber numberWithUnsignedInt:kAudioFormatLinearPCM] }; // Create the audio mix output with the audio tracks and decompression setttings. AVAssetReaderOutput *audioMixOutput = [AVAssetReaderAudioMixOutput assetReaderAudioMixOutputWithAudioTracks:audioTracks audioSettings:decompressionAudioSettings]; // Associate the audio mix used to mix the audio tracks being read with the output. audioMixOutput.audioMix = audioMix; // Add the output to the reader if possible. if ([assetReader canAddOutput:audioMixOutput]) [assetReader addOutput:audioMixOutput]; 3) AVAssetWriter 使用一个AVAssetWriter对象媒体数据写入新文件指定视听的容器类型,如QuickTime电影文件或一个mp4文件,支持自动交叉媒体数据的多个并发的痕迹。 initWithURL:fileType:error: startWriting startSessionAtSourceTime addInput endSessionAtSourceTime finishWritingWithCompletionHandler 二、代码实践： #import “TTCameraViewController.h” 三、问题回顾：1、视频文件写入崩溃：现象：相机开始拍摄就会出现崩溃，时而出现，有时难以复现。 原因与解决：1）startSessionAtSourceTime只能在 AVAssetWriterStatusWriting的之后调用，但是startWriting调用之后writer并没有立即变为writing状态，而已有一个极短的开始时间，参照苹果规范使用文档，只需要前面调用之后后面就可以跟着执行startSessionAtSourceTime，然而，我遇见了这问题，说明它并不是。随后我到stackoverflow上查了问题，发现有人早就提过，并没有答案，说是升级IOS8以后就没有了，可我这里是IOS9…随后我只能判断writer状态如果是writing就开始执行，如果不是就调用startWriting。 2）[videoWriterInput appendSampleBuffer：xxx]这只能在startSessionAtSourceTime开始之后调用，和1是同样的情况，明明第一行调用了startSessionAtSourceTime，第二调用appendSampleBuffer就会崩溃，并且依旧是偶尔发生。但是这里的问题是没有一个状态可以判断是否已经开始startSessionAtSourceTime，这里就有点血崩了，不能像问题1一样判断解决，后来只好try catch了,稳住局面防止崩溃，丢失极少的毫秒级帧数。 2、相机拍摄闪烁抖动：现象：开始拍摄时候，取景器闪烁抖动，引起一小部分可见范围内的视频内容发送抖动，并被存入文件中，体验差。 原因与解决：在开始拍摄的时候，再去创建connection并传递设备和拍摄方向，有利于视频获取oritation，自然而然的横着拍摄也会竖着播放，但是问题在于connection的建立产生较大的链接，引起视频抖动，此抖动将被录制进入视频文件中。于是我采取在初始化input的时候就把connection就增加进去，当开始拍摄的时候不会发生抖动，但是牺牲的是视频的oritation需要自己根据用户拍摄的方向去手动修改视频方向。 3、视频方向混乱：现象：背面摄像头拍摄，home键在下，拍摄出来的视频文件，在播放的时候，底部在手机右边，而不是底边，一次类推，home键在底部与视频的底部角度成90垂直关系。 原因与解决： self.videoOutPut = [[AVCaptureVideoDataOutput alloc] init]; NSDictionary * outputSettings = [[NSDictionary alloc] initWithObjectsAndKeys:[NSNumber numberWithInt:kCVPixelFormatType_32BGRA],(id)kCVPixelBufferPixelFormatTypeKey, nil]; [self.videoOutPut setVideoSettings:outputSettings]; //必须 if ([self.session canAddOutput:self.videoOutPut]) { [self.session addOutput:self.videoOutPut]; } //先于 self.videoConnection = [self.videoOutPut connectionWithMediaType:AVMediaTypeVideo]; self.videoConnection.enabled = NO; [self.videoConnection setVideoOrientation:AVCaptureVideoOrientationPortrait]; 4、横着拍摄的视频横着播放：现象：横着拍摄的视频，放的时候是竖着的。 原因与解决：因为上面解决视频抖动，导致不能直接设定拍摄时候的视频方向，从而需要根据手动的拍摄方向去修改视频的视图的方向。考虑到用户可能锁住屏幕旋转，于是就CMMotionManager获取重力方向来判断，在VC出现或者开始拍摄的时候开启，在VC退出或者拍摄完成的的时候关闭。获得方向后，在视频的写入里直接修改方向即可。 [videoWriterInput setTransform:CGAffineTransformScale(CGAffineTransformMakeRotation(-M_PI_2), 1.0, 1.0)]; 5、录制视频有右边和底边绿色线条：现象：手机全屏录制的时候，设置视频输出宽度为手机的宽高，当宽高为基数的时候视频录制里面会出现绿色线条。 原因与解决：不知道原因，神奇的bug，参照着段子的视频方法解决的，直接修改视频输出宽高为偶数。 NSInteger videoWidth = [[NSNumber numberWithFloat:self.view.frame.size.width] integerValue]; NSInteger videoHeight = [[NSNumber numberWithFloat:self.view.frame.size.height] integerValue]; if (videoWidth % 2 == 1) { videoWidth = videoWidth - 1; } if (videoHeight % 2 == 1) { videoHeight = videoHeight - 1; }","categories":[],"tags":[{"name":"开发","slug":"开发","permalink":"http://zichao.me/tags/开发/"}]},{"title":"IOS 音频一览","slug":"IOS 音频一览","date":"2016-03-15T04:34:11.000Z","updated":"2019-01-24T12:14:28.322Z","comments":true,"path":"2016/03/15/IOS 音频一览/","link":"","permalink":"http://zichao.me/2016/03/15/IOS 音频一览/","excerpt":"","text":"做嘉宾聊天室这个需求的时候接触了音频和视频上的开发，嘉宾可以发布视频和语音以及文字信息出来，观众则可以文字回复，这样主持人嘉宾和观众就形成一个良性的互动过程。在这里把相关整理一下，望给大家带来一些认识。 一、了解音频声音作为信息的一种媒介载体必不可少，在移动端体现为各类语音交流以及音乐等，开发中使用的音频文件通过声音采样、量化、编码几步从而成为人耳可听的声音，频率为20HZ到20KHZ，奈奎斯特的理论表明采样率高于最高频2倍时候，是可以将数字信号还原为原来的模拟信号的，所以通常我们在网上看到的音频文件的采样率为44.1KHZ。 采样后通过量化的脉冲编码调制，我们得到了PCM类型的数据，比如在使用AVAudioRecorder采样的时候可以看到采样类型kAudioFormatLinearPCM。但是这样拿到的数据是很大的，不便于使用和传输，通过对人类不敏感的声音区域进行过滤压缩，就有了MP3、AAC、OGG、WMA等数据格式类型，这些都是有损压缩。 码率代码了压缩质量，比如MP3常用码率有128kbit/s、160kbit/s、320kbit/s等等，越高代表着声音音质越好。MP3中的数据有ID3和音频数据组成，ID3用于存储歌名、演唱者、专辑、音轨等我们可以常见的信息。 二、IOS对音频的操作开发实际上是为了解决需求，需求对应的是使用场景，开发的方式很多，不同的使用场景可以使用的方法不同。IOS开发提供了以下几种常用方式供我们解决对应的音频需求。 System Sound Services AVFoundation 框架 Media Player 框架 2.1 System Sound Services2.1.1 场景特点最底层也是简单的声音播放服务，此方法是适合播放提示警告类型的短小的声音 2.1.2 存在限制 声音长度要小于 30 秒 In linear PCM 或者 IMA4 (IMA/ADPCM) 格式的 打包成 .caf, .aif, 或者 .wav 的文件 不能控制播放的进度 调用方法后立即播放声音 没有循环播放和立体声控制： 2.1.3 使用方式调用 AudioServicesCreateSystemSoundID(CFURLRef inFileURL,SystemSoundID *outSystemSoundID) 该函数的第一个参数代表音频文件的URL（可通过NSURL转换成CFURLRef），第二个参数代表注册音频文件的SystemSoundID。 调用AudioServicesAddSystemSoundCompletion()函数为制定SystemSoundID注册Callback函数。有了 CallBack 函数我们可以解决不少问题，比如可以克服 System Sound Services 本身不支持循环播放的问题。 调用AudioServicePlaySystemSound函数或者AudioServicePlayAlertSound（调用系统振动功能）。 - (void)viewDidLoad { [super viewDidLoad]; // 1. 定义要播放的音频文件的URL NSURL *voiceURL = [[NSBundle mainBundle]URLForResource:@&quot;CleanDidFinish&quot; withExtension:@&quot;aiff&quot;]; // 2. 注册音频文件（第一个参数是音频文件的URL 第二个参数是音频文件的SystemSoundID） AudioServicesCreateSystemSoundID((__bridge CFURLRef)(voiceURL),&amp;ditaVoice); // 3. 为crash播放完成绑定回调函数AudioServicesAddSystemSoundCompletion(ditaVoice,NULL,NULL,(void*)completionCallback,NULL); // 4. 播放 ditaVoice 注册的音频 并控制手机震动 AudioServicesPlayAlertSound(ditaVoice); // AudioServicesPlaySystemSound(ditaVoice); // AudioServicesPlaySystemSound(kSystemSoundID_Vibrate); // 控制手机振动 } 2.2 AVFoundation 框架2.2.1 场景特点如果播放较大的音频或者要对音频有精确的控制，则System Sound Service可能就很难满足实际需求了，通常这种情况会选择使用AVFoundation，它可以满足我们通常意义上的绝大部分的场景需求，包括音乐的交互、声音的制作等等，根据自己的业务需求实现自定义的定制化。如果你只是想实现音频的播放或者录制，没有其他需求，AVFoundation会很好的满足你，它的接口使用简单、不用关心其中的细节。 2.2.2 关键点和API浏览 Background Modes 打开后台模式的音乐播放，或者在info.plist文件中添加Required Background Modes键，其值是App plays audio or streams audio/video using AirPlay AVAudioSession 用于 iOS 系统中协调应用程序之间的音频播放的 API 的。例如，当有电话打进来时，音频的播放就会被暂停；在用户启动电影时，音乐的播放就会停止。我们需要使用这些 API 来确保一个应用程序能够正确响应并处理这类事件。 AVAudioPlayer 这个高层级的 API 为你提供一个简单的接口，用来播放本地或者内存中的音频。这是一个无界面的音频播放器 (也就是说没有提供 UI 元素)，使用起来也很直接简单。它不适用于网络音频流或者低延迟的实时音频播放。如果这些问题都不需要担心，那么 AVAudioPlayer 可能就是正确的选择。音频播放器的 API 也为我们带来了一些额外的功能，比如循环播放、获取音频的音量强度等等。 AVAudioRecorder 作为与 AVAudioPlayer 相对应的 API，AVAudioRecorder 是将音频录制为文件的最简单的方法。除了用一个音量计接受音量的峰值和平均值以外，这个 API 简单粗暴，但要是你的使用场景很简单的话，这可能恰恰就是你想要的方法。 AVPlayer AVPlayer 与上面提到的 API 相比，提供了更多的灵活性和可控性。它基于 AVPlayerItem 和 AVAsset，为你提供了颗粒度更细的权限来获取资源，比如选择指定的音轨。它还通过 AVQueuePlayer 子类支持播放列表，而且你可以控制这些资源是否能够通过 AirPlay 发送。 与 AVAudioPlayer 最主要的区别是，AVPlayer 对来自网络的流媒体资源的 “开箱即用” 支持。这增加了处理播放状态的复杂性，但是你可以使用 KVO 来观测所有的状态参数来解决这个问题。 AVAudioEngine AVAudioEngine 是播放和录制的 Objective-C 接口。它提供了以前需要深入到 Audio Toolbox 框架的 C API 才能做的控制 (例如一些实时音频任务)。该音频引擎 API 对底层的 API 建立了优秀的接口。如果你不得不处理底层的问题，你仍然可以使用 Audio Toolbox 框架。 这个 API 的基本概念是建立一个音频的节点图，从源节点 (播放器和麦克风) 以及过处理 (overprocessing) 节点 (混音器和效果器) 到目标节点 (硬件输出)。每一个节点都具有一定数量的输入和输出总线，同时这些总线也有良好定义的数据格式。这种结构使得它非常的灵活和强大。而且它集成了音频单元 (audio unit)。 2.3 Media Player 框架2.3.1 场景特点众所周知音乐是iOS的重要组成播放，无论是iPod、iTouch、iPhone还是iPad都可以在iTunes购买音乐或添加本地音乐到音乐库中同步到你的iOS设备。在MediaPlayer.frameowork中有一个MPMusicPlayerController用于播放音乐库中的音乐。Media Player 框架是 iOS 平台上一个用于音频和视频播放的高层级接口，它包含了一个你可以在应用中直接使用的默认的用户界面。你可以使用它来播放用户在 iPod 库中的项目，或者播放本地文件以及网络流。这个框架也包括了查找用户媒体库中内容的 API，同时还可以配置像是在锁屏界面或者控制中心里的音频控件。 2.3.2 使用方式使用MPMusicPlayerController实例化对象来播放内置音乐库的媒体文件，有以下两种类方法来实例化对象： MPMusicPlayerController *playController = [MPMusicPlayerController systemMusicPlayer]; 说明：播放内置媒体库项目取代用户目前播放状态（如果是用网易云音乐或QQQ音乐在播放歌曲） MPMusicPlayerController *playController = [MPMusicPlayerController applicationMusicPlayer]; 说明：播放该应用内的歌曲，不影响本机自带音乐播放器的状态。 判断有没有正在播放的媒体 [MPMusicPlayerController indexOfNowPlayingItem] == NSNotFound 创建媒体队列 [MPMediaQuery songsQuery]; [MPMusicPlayerController setQueueWithQuery:nil]; 获取媒体曲目的信息 MPMediaItem *currentItem = .... NSString *artist = [currentItem valueForProperty:MPMediaItemPropertyArtist]; NSString *songName = [currentItem valueForProperty:MPMediaItemPropertyTitle]; 监听媒体通知 NSNotificationCenter *notificationCenter = [NSNotificationCenter defaultCenter];[notificationCenter addObserver:self selector:@selector() name:MPMusicPlayerControllerNowPlayingItemDidChangeNotification object:nil]; 2.4 更多音频方案CoreAudio的接口层次： 2.4.1 OpenALOpenAL 是一个跨平台的 API。它提供了位置 (3D) 和低延迟的音频服务。它主要用于跨平台游戏的开发。它有意地模仿了 OpenGL 中 API 的风格。 2.4.2 Audio Unit 框架Audio Unit 框架是一个底层的 API；所有 iOS 中的音频技术都构建在 Audio Unit 这个框架之上。音频单元是用来加工音频数据的插件。一个音频单元链叫做音频处理图。 如果你需要非常低的延迟 (如 VoIP 或合成乐器)、回声消除、混音或者音调均衡的话，你可能需要直接使用音频单元，或者自己写一个音频单元。但是其中的大部分工作可以使用 AVAudioEngine 的 API 来完成。如果你不得不写自己的音频单元的话，你可以将它们与 AVAudioUnit 节点一起集成在 AVAudioEngine 处理图中。 2.4.2 AudioToolBox 框架通过AudioToolbox框架，可以将短声音注册到system sound服务上，被注册到system sound服务上的声音称之为 system sounds。前面常用的System Sound Services 就来自这里的框架。 它必须满足下面几个条件： (1).播放的时间不能超过30秒 (2).数据必须是 PCM或者IMA4流格式 (3).必须被打包成下面三个格式之一：Core Audio Format (.caf), Waveform audio (.wav), 或者 Audio Interchange File (.aiff) (4）声音文件必须放到设备的本地文件夹下面。通过AudioServicesCreateSystemSoundID方法注册这个声音文件. 2.4.3 CoreMIDI 和 CoreAudioKit 框架在 iOS 上，Core MIDI 和 CoreAudioKit 可以被用来使应用程序表现为 MIDI 设备。在 OS X 上，Music Sequencing 服务提供了基于 MIDI 的控制和对音乐数据访问的权限。Core MIDI 服务为服务器和驱动程序提供了支持。 2.4.4 QTKit 和 QuickTime 框架现在已经过时了，它们不应该被用在以后的开发中。我们应该使用 AVFoundation (和 AVKit) 来代替它们 三、今日头条嘉宾聊天室音频实践3.1 背景嘉宾聊天室是头条16年初新起的一个项目服务，目标是为了引进明星嘉宾访谈类型和体育赛事线上直播的节目，丰富头条在直播领域的内容，聊天室一期是属于图文、语音、短视频直播，后期发展可成为视频线上直播。表现形式与网易直播频道类似，但更丰富。 3.2 IOS端实现根据聊天室在语音和视频的需求，使用系统自带实现的MPMoviePlayerController没法符合自定义的需求，包括功能与交互设计，并且MPMoviePlayerController已经不被苹果官方提倡，将要通过AVPlayer方案代替。需求本身的属于基本的语音和视频沟通，只对音频视频的录制与播放，符合音质画质要求和大小要求，因此采用AVFoundation框架即可，能够满足聊天室的需求。主要使用了AVPlayer、AVAudioRecorder、AVAudioSession等主要的类。 实现类有如下等： #import &quot;TTAudioRecorder.h&quot; #import &quot;TTAudioPlayer.h&quot; #import &quot;TTLiveCameraViewController.h&quot; #import &quot;TTUploadVideoAudioManager.h&quot; #import &quot;TTLiveAudioManager.h&quot; 3.3 问题与解决整个需求的实现过程还算顺利，按照API说明理解即可，提两三点说明下都会遇见哪一类的问题。 3.1 音频格式为AMRAVPlayer来播放视频音频都相当强大，但是它也存在着一些不可回避的问题，那就是目前IOS已经不再支持AMR格式的播放。 AMR format is no longer supported by Apple (since iOS 4.3) 与安卓同步开发的时候对接确立的通用的格式为AMR，因为AAC文件在网络传输下载播放的时候显得很大，AMR相对来说会好很多，同时我们也看了微博和微信的实现都是使用AMR，鉴于头条的用户量和使用体验，于是就采用了同样的方式。安卓可以很好支持AMR，在iOS平台上需要进行WAV和AMR之间的转换，好在libopencore可以解决这个事。网络上有好些所谓的相互转化的库，仔细看了下，都没有脱离这个core本身。 libopencore库： interf_dec.h interf_enc.h dec_if.h if_rom.h libopencore-amrnb.a libopencore-amrwb.a 主要方法： EncodeWAVEFileToAMRFile 、 DecodeAMRFileToWAVEFile 封装一个mannager： #import &lt;Foundation/Foundation.h&gt; @interface VoiceConverter : NSObject + (int)amrToWav:(NSString*)_amrPath wavSavePath:(NSString*)_savePath; + (int)wavToAmr:(NSString*)_wavPath amrSavePath:(NSString*)_savePath; @end 3.2 WAV转化AMR声音变形：录制WAV格式本地正常播放，转化为AMR后，把AMR格式文件在电脑端播放，声音严重变形，无法识别，再转化会WAV,，手机还是无法识别。原因与解决声音格式转化采用的是”amrFileCodec.h”，它对转化的音频输入源是有格式要求的，要求转化的采样率为标准的8k，如果录制的音频频率采用高频率44.1K的话就会出现变形，我想这里的设定依据来自于amr格式的采样率通常为8K。通过AVAudioRecorder把采样率设置为8K后，可以正常互相转化。 AMR维基百科： 采样率 8 kHz/13-bit (160 采样点每20ms)，滤波后只保留 200-3400 Hz 范围内的信号. 编码器使用8个位速：12.2、10.2、7.95、7.40、6.70、5.90、5.15和4.75 kbit/s. NSMutableDictionary *settings=[NSMutableDictionary dictionary]; [settings setObject:@(kAudioFormatLinearPCM) forKey:AVFormatIDKey]; [settings setObject:@(8000) forKey:AVSampleRateKey]; //必须和amr文件解码参数保持一致 [settings setObject:@(1) forKey:AVNumberOfChannelsKey]; [settings setObject:@(16) forKey:AVLinearPCMBitDepthKey]; [settings setObject:@(NO) forKey:AVLinearPCMIsFloatKey]; [settings setValue:@(NO) forKey:AVLinearPCMIsNonInterleaved]; [settings setValue:@(NO) forKey:AVLinearPCMIsBigEndianKey]; [settings setValue:@(AVAudioQualityHigh) forKey:AVEncoderAudioQualityKey]; AVAudioRecorder *recorderTemp = [[AVAudioRecorder alloc] initWithURL:fileUrl settings:settings error:nil]; 3.3 AVPlayer的准备状态当AVPlayer的status变为AVPlayerStatusReadyToPlay后，依旧可能无法开始播放？ AVPlayerStatusReadyToPlay属性只是表明了AVPlayer已经成功的载入了AVPlayerItem，并且准备好，但是实际的是否能播放时由AVPlayerItem的status到达AVPlayerItemStatusReadyToPlay的时候，才能开始正常播放的。如果我们的App使用CPU过多，I/O读写过多时，有可能导致直接无法播放，我们再调用play或者seekToTime:方法都无法正常播放，尤其是视频。所以我们需要做一个真正播放状态准备好的判断，也可以通过KVO去监听AVPlayerItem的status。 //播放器是否准备好 if (self.videoPrePlayer.status == AVPlayerStatusReadyToPlay) { //视频是否加载成功 if(self.videoPrePlayer.currentItem.status == AVPlayerItemStatusFailed){ return; } [self.videoPrePlayer play]; } 四、小结文章主要对音频的使用范畴做了概括，并列举了两三实践点，其他的并没有做详细的论述，因为本篇比较偏向音频知识的介绍，知道用什么工具框架后再具体解决就好。比如如何播放流畅的网络音频，如何实现音频的快放与慢放等具体问题，此次需求内容并不复杂没有涉及，他们都可以通过 AudioToolBox框架实现。","categories":[],"tags":[{"name":"开发","slug":"开发","permalink":"http://zichao.me/tags/开发/"}]},{"title":"换肤功能的实现","slug":"换肤功能的实现","date":"2016-01-21T08:22:41.000Z","updated":"2019-01-24T12:14:28.329Z","comments":true,"path":"2016/01/21/换肤功能的实现/","link":"","permalink":"http://zichao.me/2016/01/21/换肤功能的实现/","excerpt":"","text":"一、前言市面上的应用常见换肤功能，归纳下来可谓两类形式，一种是普通的切换皮肤颜色，比如今日头条的夜间阅读模式，另外一种是节假日喜庆皮肤，比如淘宝京东每逢双十一的炫酷界面，来头条后刚好接触到这方面的学习，写篇文章总结下。 二、头条夜间阅读模式1、定制 一般的视图大多继承自UIView，但是也存在没有继承比如UIBarButtonItem，更换主题的时候，不同视图需要更换的属性比如textColor、backgroundColor和UIImageView的图片也不同，所以也难避免需要一种一种的找出来进行视图的定制。 新建一个SSThemed.h文件，里面定义的所有视图都需要绑定一个主题的key值，每一种key值对应了不同主题下的各个颜色。设置一个视图为浅白色的，key值是backgrounColor4，在白天的时候对应的是#ffffff,在夜间的时候对应的是#252525。 比如SSThemedView这个类，其实就是继承自UIView，绑定了关于背景和边框线的主题键即可。 123456@interface SSThemedView : SSViewBase@property(nonatomic, copy) IBInspectable NSString *backgroundColorThemeKey;@property(nonatomic, copy) IBInspectable NSString *borderColorThemeKey;@end 而像文本输入框这样的视图继承自UITextView，就要相对多2个属性，因为包含文字颜色 1234567@interface SSThemedTextView : UITextView@property(nonatomic, copy) IBInspectable NSString *borderColorThemeKey;@property(nonatomic, copy) IBInspectable NSString *textColorThemeKey;@property(nonatomic, copy) IBInspectable NSString *placeholderColorThemeKey;@property(nonatomic, copy) IBInspectable NSString *backgroundColorThemeKey;@end 其他类似，比如UIImageView，但是图片会多一个图片name属性，这个是由开发者自己添加的，主题切换的时候需要自己处理，我们接下往下看。 1234567891011@interface SSThemedImageView : UIImageView@property(nonatomic, copy) IBInspectable NSString *imageName;@property(nonatomic, copy) IBInspectable NSString *highlightedImageName;@property(nonatomic, copy) IBInspectable NSString *tintColorThemeKey;@property(nonatomic, copy) IBInspectable NSString *hightlightedTintColorThemeKey;@property(nonatomic, assign) IBInspectable BOOL enableNightCover;@property(nonatomic) CGSize preferredContentSize;@end 2、管理主题的manager 创建一个全局单例的TTThemeManager，用于读取配置管理主题和记录用户选择主题操作。头条的做法是将尽可能使用到的主题放在一个默认的plist文件中，有与头条只有夜间模式和白天模式，所以通过plist存储颜色值基本可以满足配置要求，应用启动的时候管理器读取应用包里的配置。白天对应的plist是default_theme.plist，夜间对应的是night_theme.plist，里面存放的key值是相同的，如上所述，不同文件里相同key对应的颜色值不一样。 1234567891011121314- (NSDictionary *)dictionaryForBundle:(NSString *)bundleName theme:(NSString*)themeName &#123; if (!bundleName) bundleName = @&quot;TTThemed&quot;; NSString *bundlePath = [[NSBundle mainBundle] pathForResource:bundleName ofType:@&quot;bundle&quot;]; NSBundle *bundle = [NSBundle bundleWithPath:bundlePath]; NSString *fileName = [NSString stringWithFormat:@&quot;%@_theme&quot;, themeName]; NSString *path = [bundle pathForResource:fileName ofType:@&quot;plist&quot;]; if (![[NSFileManager defaultManager] fileExistsAtPath:path]) &#123; path = [[NSBundle mainBundle] pathForResource:@&quot;default_theme&quot; ofType:@&quot;plist&quot;]; &#125; return [NSDictionary dictionaryWithContentsOfFile:path];&#125; 3、主题切换 头条内部夜间模式和白天模式切换，通过发出一个全局的通知NSNotification到各个组件，组件收到通知事件通过mananger读取当前的主题，也就是当前是白天还是夜间，然后获取当前绑定的颜色key值在该主题下所对应的颜色。 针对背景颜色和边框颜色的情况： 12345678910111213141516171819202122232425- (void)_customThemeChanged:(NSNotification *)notification &#123; if (!isEmptyString(_backgroundColorThemeKey)) &#123; self.backgroundColor = [UIColor tt_themedColorForKey:_backgroundColorThemeKey]; &#125;&#125;- (UIColor *)themedColorForKey:(NSString *)key &#123; if (self.currentTheme &amp;&amp; [self.currentTheme[@&quot;colors&quot;] valueForKey:key]) &#123; NSString *colorString = [self.currentTheme[@&quot;colors&quot;] valueForKey:key]; UIColor *color = [self.colorCache objectForKey:colorString]; if (!color) &#123; color = [UIColor colorWithHexString:colorString]; if (color) &#123; [self.colorCache setObject:color forKey:colorString]; &#125; &#125; return color; &#125; return nil;&#125; 针对图片替换情况，开发者在建议有主题变化的ImageView的时候需要提供两套图片，一个是白天的，一个是夜晚，并且需要遵循一定的规则，比如白天的名字叫XXX.png,那么夜晚的名字就是白天的名字加上后缀_night,也就是XX_night.png。当主题发生变化的时候，UIImageView自动寻找对应的后缀名的图片文件替换。 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647 if ([[TTThemeManager sharedInstance_tt] currentThemeMode] == TTThemeModeNight) &#123; if (noNightModeFileNameSet == nil) &#123; noNightModeFileNameSet = [[NSMutableSet alloc] initWithCapacity:100]; &#125; if ([noNightModeFileNameSet containsObject:fixedName]) &#123; return [UIImage imageNamed:fixedName]; &#125; if ([TTDeviceHelper is667Screen] || [TTDeviceHelper is736Screen]) &#123; NSString * name = hdImageNamed(fixedName, YES); UIImage * image = [UIImage imageNamed:name]; if (image) &#123; [noNightModeFileNameSet addObject:name]; return image; &#125; name = hdImageNamed(fixedName, NO); image = [UIImage imageNamed:name]; if (image) &#123; [noNightModeFileNameSet addObject:name]; return image; &#125; &#125; NSString * fileNameWithNightModelSuffix = [self fileNameAddNightModelSuffix:fixedName]; UIImage * img = [UIImage imageNamed:fileNameWithNightModelSuffix]; if (img != nil) &#123; return img; &#125; [noNightModeFileNameSet addObject:fixedName]; return [UIImage imageNamed:fixedName]; &#125; + (NSString * )fileNameAddNightModelSuffix:(NSString *)originName&#123; NSMutableString *resultName = [NSMutableString stringWithString:originName]; NSRange lastPoint = [resultName rangeOfString:@&quot;.&quot; options:NSBackwardsSearch]; if(lastPoint.location != NSNotFound) &#123; [resultName insertString:nightModelSuffixStr atIndex:lastPoint.location]; &#125; else &#123; [resultName appendString:nightModelSuffixStr]; &#125; return resultName;&#125; 三、节假日的喜庆皮肤与阅读模式有些微区别，虽然本质上可以使用一套，但是节日假通常是根据节假日时间出现和消失，并且不是属于用户行为，而是应用开发方进行的控制，有了上述的方法的基础，不使用默认提供的theme组件，我们再节假日单独变更的页面可以采用入下实现方式。 1、首先需要定制符合需求的UI组件 2、下发数据使用接口 我们可以合server约定类型，在参数为1-10的时候表示为10中主题，当下发参数为0的时候客户端显示默认设计样式，不走本地主题的逻辑，下发的数据格式举例。 1234567891011121314151617181920212223242526272829303132333435&#123; &quot;home_navi&quot;: &#123; &quot;colors&quot;: &#123; &quot;color_background&quot;: &quot;#ffffff&quot; &#125;, &quot;images&quot;: &#123; &quot;image_logo&quot;: &quot;home_topLogo&quot; &#125; &#125;, &quot;home_tabbar&quot;: &#123; &quot;colors&quot;: &#123; &quot;color_background&quot;: &quot;#F9F9F9&quot;, &quot;color_button_normal&quot;: &quot;#999999&quot;, &quot;color_button_selected&quot;: &quot;#444444&quot; &#125;, &quot;images&quot;: &#123; &quot;image_one_button_normal&quot;: &quot;tab按钮1图片&quot;, &quot;image_one_button_selected&quot;: &quot;tab按钮1选中图片&quot;, &quot;image_two_button_normal&quot;: &quot;tab按钮2图片&quot;, &quot;image_two_button_selected&quot;: &quot;tab按钮2选中图片&quot;, &quot;image_three_button_normal&quot;: &quot;tab按钮2图片&quot;, &quot;image_three_button_selected&quot;: &quot;tab按钮2选中图片&quot; &#125;, &quot;values&quot;: &#123; &quot;value_one_button&quot;: &quot;tab按钮1&quot;, &quot;value_two_button&quot;: &quot;tab按钮2&quot;, &quot;value_three_button&quot;: &quot;tab按钮3&quot; &#125; &#125;, &quot;loading&quot;: &#123; &quot;resources&quot;: &#123; &quot;resource_refreshImage&quot; : &quot;refresh.gif&quot; &#125; &#125;&#125; 3、下发使用压缩包 123456789101112@interface SSZipArchive : NSObject// Password check+ (BOOL)isFilePasswordProtectedAtPath:(NSString *)path;// Unzip+ (BOOL)unzipFileAtPath:(NSString *)path toDestination:(NSString *)destination;+ (BOOL)unzipFileAtPath:(NSString *)path toDestination:(NSString *)destination delegate:(nullable id&lt;SSZipArchiveDelegate&gt;)delegate;//...@end 4、优化头条在使用皮肤切换的存储上其实可以通过下发的处理，更加灵活和方便产品变动。主调颜色一致是红色，也没有节假日的活动皮肤，其实个人认为可以多增加点产品上的小体验，大红色好单调哦，主题可以多定制几个，而不是只有夜间模式。","categories":[],"tags":[{"name":"开发","slug":"开发","permalink":"http://zichao.me/tags/开发/"}]},{"title":"入职今日头条","slug":"入职今日头条","date":"2015-12-30T10:21:22.000Z","updated":"2019-01-25T08:17:39.007Z","comments":true,"path":"2015/12/30/入职今日头条/","link":"","permalink":"http://zichao.me/2015/12/30/入职今日头条/","excerpt":"","text":"2015年过去的很快，这一年算是自己工作的上升成长期，由毕业后最初的踏入到如今完全接受自己的工作领域和环境，并能正常的快速加入新的公司和团队，这是我这一年来最大的变化。人总是在不断的认知中成长，在去哪儿那会生活很安逸舒适，其他部门加班成狗的时候，我们无线部门依旧正常上下班，相信这也是移动发版周期化带来的好处，急了也急不了多少，慢也慢不起来，所以一切都再正常的时间里做着正常的事情里度过。 到15年7月，自己的水平已经进步了，恰逢学长开始创业，叫我一起干，原本就看着互联网大潮的我愉快的加入了。之后在里面独立承担开发APP 的任务，收货颇多。可毕竟不是个以产品支撑的企业，随着资本市场的低谷，我们的汽车业务数据起不来的结果就是最后度日艰难。到我离开的时候，互联网领域依旧低调，前面后试了许多知名企业，也拿到了一些Offer，还是对自己更加肯定，可是环境毕竟不是我想要得，想起自己从前的日子，年轻人暂时还不想过得太安逸。 12月底，经过多轮面试，我选择加入了今日头条，这是一个快速发展的公司，处于上升期，公司对员工很不错，尤其是食堂的饭菜很好吃，工作氛围也符合了我的预期，我相信在这里我会有更多的成长和获得更多的机会。目前，已经对公司的节奏基本把握和适应，对工作的需求已经开展中了。 恰逢2016年新年开始，我希望自己在新的一年里，整个安心稳定的工作，加大工作的力度，却不要追逐速度，要沉稳，要踏实，在自己的开发领域里有新的突破，对开发的认知更进一步，对技术的使用更深一层。针对头条的客户端能够熟悉并搭建工程结构，希望未来在某一方面或者某一块能够完全胜任管理，能够快速开发，能够应用和分享新的技术，并实践在客户端中。这一切都离不开同事们的交流，希望同事能够把一些坑和经验写入wiki文档，成为大家一起分享的资料，有说明才有更好的合作开发，也希望组长能够多多指点，让我能有力去做出一些付出，希望公司越来越好。","categories":[],"tags":[{"name":"总结","slug":"总结","permalink":"http://zichao.me/tags/总结/"}]},{"title":"我短暂的创业经历","slug":"我短暂的创业经历","date":"2015-12-21T07:01:22.000Z","updated":"2019-01-24T12:14:28.327Z","comments":true,"path":"2015/12/21/我短暂的创业经历/","link":"","permalink":"http://zichao.me/2015/12/21/我短暂的创业经历/","excerpt":"","text":"互联网圈内，去哪儿旅行对外展示着的形象是加班多，偶尔还传出员工猝死的消息，然而任何一家公司也并不是每个部门都加班，并不是每个部门都有那么多亟不可待的业务需要去追赶，反而，在这里，我每天的工作自在舒适，按需完成，加班是很少的，如果你不想去外面的世界翻滚，这里就是你长久生养之地。那个时候我就是一枚螺丝开发，由于业务需求没有那么多，所以每日我只需要自己安排完成一定的工作量即可，有时候需求周期因为各端同事的配合时间也会被拉长，所以其实我大部分时间就是在自己浏览学习，没有实际的业务上手实践。而与此同时，互联网界正在迅猛发展，每天看着的都是各自CEO的诞生，各自融资拿钱拿到手软，这不禁也影响着我。所以，尽管如此，尽管这里是整个互联网最安逸的体现，到了今年的7月份时候，我还是决心离开这温暖的被窝，离开我每日安享的梦境，全心投身创业。我却开始有些难过，因为那是我第一份工作，和去哪儿也是很有缘分的说，跟大家告别的时候特别伤心。一阵心塞之后，我的雄心开始燃烧，总是想着要闯出一片天地，对未来充满希望和无限遐想，想到我会享受着创业成就感与创业艰辛的交织幸福感，内心便激动起来。 加入的创业公司属于互联网汽车行业，与一般不同的是，做的是汽车B2B模式平台。加入前，我和公司的领头人聊得很好，不仅是因为旧相识，谈得更多的是对整个业务未来的展望，他侃侃而谈，把整个行业给我分析了一遍，我似乎找不到哪里一点他说的不对，只有当我问到如果事情没有按照你所推演的发展，这中间出现环节出错误的时候，他才有些避重就轻。当时我的理解，在此投资环境如此之好得情况下，任何一家创业公司的带头人应该都是这幅样子，要利用互联网优势把这个市场搅拌，要让传统行业为我们所用的架势,遇见的问题自然也会有办法。汽车市场如此之大，随便能咬到一口就是丰厚的回报，而早期的成员就自然不言而喻。同时已经拿到投资，数额可观，在此基础上开始讲解了如何去且足以推动整个业务的初期发展，到这里我确实接触到了不少我之前没能接触到的各种环境，且对他的信任，就基本已经奠定我后来加入的格局了。 加入团队后，秉承着我创业的心态一直很有干劲，除了自己分管的一些业务，其他大小事务也有一些参与感，看着产品的不断迭代和上线，我看到了自己努力的结果，心里满足，同时也收获了很多朋友，直到上周五离开，整整5个月了。 那么问题来了，我为何还是选择离开？ 事情似乎看着一切进展顺利，产品上线，人员分工合理，但其中的原因并不缺乏，一切可以说只是看起来顺利，可以说常见的创业问题几乎在这个公司都体现出来了，尤其到后来资本市场的寒冬到来，互联网经济受影响，4个月之后出现融资困难，在这时候公司问题更加的突出了。 首先说说产品，因为我是过去做开发的。产品的存在是为了服务公司的业务，开发人员和产品人员每日工作干进度是为了早日将这些服务呈现出来，按照我们的业务形态，产品的主要使用对象是汽车经销商，包括二级和4S在内。当时，产品和技术说现在版本上线了，大家可以推广使用了，却没有啥回应，包括几个带头人，他们对产品的使用好像并不在意，原本该我们的销售人员向对应的经销商开始推广安装使用，却没有一个销售人员相应行动。在团队产品的推进过程中，他们不会关心现在有多少人在使用了，不会关心技术团队的人加班后又做到什么程度了，这只是产品，为什么我单独说产品，因为三个合伙人是有一个专门管产品的，我看到的是他时常悠闲的在购物。 再说说领导的意识和管理，到公司内部的管理也是混乱，涉及到大家过了实习期转正问题的时候，负责人基本不在意，一问就说有事之后再说，一拖就是近10天，我自己倒是干得还可以，也相信负责人，但其中不乏一些刚毕业的学生同事，他们感受到的更多是不幸福，严重降低大家创业积极性，不过这些算是也创业的小问题，在这个创业环境下，我们都可以接受，都可以认为没什么，因为大家在业务兴起的时候，必须各自忙着自己这一块，可能管不了很多。 所以我们来说说，销售业务，这个公司最关键的地方，产品再好，没有业绩没有数据，一切为空。互联网汽车行业，单纯靠互联网的产品哪能，这也许成为前面大家忽视的原因，更多的精力放在了销售业务上，所以从这个角度看过去前面的好像也可以理解。销售团队向各级经销商，通过公司平台进行车源交易，从最初开始，产品技术和销售一起去往同一个地方推广，做销售的事情，活动覆盖了一个省，到现在建立几个省的销售区，规模也是有了。但是到现在，销售的量，汽车的成交量，一直没有突破，一直处于很低的指数，而这同时，最初的投资已经消耗了不少了，直到我离开的时候，销售的业务还是没有起，销售队伍已经快瓦解。公司各个方面的不足导致公司现在人心涣散，那些留下同事的理由唯一就是还有那么些钱可以消耗，可以再观望一阵。后来，到带头人发现有些带不动大家的时候，开始找大家吃饭讲问题，每次一讲都是几个小时。可在又一次的会议上，我们大家一起探讨，说到我们这次离开北京去浙江做到什么程度其实我也不知道，做多久其实我也不知道，最后，他自己也说了一句，要是我们这个没做起来，就换个方向做。我问，什么是换个方向，他说，就是不做这业务了找其他事情做。听到这里的时候，我开始确定我之前的怀疑，看来并不是我自己创业心智不够成熟，是确实这件事情本身存在了我们没能解决的不足。随后，销售团队首先开始离职，技术团队先后离职了，我也就是其中一个。 今天是周一，写了些文字，为了记录一下我这次经历吧，我对整个公司没有什么负面情绪，相反，从领头人到和我工作的同事，大家都对我很照顾，平常也是一起其乐融融的生活，自己也成长进步。倒是这次的经历之后，让我开始反思自己究竟想要做什么，自己适合做什么，写这篇文章不仅是总结，也是分享给其他有兴趣的人看看吧。我给自己mark,让自己以后的路会做到走的更好。 我在咖啡屋里，周围好些人，或看书，或攀谈，抿一口，待会继续投简历。 后记： 离我当时离开过了一年半了，我走的时候有一位坚持留下的开发同事走了，去了小米，随后也走了一名产品同事，去了高德地图，那位合伙的产品负责人也走了，去了一家互联网家具公司担任负责人。剩下的其他同事招了新人，改了发展路线，目前在慈溪开了三家汽车品牌服务维修店，大概是做汽车销售品牌的。比之前有些进展，但是要走的路还很长。祝他们能更快的取得更好的成果。 离我当时离开过了2年半了，凉了。","categories":[],"tags":[{"name":"总结","slug":"总结","permalink":"http://zichao.me/tags/总结/"}]},{"title":"RunLoop是如何跑起来的","slug":"RunLoop是如何跑起来的","date":"2015-11-05T06:34:12.000Z","updated":"2019-01-24T12:14:28.329Z","comments":true,"path":"2015/11/05/RunLoop是如何跑起来的/","link":"","permalink":"http://zichao.me/2015/11/05/RunLoop是如何跑起来的/","excerpt":"","text":"一、Run Loop为何存在?我们从编写命令式的语句开始理解，一般我们写一个运行函数，只要顺序执行，一遍就过了，比如简单的NSLog一个“hello word”，这样我们就算完成了一个问候世界的程序。好简单的程序，但是一个复杂的系统，一个能称之为系统的程序，比如我们的手机App，它是不可能按照执行顺序一下执行完成就结束的，它包含了我们各类需求，会接受我们不同的操作，所以这个程序需要有一个设计的模式能够符合这样的应用场景，能够响应操作。所以，有了Event驱动的模式。 特点： 程序可以一直运行并且接受用户的输入 决定程序应该处理哪些Event 主调方不能被被调方卡主，所以需要调用解耦。主调方就发个消息就完事了，就不管了，就可以去做别的了，被调防根据消息去派发、操作等等。这个概念就是(Message Queue) 节省了CPU时间，比如时间片执行，这就是操作系统里的概念。 没事的时候闲着，有事的时候激活它 二、Run Loop 都包含了什么相关内容？1、CF层和F层CF层是C写的，跨平台，F层其实不干事的。GCD 有部分联系。 2、常用NSTimer 完全依赖于RunLoop，UIEvent 都是RunLoop 跑的，AutoRelease 面试问题 三、RunLoop调用堆栈 四、RunLoop构成元素1、构成元素thread里面不是只能起一个RL，是可以多个的，但是必须嵌套。RunLoop机制存在的一对多的关系，比如Mode和TimerCFRunLoopSurece、CFRunLoopTimer、CFRunLoopObserver，主要的核心就是这三个。 2、对CFRunLoopTimer的封装NSTimer、 performSelector:after 、 displayLink 3、对CFRunLoopSurece的理解source是RL的数据源的抽象类，类似proctol，定义了两个version的source： source0：处理APP内部的世界、APP自己管理触发，比如UIEvent、CFSocket source1: 又RL和内核管理，Mach port 驱动 ，进程兼通讯的方式，往某个进程方法可以发到这个port上，对面的进程监听这个port 就是可以获得消息。比如：CFMachPort，CFMessagePort 4、对CFRunLoopServer对外报告状态比如我们在CAAnimation数组，多个动画，RL会通过判断依次的状态，将全部收集到一起后再开始执行。 5、CFRunLoopModeRunLoop在同一时间段内，只能在唯一的特点的mode下Run。更换Mode时，需要停止当前的Loop，然后重启动新的Loop。Mode是个保证IOS滑动顺畅的关键，在这个mode下只执行滑动计算相关可以创建自己的mode NSDefaultRunLoopMode: 默认的UITrackingRunLoopMode:scrollView滑动UIInitializationRunLoopMode: 启动的时候，私有的NSRunLoopCommomModes: 1和2都能执行，作为一个数组，并无优先级 相关Topic： NSTimer 默认被加入NSDefaultRunLoopMode中，如果不希望被SCrollView影响，让滑动的时候timer也依然进行运行，就需要添加到NSRunLoopCommomModes中。 RunLoopMode切换都是重新起，不是切换回原来的 GCD和Run Loop的联系 GCD的计时器是它自己的计时器，只有main queue的时候有关系。Run Loop 会问一下 GCD 你这边在搞事情吗？有的话就抛出来。 Auto ReleaseUIKit 通过的RunLoopServer在RunLoop两次Sleep间对Autorelease进行Pop和Push将这次Loop中产生的AutoRelease对象释放。两圈之间自动释放UI上自动释放池的东西，比如UITouch。 六、RunLoop的挂起和唤醒CGRunLoopServiceMachPort 的作用就是发送消息，表示暂停还是激活，与内核进行交互。 七、RunLoop的实践1、AFNetworking常驻线程，NSURLConnetion需要一个RL常驻，不然跑一次就没了。比如有个需求需要一直在线程里面呆着。 + (void)networkRequestThreadEntryPoint:(id)__unused object { @autoreleasepool { [[NSThread currentThread] setName:@&quot;AFNetworking&quot;]; NSRunLoop *runLoop = [NSRunLoop currentRunLoop]; [runLoop addPort:[NSMachPort port] forMode:NSDefaultRunLoopMode]; [runLoop run]; } } + (NSThread *)networkRequestThread { static NSThread *_networkRequestThread = nil; static dispatch_once_t oncePredicate; dispatch_once(&amp;oncePredicate, ^{ _networkRequestThread = [[NSThread alloc] initWithTarget:self selector:@selector(networkRequestThreadEntryPoint:) object:nil]; [_networkRequestThread start]; }); return _networkRequestThread; } 2、 延迟加载tableview的图片 UIImage *downLoadImage = ...; [self.avatarImageView performSelector:@selector(setImage:) withObject:downloadImage afterDelay:0 inModes:@[NSDefaultRunLoopMode]]; 3、让Crash的APP回光返照 // 创建RunLoop CFRunLoopRef runLoop = CFRunLoopGetCurrent(); // 设置Mode NSArray *allModes = CFBridgingRelease(CFRunLoopCopyAllModes(runLoop)); // 弹窗告知 程序挂了 UIAlertView *alertView = [[UIAlertView alloc] initWithTitle:@&quot;程序崩溃了&quot; message:@&quot;崩溃信息&quot; delegate:nil cancelButtonTitle:@&quot;取消&quot; otherButtonTitles:nil]; [alertView show]; while (1) { for (NSString *mode in allModes) { // 快速的切换 Mode 就能处理滚动、点击等事件 CFRunLoopRunInMode((CFStringRef)mode, 0.001, false); } }","categories":[],"tags":[{"name":"开发","slug":"开发","permalink":"http://zichao.me/tags/开发/"}]},{"title":"FE前端的修炼之道","slug":"前端修炼之道","date":"2015-10-15T15:22:12.000Z","updated":"2019-01-24T12:14:28.319Z","comments":true,"path":"2015/10/15/前端修炼之道/","link":"","permalink":"http://zichao.me/2015/10/15/前端修炼之道/","excerpt":"","text":"转移动端开发之前，曾是名呆萌的FE，在学校的时候还算勤劳，上线了大大小小的产品，冰岩作坊见证了我的成长，认识了很多朋友。如今回顾一下，整理一条前端之路。 知识谱图 知识点一、语言1、HTML1.1 理解 HyperText Markup Language超文本标记语言。语言自不必说，超文本意味着『将网页彼此连接链接，超越了传统意义上的书本文字』，标记则说明了语言的特点是描述性的。比如可以通过标签来描述内容：&lt;h1&gt;是一个标题(headline)；&lt;p&gt;是一个段落(paragraph)；&lt;code&gt;是一段代码等等。还可以通过声明属性进一步描述如&lt;input class=&quot;form-inline&quot; id=&quot;gender-input-female&quot; type=&quot;radio&quot; name=&quot;gender&quot; value=&quot;female&quot;&gt;。HTML是一门应当注重语义化的语言，尤其在HTML5的规范中更是强调此，如增加了&lt;article&gt;``等标签。 标签有自闭和和成对闭合两种，具体规则要参考规范，注意自闭合标签结尾的反斜杠不是必须的。常见的自闭合标签是&lt;img&gt;，&lt;input&gt;。 HTML在被浏览器渲染时，会有两种元素，非替换元素指的是其内容无需被浏览器替换，直接显示即可。而替换原素则需要浏览器进行转换才能正常工作，如&lt;img&gt;&lt;textarea&gt;&lt;canvas&gt; HTML中也可以嵌入如SVG等其他语言内容。 2、CSS2.1 理解 Cascading Style Sheets层叠样式表。表自不必说，样式也是顾名思义，关键点在于层叠。CSS的层叠体现在选择器的关系上：通过选择器的优先级来决定样式的使用与否，能够灵活的控制HTML元素的样式。 一个普通的『规则』由如下部分组成：选择器+声明块（声明由属性：值组成），此外还有@语句，可用于媒体查询、引入文件等，在此略过。 123456789.class &#123; color: rgba(0,0,0,.6); transition: height .3s ease-in-out .5s; -webkit-tap-highlight-color: transparent;&#125; .night .class &#123; color: black;&#125; 由于浏览器纷争以及标准的制定落后于市场，CSS存在着很严重的兼容性问题。具体问题暂且不表，但为了解决这些问题，业界目前普遍使用『预处理器』和『后处理器』来增强CSS。 a、 预处理器主要是通过对CSS进行改编或扩展行成一种新的语言，然后通过『预处理器』编译为可被浏览器使用的CSS。常见的就是LESS和SCSS。b、 后处理器是指在生成一个标准的CSS后，进行一些列的优化的工具。如用于自动补充各浏览器前缀的autoprefixer；用于去除冗余css的CSSClean等。大都依赖于PostCSS这个工具。 3、JavaScript3.1 理解这个没有一个明确的翻译，名字里有Java纯粹是为了蹭热度。广义上的JS由其语言核心+DOM+BOM组成。 JavaScript有一个比较简单的出生，但有个比较折腾的成长。目前其标准属于EcmaScript（Flash使用的ActionScript也是这个标准下的产物），现在的版本是第7版，正式名是ES2017，前几天刚定稿，老浏览器都不支持，需要通过bable工具转换为第5版才能让绝大多数浏览器正常执行。 JS是弱类型语言，其基本数据类型有number/boolean/string/undefined/symbol/(null)、引用类型object，包括function和array。基本类型按值访问，引用类型按地址访问。基本数据类型用typeof区分，引用类型需要使用instanceof或其特殊的判断方法区分。 在ES5时代变量作用域仅限于函数内，ES6后通过let能指定块级作用于。var存在变量提升，是个bug隐患点。 ES5时代没有定义class，可以通过function+prototype的方式模拟一个类。JS的继承主要是通过原型链实现的：instance.__proto__.....__proto__ === Class.prototype。 DOM（文档对象模型）描述了处理网页内容的方法和接口。如document.getElementById。 BOM（浏览器对象模型）描述了与浏览器进行交互的方法和接口。如location.href。 通过XMLHttpRequest发送HTTP请求，可以通过指定异步的方式实现AJAX。异步请求存在同源限制。 ES6规范中明确了异步操作的推荐做法即Promise。主要理解两点：异步与事件驱动。两者相互结合构成了现在的JS的运行逻辑。 TypeScript微软推出谷歌力捧的JS超集，实现了强类型、类等诸多C++、Java功能，目前也需要通过编译才能执行，未有浏览器原生支持。 二、代码执行环境1、浏览器 浏览器的历史不过多介绍，当前PC主流有Chrome和IE/Edge两个，其余的Firefox、safari都很小众。这三类都是独自研制开发。移动端上的主流几乎只有Safari和Chrome两种。 单独谈渲染引擎主流的有Webkit(Blink)、Trident、Gecko。单独谈JS引擎主要有V8、charkra等。 2、Node.jsNode.js®是一个基于Chrome V8 引擎的 JavaScript 运行时。 Node.js 使用高效、轻量级的事件驱动、非阻塞 I/O 模型。Node.js 之生态系统是目前最大的开源包管理系统。 三、代码执行流程1、编译以现阶段的通常情况来看，我们采用超前的ES6、ES7来写JS，用Less写CSS，用React等来实现View，这些代码通过import/export引用和发布。然后通过webpack、fis等工具『编译』成能被浏览器执行的HTML/JS/CSS。 2、部署：其中HTML如果涉及到与后端数据的直接耦合，则被认为是『模板』，部署到相应的接入层逻辑指定的线上地址，而其他内容如.js/.css/.png/.svg等，则与服务端分离，部署在CDN上以提供更快的访问速度。这个过程主要的问题在于如何控制浏览器缓存（HTTP缓存）。 3、访问：从URL被请求到HTML被返回的逻辑就暂且略去，主要谈HTML返回后的过程。这一部分以真实请求的Performance为例讲解吧。不赘述？？？？后续找几篇文章填补空白。 4、JSBridge(链接跳转) JS → Native：发特定规则的url，被native拦下来就好了。 Native → JS：Native可以在JSContext中注入代码，或者通过javascript:xxxx这种方式调用。 四、常见的问题与debug1、如何获取与定位问题 最好用的工具就是chrome的开发者工具了。2、为什么会白页 一种是JS的BUG导致的，一般来说在相同文件内的JS会由于错误阻塞运行。也就是上文有错，下文直接挂。当渲染在下文时就容易出现这种问题。 另一种情况比较少见就是在load事件后调用document.write导致。 3、XSS与CSRF XSS是老生常谈的话题了，主要是由于HTML语言的『保留字』（&lt; &gt; ‘ “ ）被直接使用导致，大部分能够通过HTML转义避免。CSRF现在大都不常见了，基本通过加密token校验来避免。4、性能 为何觉得卡，是因为人眼的构造决定的，实际上没有连续的动画，动画都是一帧一帧组成的。如果普通大众能接受60帧，那就意味着对HTML的相应操作要在1000/60m=16ms内执行完毕，才不会掉帧。 还是可以通过chrome的preformance工具来进行定位。 五、「框架」新时代 jQurey、Bootstrap：这个时代的特点就是乱，文件瞎引用，样式瞎写，但干起活来就是快，维护体验很差。 backbone：开始有了一些思想，主要是类比了MVC，在前端也搞了全套的M-V-C，强调数据-模板（样式）-逻辑分离。 MVVM：再后来开始分化，一些人觉得C不足以表意，因为其实干来干去都是在操作M和V，不如就叫VM，所以是MVVM。另一些人觉得前端这么简单的事儿不要搞复杂留着V就足够了，也就出现了MVVM的代表Angular，和纯View层的代表React。 Vue.js:渐进式框架,Vue 从根本上采用最小成本、渐进增量的设计。Vue 的核心库只专注于视图层，并且很容易与其他第三方库或现有项目集成。 六、新技术 PWA：（ Progressive Web Apps，渐进式网页应用）是由谷歌提出的新一代 Web 应用概念，旨在提供可靠、快速、类似 Native 应用的服务方案。 AMP：谷歌提倡的一些列『最佳实践』，通过实现这些最佳实践，大概率能让你的网站速度飙升。 reactNative、Weex：以虚拟DOM技术为核心，尝试将其用非Web技术渲染执行。 webSocket：在HTTP2出现以前，提供的一个基于TCP的socket应用接口，全双工、可二进制传输是其特点。 WebGL：基于canvas和OpenGL，使得web也能进行大型游戏和渲染场景的制作。 WASM：厉害了，所有能被JS实现的最终都会被JS实现。类似安卓的so。 微信小程序：个人理解是：对现有限制浏览器体验的内容删减，纯数据驱动以限制web能力，缓存模板甚至缓存运行时以提升性能，提供了一个本质还是浏览器的东西。 Electron： 打包一个浏览器，钉钉。 七、讨论 对残障人士更友好的网页：这个话题里中国比较远，下一题。 HybridApp：这个题好，其实非核心功能和弱交互功能，完全可以交给web实现。而web主要性能受限的网络则可以通过Hybrid的方式预先集成到App内部，需要时就能立刻提供服务。类似PWA。 参考书籍与站点 ：《JavaScript高级程序设计》、《深入理解ES6》、Google Developer Docs、Mozilla Web Docs 常用工具 ：caniuse 查兼容性的神器、tinypng 压缩图片好工具","categories":[],"tags":[{"name":"开发","slug":"开发","permalink":"http://zichao.me/tags/开发/"}]},{"title":"Native与Web通信","slug":"Native与Web通信","date":"2015-09-10T10:22:41.000Z","updated":"2019-01-25T09:20:49.060Z","comments":true,"path":"2015/09/10/Native与Web通信/","link":"","permalink":"http://zichao.me/2015/09/10/Native与Web通信/","excerpt":"","text":"一、Webview方式：1、JS调用Native1.1 webview加载流程 发起一个网页请求 1- (void)loadRequest:(NSURLRequest *)request 代理回调判断是否加载当前请求 123- (BOOL)webView:(UIWebView *)webView shouldStartLoadWithRequest:(NSURLRequest *)request navigationType:(UIWebViewNavigationType)navigationType; 开始请求的时机 1- (void)webViewDidStartLoad:(UIWebView *)webView; 成功完成加载请求 1- (void)webViewDidFinishLoad:(UIWebView *)webView; 请求失败 1- (void)webView:(UIWebView *)webView didFailLoadWithError:(NSError *)error; 1.2 URL拦截123456789101112131415161718192021222324- (BOOL)webView:(UIWebView *)webView shouldStartLoadWithRequest:(NSURLRequest *)request navigationType:(UIWebViewNavigationType)navigationType&#123; //JS发起的nativePage调用 if ([request.URL.scheme isEqualToString:@&quot;SchemeName&quot;]) &#123; //这里是应用内部的schema跳转分发逻辑 [Router openNewPage:url]; //返回NO，不打开新网页 return NO; &#125; //JS发起的事件Bridge调用 if([request.URL.scheme isEqualToString:@&quot;JSBridgeName&quot;]) &#123; //这里是应用内部的JS事件处理逻辑分发 [JSBridgeManager dealWithAction:url webView:webView]; //返回NO，不打开新网页 return NO; &#125; return YES;//默认打开请求&#125; 1.3 请求分发注意上面的Router，其实也可以用JSBridgeManager事件进行分发，跟进传入的参数来判定即可，这里单独提炼出去，可以更好使得业务功能拆分复用。 拦截下JS的请求后，我们开始构建自己的JSBridgeManager。 定义我们执行JS事件的webview为JSWebView，包含对应执行JS的方法 和前端约定一个固定接口，当前webview执行JS事件的时候，暴露一个方法给Native，Native调用来获取执行事件的时候所需要的额外信息，此处定义为”JSBridgeManager._fetchInfo()” 获取完返回的信息后执行解析为一个数组，数组里面每一个对象都是一个可执行的命令体，通过转化我们定义命令体对象JSCommand 123456789101112//消息类型@property(nonatomic, copy) NSString *messageType;//事件ID@property(nonatomic, copy) NSString *eventID;//回调ID@property(nonatomic, copy) NSString *callbackID;//消息参数@property(nonatomic, copy) NSDictionary *params;//前端传过来的方法名@property(nonatomic, copy) NSString *fullName;//方法名@property(nonatomic, copy) NSString *methodName; 定义一个JSForwardManager对象,专门用于转发命令，根据native的本地协定好的方法名和格式，动态消息转发。 123456789101112131415161718+ (BOOL)dealWithAction:(NSURLRequest *)request withWebView:(JSWebView *)webView &#123; NSURL *url = request.URL; if (![webView respondsToSelector:@selector(ttr_evaluateJavaScript:completionHandler:)]) &#123; return NO; &#125; [webView evaluateJavaScript:@&quot;;window.JSBridgeManager &amp;&amp; JSBridgeManager._fetchInfo();&quot; completionHandler:^(id result, NSError *error) &#123; NSArray *messagesData = [result JSONValue]; for(NSDictionary *messageData in messagesData) &#123; JSCommand *command = [[JSCommand alloc] initWithDictonary:messageData]; [[JSForwardManager sharedInstance] forwardJSBWithCommand:command engine:webView completion:^(TTRJSBMsg msg, NSDictionary *response) &#123; [self invokeJSBCallbackWithCommand:command msg:msg data:response webView:webView]; &#125;];; &#125; &#125;]; return YES;&#125; 处理传入进来的命令，根据JSCommand查找本地规则对应的JSPlugin，JSPlugin则是各个JS事件对应调用的实际Native对象，该对象由业务方自己实习，继承自JSPlugin，最后通过NSInvocation直接调用对应的方法。 12345678910111213141516171819202122232425- (BOOL)forwardDynamicPluginWithCommand:(JSCommand *)command engine:(id&lt;JSEngine&gt;)engine completion:(JSResponse)completion &#123; NSString *selectorStr = [command.methodName stringByAppendingString:@&quot;WithParam:callback:webView:controller:&quot;]; SEL selector = NSSelectorFromString(selectorStr); JSPlugin *plugin = [self _generatePluginWithCommand:command engine:engine]; if (![plugin respondsToSelector:selector]) &#123; return NO; &#125; NSMethodSignature *signature = [plugin methodSignatureForSelector:selector]; NSInvocation *invocation = [NSInvocation invocationWithMethodSignature:signature]; invocation.target = plugin; invocation.selector = selector; NSDictionary *params = command.params; [invocation setArgument:&amp;params atIndex:2]; [invocation setArgument:&amp;completion atIndex:3]; [invocation setArgument:&amp;engine atIndex:4]; UIViewController *source = engine.ttr_sourceController; [invocation setArgument:&amp;source atIndex:5]; [invocation invoke]; return YES;&#125; 注意此处的completion回调，会返回去执行原来传进来的block，这里的JSResponse类都由本地实现和定义，最后在原webview里面执行脚本JS方法 123[self invokeJSBCallbackWithCommand:command msg:msg data:response webView:webView];[self evaluateJavaScriptFromString:javaScriptString completionBlock:completionHandler]; 2、Native调用JS与上述最后一步回调一样，实际就是webview的一个执行JS的方法。 1- (nullable NSString *)stringByEvaluatingJavaScriptFromString:(NSString *)script; 二. 基于JavaScriptCore1、JS调用Native1.1 获取当前JS环境1self.JSContext = [self.baseWebView valueForKeyPath:@&quot;documentView.webView.mainFrame.javaScriptContext&quot;]; 1.2 在Native定义JS环境对象利用JSExport接口定义一套自己的业务接口协议，实现此协议的对象，可以放入JSContext环境中直接作为同名的JS方法调用。 12345678910111213141516171819#import &lt;JavaScriptCore/JavaScriptCore.h&gt;@protocol BaseWebObjProctol &lt;JSExport&gt;//网页打开本地- (void)openNativePage:(id)param;//登录- (void)login;//调用分享接口- (void)shareToOthers;@end@interface BaseWebObj : NSObject&lt;BaseWebObjProctol&gt;@property (nonatomic,strong) BaseWebVC *webVC;@end 1.3 注入JS对象12345678- (void)webViewDidFinishLoad:(UIWebView *)webView&#123; //初始化 BaseWebObj *webObj = [[BaseWebObj alloc] init]; webObj.webVC = self; self.JSContext[@&quot;nativeApp&quot;] = webObj; &#125; 1.4 JS调用示例1window.nativeApp.openUrlPage(dictionary) 2、Native调用JS与上述最后一步回调一样，实际就是webview的一个执行JS的方法。 12@interface JSContext : NSObject- (JSValue *)evaluateScript:(NSString *)script; 三、调试 手机: 设置-&gt;Safari-&gt;高级-&gt;打开web检查器 Safari: Safari-&gt;首选项-&gt;高级-&gt;打开 ‘在菜单中显示开发’ 选项 调试流程:Safari-&gt;开发-&gt;找到需要调试的设备-&gt;找到需要调试的页面 BTW: 可用于检测WebView实例的内存泄露","categories":[],"tags":[{"name":"开发","slug":"开发","permalink":"http://zichao.me/tags/开发/"}]},{"title":"iOS多线程","slug":"iOS多线程","date":"2015-06-27T14:59:12.000Z","updated":"2019-01-24T12:14:28.323Z","comments":true,"path":"2015/06/27/iOS多线程/","link":"","permalink":"http://zichao.me/2015/06/27/iOS多线程/","excerpt":"","text":"一、概述1、进程与线程 进程 进程是资源分配的基本单位，它是程序执行时的一个实例。程序运行时系统就会创建一个进程，并为它分配资源，然后把该进程放入进程就绪队列，进程调度器选中它的时候就会为它分配CPU时间，程序开始真正运行。多个进程之间不存在相互影响。 线程 线程是程序执行时的最小单位，它是进程的一个执行流，是CPU调度和分派的基本单位，一个进程可以由很多个线程组成，线程间共享进程的所有资源，所以相互通信更方便。每个线程有自己的堆栈和局部变量，但是没有自己的地址空间。一个线程低调则进程也死掉。线程由CPU独立调度执行，在多CPU环境下就允许多个线程同时运行。 2、iOS中的几种线程 二、NSThreadNSThread是苹果对线程的封装，完全是面向对象的，你可以直接操作线程本身，创建和获得一个线程非常方便，但是线程的生命周期需要手动管理，在实现多线程的时候不太方便，所以我们使用的场景偏向于基础调用和读取较多一些。场景如下： 1、读取线程信息1234567891011121314//主线程[NSThread mainThread]；[NSThread isMainThread];//当前线程[NSThread currentThread];//是否多线程[NSThread isMultiThreaded];//实例线程状态thread.isExecuting;thread.isCancelled;thread.isFinished; 2、阻塞一个线程1234//休眠到指定时间[NSThread sleepUntilDate:[NSDate date]];//休眠指定时长[NSThread sleepForTimeInterval:4.5]; 3、退出和取消线程1234[NSThread exit];//实例thread.cancel 4、在某个线程上执行方法，也属于线程通信12345678//主线程执行- (void)performSelectorOnMainThread:(SEL)aSelector withObject:(nullable id)arg waitUntilDone:(BOOL)wait;//后台线程执行- (void)performSelectorInBackground:(SEL)aSelector withObject:(nullable id)arg；//某一个子线程执行- (void)performSelector:(SEL)aSelector onThread:(NSThread *)thr withObject:(nullable id)arg waitUntilDone:(BOOL)wait； 三、GCDGCD是苹果提出的多核运行方案伟大的中央调度系统，基于C语言用来替代NSThread。自动管理线程的生命周期，包括创建销毁和执行，以Block的形式接口，功能强大且方便灵活，现实开发中基本涵盖全部场景,包含几个基本概念。 block任务：你的操作，也即是Block中那段代码。 queue队列：用于存放任务并等待执行的栈容器。 sync同步：只在当前线程中执行。 async异步：可以开启新的线程。 concurrent并发：多个任务同时执行。 serial串行：一个任务执行完毕再执行下一个。 1、创建队列 主队列是特殊的串行队列，UI相关的操作只能放主队列 自己创建的队列可以是串行的也可以是并行的队列 全局队列是系统提供的一个全局的并发队列 123456789//主队列UIdispatch_queue_t queue = dispatch_get_main_queue();//自己创建队列dispatch_queue_t queue = dispatch_queue_create(&quot;tk.bourne.testQueue&quot;, DISPATCH_QUEUE_SERIAL);dispatch_queue_t queue = dispatch_queue_create(&quot;tk.bourne.testQueue&quot;, DISPATCH_QUEUE_CONCURRENT);//全局并发队列dispatch_queue_t queue = dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0); 2、创建任务12345//异步任务，新起一个线程，等这个队列什么时候安排Blockdispatch_async(dispatch_queue_t queue, DISPATCH_NOESCAPE dispatch_block_t block);//同步任务，等这个队列什么时候安排Blockdispatch_sync(dispatch_queue_t queue, DISPATCH_NOESCAPE dispatch_block_t block); 两个阻塞案例 12345678910111213141516//只会打印1，因为sync阻塞了主线程NSLog(&quot;1 - %@&quot;, NSThread.currentThread())dispatch_sync(dispatch_get_main_queue(), &#123; () -&gt; Void in NSLog(&quot;2 - %@&quot;, NSThread.currentThread())&#125;)NSLog(&quot;3 - %@&quot;, NSThread.currentThread())//只会打印1，因为sync阻塞了自己创建的线程queuedispatch_async(queue, &#123; () -&gt; Void in NSLog(&quot;1 - %@&quot;, NSThread.currentThread()) dispatch_sync(queue, &#123; () -&gt; Void in NSLog(&quot;2 - %@&quot;, NSThread.currentThread()) &#125;)&#125;)NSLog(&quot;3 - %@&quot;, NSThread.currentThread()) 3、其他用法 延时执行 1dispatch_after(dispatch_time_t when,dispatch_queue_t queue,dispatch_block_t block); 一次执行 1234static dispatch_once_t onceToken;dispatch_once(&amp;onceToken, ^&#123; // 只执行1次的代码(这里面默认是线程安全的)&#125;); 组合 123456789101112131415161718//其实是和队列进行绑定，最后都完成之后会发出一个notifydispatch_queue_t disqueue = dispatch_queue_create(&quot;com.shidaiyinuo.NetWorkStudy&quot;, DISPATCH_QUEUE_CONCURRENT);dispatch_group_t disgroup = dispatch_group_create();dispatch_group_async(disgroup, disqueue, ^&#123; NSLog(@&quot;任务一完成&quot;);&#125;); dispatch_group_async(disgroup, disqueue, ^&#123; sleep(8); NSLog(@&quot;任务二完成&quot;);&#125;); dispatch_group_notify(disgroup, disqueue, ^&#123; NSLog(@&quot;dispatch_group_notify 执行&quot;);&#125;); 信号 123456dispatch_semaphore_t signal = dispatch_semaphore_create(1);dispatch_async(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0), ^&#123; sleep(1); x = dispatch_semaphore_signal(signal); &#125;);x = dispatch_semaphore_wait(signal, DISPATCH_TIME_FOREVER); 四、NSOperationNSOperation是苹果对GCD的封装，也是面向对象的，实现了一些GCD不好实现的功能。NSOperation是基类不能添加任务，需要再子类NSInvocationOperation和NSBlockOperation中实现，可以配合NSOperationQueue使用，分别对应GCD里面的任务和队列。 1、执行任务12345678//start方法，直接在当前线程执行//NSInvocationOperationNSOperation *op = [[NSInvocationOperation alloc]initWithTarget:self selector:@selector(downloadImage:) object:@&quot;Invocation&quot;];[op start];//NSBlockOperation同理 2、进入队列12345NSOperationQueue *q = [[NSOperationQueue alloc]init];[q addOperationWithBlock:^&#123; NSLog(@&quot;%@------%d&quot;,[NSThread currentThread],i);&#125;];[q start]; 3、其他用法 创建依赖 1234567891011121314NSBlockOperation *operation1 = [NSBlockOperation blockOperationWithBlock:^&#123;&#125;];NSBlockOperation *operation2 = [NSBlockOperation blockOperationWithBlock:^&#123;&#125;];NSBlockOperation *operation3 = [NSBlockOperation blockOperationWithBlock:^&#123;&#125;];[operation2 addDependency:operation1]; [operation3 addDependency:operation2]; NSOperationQueue *queue = [[NSOperationQueue alloc] init];[queue addOperations:@[operation3, operation2, operation1] waitUntilFinished:NO]; 属性设置与操作 123456789101112131415//最大线程数量NSInteger maxConcurrentOperationCount//获取队列的任务数NSUInteger operationCount; //取消队列中所有的任务- (void)cancelAllOperations; //阻塞当前线程直到此队列中的所有任务执行完毕- (void)waitUntilAllOperationsAreFinished; // 暂停与继续[queue setSuspended:YES]; [queue setSuspended:NO]; 五、pthreadpthread，是线程的POSIX标准。该标准定义了创建和操纵线程的一整套API。在类Unix操作系统（Unix、Linux、Mac OS X等）中，都使用Pthreads作为操作系统的线程。移植性很强，当然在 iOS 中也是可以的。使用C语言函数，所有线程的管理都需要手动处理，简单看下使用方式。 1234//在线程上执行一个funcName函数方法pthread_t thread;//创建一个线程并自动执行pthread_create(&amp;thread, NULL, funcName, NULL); 六、小结 NSThread使用简单，自己管理生命周期。 GCD有任务和队列，做到了NSOperation不能的：一次性执行、延迟执行、调度组 NSOperation有任务和队列，做到了GCD不能的：最大并发数、暂停和继续、取消、依赖关系","categories":[],"tags":[{"name":"开发","slug":"开发","permalink":"http://zichao.me/tags/开发/"}]},{"title":"锁机制","slug":"锁机制","date":"2015-04-10T14:59:12.000Z","updated":"2019-01-24T12:14:28.324Z","comments":true,"path":"2015/04/10/锁机制/","link":"","permalink":"http://zichao.me/2015/04/10/锁机制/","excerpt":"","text":"","categories":[],"tags":[{"name":"开发","slug":"开发","permalink":"http://zichao.me/tags/开发/"}]},{"title":"自动布局 Masonry","slug":"自动布局 Masonry","date":"2015-03-22T04:34:10.000Z","updated":"2019-01-24T12:14:28.315Z","comments":true,"path":"2015/03/22/自动布局 Masonry/","link":"","permalink":"http://zichao.me/2015/03/22/自动布局 Masonry/","excerpt":"","text":"一、前言苹果出了新机型后需要进行适配，同时也给开发者提供了一套自动布局方案NSLayoutConstraint,不仅可以代码中实现约束，还可以在Xib上实现直接的约束。不过说实在的，因为它那冗长而又丑爆的语法，写一个约束要写那么多行，几个视图下来的代码结构比较难看，因此我是拒绝使用的，好在Masonry对它进行了友好封装，所以我才没有放弃对它更上一层的使用。 二、Masonry1、常规用法比如我们要写一个视图，他距离父视图的上边77pt,距离左边4pt,超出右边10pt,距离下边20pt,使用如下写法比系统自带的语法简洁很多，由于masonry的链式语法使你能够连续调用。 12345678910UIView *view = [[UIView alloc]init]; [self.view addSubview:view]; [view1 mas_makeConstraints:^(MASConstraintMaker *make) &#123; make.top.equalTo(self.view.mas_top).with.offset(77); make.left.equalTo(self.view.mas_left).with.offset(4); make.bottom.equalTo(self.view.mas_bottom).with.offset(-10); make.right.equalTo(self.view.mas_right).with.offset(20); &#125;]; 2、链式语法接下来我们分析下，是如何在OC的语法中实现链式调用的。 123456- (NSArray *)mas_makeConstraints:(void(^)(MASConstraintMaker *))block &#123; self.translatesAutoresizingMaskIntoConstraints = NO; MASConstraintMaker *constraintMaker = [[MASConstraintMaker alloc] initWithView:self]; block(constraintMaker); return [constraintMaker install];&#125; 首先第一个方法可以看到，我们将block实现，但是在方法内部就直接执行了block,其实就相当于调用了一次，进来先关闭了视图的系统默认约束，然后创建了一个MASConstraintMaker并将它传回，这样我们才能在block内部进行约束赋值。用于方法属于view的一个category分类，所以此处就将MASConstraintMaker与View进行了绑定。我看接着看.top方法。 123456789101112131415161718192021222324- (MASConstraint *)top &#123; return [self addConstraintWithLayoutAttribute:NSLayoutAttributeTop];&#125;- (MASConstraint *)addConstraintWithLayoutAttribute:(NSLayoutAttribute)layoutAttribute &#123; return [self constraint:nil addConstraintWithLayoutAttribute:layoutAttribute];&#125;- (MASConstraint *)constraint:(MASConstraint *)constraint addConstraintWithLayoutAttribute:(NSLayoutAttribute)layoutAttribute &#123; MASViewAttribute *viewAttribute = [[MASViewAttribute alloc] initWithView:self.view layoutAttribute:layoutAttribute]; MASViewConstraint *newConstraint = [[MASViewConstraint alloc] initWithFirstViewAttribute:viewAttribute]; if ([constraint isKindOfClass:MASViewConstraint.class]) &#123; //replace with composite constraint NSArray *children = @[constraint, newConstraint]; MASCompositeConstraint *compositeConstraint = [[MASCompositeConstraint alloc] initWithChildren:children]; compositeConstraint.delegate = self; [self constraint:constraint shouldBeReplacedWithConstraint:compositeConstraint]; return compositeConstraint; &#125; if (!constraint) &#123; newConstraint.delegate = self; [self.constraints addObject:newConstraint]; &#125; return newConstraint;&#125; 我们可以看到在赋值到最后的返回值是依旧是一个MASViewConstraint对象，所以top和left、right、bottom是一样的使用。我们再来看equal_To和with以及offset 12345678910111213141516- (MASConstraint * (^)(id))equalTo &#123; return ^id(id attribute) &#123; return self.equalToWithRelation(attribute, NSLayoutRelationEqual); &#125;;&#125;- (MASConstraint *)with &#123; return self;&#125;- (MASConstraint * (^)(CGFloat))offset &#123; return ^id(CGFloat offset)&#123; self.offset = offset; return self; &#125;;&#125; 我们可以看到block的参数是需要赋的值，返回值则是可以进行下一轮赋值的MASConstraint，而这个block作为参数的时候,这个block是由外部来实现,内部调用的，当block作为返回值的时候,这个block是由内部来实现,外部调用的。通过将block作为参数和返回值，从而就实现了链式调用的语法。 3、使用注意 约束视图对象只有在被addSubview之后，才能给视图添加约束 动画的使用是在更新约束之后调用 1[view.superview layoutIfNeeded];//强制绘制 masony由于是对系统api的封装，在视图数量较多和列表复用的使用会有性能问题 masonry和其他frame约束同时使用会有不可控问题发生","categories":[],"tags":[{"name":"开发","slug":"开发","permalink":"http://zichao.me/tags/开发/"}]},{"title":"App的多语言国际化","slug":"App的多语言国际化","date":"2015-02-05T06:34:12.000Z","updated":"2019-01-24T12:14:28.322Z","comments":true,"path":"2015/02/05/App的多语言国际化/","link":"","permalink":"http://zichao.me/2015/02/05/App的多语言国际化/","excerpt":"","text":"开发应用的时候遇到国际化业务，我们都会针对同一个App进行国际化适配，也就是语言本地化，不同地区的人打开应用会显示对应地区的语言和该有的图案。接下来从app名称、应用内字符串和图片三个方面来使用一下。 一、选择多种语言进行配置 新建一个demo工程 选中project-&gt;Info-&gt;Localizations，然后点击”+”，添加需要国际化/本地化的语言，如下图（默认需要勾选Use Base Internationalization） 这里我们添加英语、汉语和简体中文，如下图: 二、应用名称多语言化新建一个strings文件，名为infoPlist.strings，必须为infoPlist的名称，然后选中高亮这个文件，在xcode右边会出现Localization的选择，选中我们要进行国际化的三个语言，你会发现info.strings自动多出三个文件分别对应三个语言，如下图: 我们分别在对应的文件里面，对应的设置应用名称如下： 123CFBundleDisplayName = &quot;AppName&quot;;CFBundleDisplayName = &quot;앱 명칭&quot;;CFBundleDisplayName = &quot;应用名称&quot;; 将模拟器切换成韩语的环境，我们可以看到应用名称已经更改，其他语言也是如此 三、页面内字符串多语言化对于页面内的任意字符而言，与上述较为接近。新建一个strings文件，名为Localizable.strings，必须为Localizable的名称，然后选中高亮这个文件，在xcode右边会出现Localization的选择，选中我们要进行国际化的三个语言，你会发现Localizable.strings自动多出三个文件分别对应三个语言。 Localizable的名字是为了和系统的方法进行关联，我们只需要使用Foundation框架自带的NSLocalizedString(key, comment)这个宏根据Key获取对应的字符串，然后赋值给代码中的字符串。 在对应的文件里面，对应的设置应用名称如下： 123&quot;home&quot; = &quot;home&quot;;&quot;home&quot; = &quot;명칭&quot;;&quot;home&quot; = &quot;首页&quot;; 然后在ViewController里面进行设置，统一设置为home字符串，代码如下： 123456UILabel *a = [[UILabel alloc] init];a.text = NSLocalizedString(@&quot;home&quot;,nil);a.textColor = [UIColor blackColor];[a sizeToFit];[self.view addSubview:a]; 然后我们调整为韩文环境，在模拟器中可以看到显示如下： 另外，如果的strings文件想要换个名字，比如多个人在协作开发的时候，要利用到别人的文件，这个时候，可以使用系统的NSLocalizedStringFromTable方法，调用是一样的，多一个参数用于传递别人的文件名称。 123456UILabel *a = [[UILabel alloc] init];a.text = NSLocalizedStringFromTable(@&quot;home&quot;,&quot;别人的文件名称&quot;,nil);a.textColor = [UIColor blackColor];[a sizeToFit];[self.view addSubview:a]; 四、图片的多语言化 不同语言环境下不同名称 上述我们已经实现字符串的多语言，因为有imageNamed方法的存在，所以我们可以单独新建一份strings文件用于保存图片名称，这样在不同环境下会自动根据图片名称替换即可。 不同语言环境下相同名称 我们拖入一个图片到工程里，然后选中图片，在右边进行localization，选中多个语言环境如下 然后我们选中图片show in finder进入文件夹，会发现自动生成了对应语言的文件夹，里面有相同名称的图片，这个时候我们对应替换文件就行了，名称依旧保持一致","categories":[],"tags":[{"name":"开发","slug":"开发","permalink":"http://zichao.me/tags/开发/"}]},{"title":"事件的传递与响应","slug":"事件的传递与响应","date":"2014-12-23T06:34:12.000Z","updated":"2019-01-24T12:14:28.326Z","comments":true,"path":"2014/12/23/事件的传递与响应/","link":"","permalink":"http://zichao.me/2014/12/23/事件的传递与响应/","excerpt":"","text":"零散的看了一些博客介绍关于事件的响应，大概意思都是父和子的传递和查找，有的把事件传递和响应混在了一块，这里我自己学习拿一个手对屏幕的触摸例子来写一下。 一、应用的层级我们新建一个demo工程，定义一个基础ViewConrtoller，里面包含一个wapperView，wapperview里面有本来blackView和blueView，然后blueView里面有一个UIButton。命名分别为对应的类名，结构如图： 我们重写一下UIbutton的touchBegin事件如下 123456789- (void)touchesBegan:(NSSet *)touches withEvent:(UIEvent *)event&#123; UIResponder * next = self; while (next != nil) &#123; NSLog(NSStringFromClass([next class])); next = [next nextResponder]; &#125; &#125; 通过打印我们得到 1234567UIButtonblueViewwrapperViewViewControllerUIWindowUIApplicationAppDelegate 所以我们基本可以理解到，一个应用的层级结构从外到内为AppDelegate -&gt; UIApplication -&gt; UIWindow -&gt; UIViewController -&gt; UIView,通常我们操作的级别都是VC以及其内部子视图。 二、事件传递1、 当一个屏幕上的触摸时间发生后，系统会自动将该时间加入一个UIApplication管理的事件队列中。 2、UIApplication会将最前的事件取出发送给应用的Keywindow,所以这就决定了事件的传递过程是从上到下，从外到内的。 3、如何从上到下寻找一个合适的View? 我们可以看到UIView类是存在两个方法如下： 123- (nullable UIView *)hitTest:(CGPoint)point withEvent:(nullable UIEvent *)event; // recursively calls -pointInside:withEvent:. point is in the receiver&apos;s coordinate system- (BOOL)pointInside:(CGPoint)point withEvent:(nullable UIEvent *)event; 只要事件传递到当前的的控件就会调用hitTest:withEvent:的方法，返回一个合适的View。事件从父级向下传递，不管子控件是不是最合适的view，系统默认都要先把事件传递给子控件，经过子控件调用自己的hitTest:withEvent:方法验证后才知道有没有更合适的view。如果确定最终父控件是最合适的view，那么该父控件的子控件的hitTest:withEvent:方法也是会被调用的。而pointInside方法会同时返回该点是否在控件身上。 三、事件响应找到合适的View之后，就需要开始响应操作。一般默认做法是控件将事件顺着响应者链条向上传递，将事件交给上一个响应者进行处理，也就是找到合适的视图后就从当前寻找touch方法，如果没有就继续往父视图传递。如果某一个控件重写了touch方法，那么调用就在这个控件这里结束，没有重写的都会继续向上传递。 在demo这个案例里，在UIbutton重写了Touch事件所以在这里调用，如果button里面没写就会在blueView里面寻找，如果没有则继续往上走。直到上面我们获得的层级最后一层AppDelegate，如果都没有作为废弃事件，也就是相当于随便画一下屏幕，没啥反应。 如果我们只想要blueView响应的可以这么写 1234- (UIView *)hitTest:(CGPoint)point withEvent:(UIEvent *)event&#123; return [self superview]; &#125; 如果我们同时想要blueView响应的可以这么写 1234- (void)touchesBegan:(NSSet *)touches withEvent:(UIEvent *)event&#123; [super touchesBegan:touches withEvent:event];&#125;","categories":[],"tags":[{"name":"开发","slug":"开发","permalink":"http://zichao.me/tags/开发/"}]},{"title":"NSObject与UIView","slug":"NSObject与UIView","date":"2014-11-13T06:34:12.000Z","updated":"2019-01-24T12:14:28.317Z","comments":true,"path":"2014/11/13/NSObject与UIView/","link":"","permalink":"http://zichao.me/2014/11/13/NSObject与UIView/","excerpt":"","text":"学习IOS里面常用的类有两个基础的类NSObject与UIView，是很多类的父类或者说根类，无处不在，很有必要来进行认识一下。记录一些关键的方法，在使用上有一定的理解成本。 一、NSObject 判断两个NSObject是否相等 必须覆盖实现NSObject的两个方法，其中isEqual的判断相等是基于对象自己的hash值。 12- (BOOL)isEqual:(id)object;@property (readonly) NSUInteger hash; load方法与initialize方法 load方法是在类被添加到runtime的时候就立即调用；initialize方法是对象收到第一个消息的时候，在这个消息之前被调用，并且是线程安全会阻塞其他线程，所以尽量避免耗时操作。基本可以认为执行顺序时间load在initialize之前，在init之前。 alloc init 与new的区别 基本可以认为是一致的，微小的区别在于alloc分配内存的时候使用了zone，而new不是，其内部默认调用了init方法，所以无法向alloc init那样做到initwithXX方法的扩展。 一个对象消息转发过程 当我们向目标对象发送的消息如[A B]向A对象发送B消息，而无法应答时，一般会报错“unrecognized selector sent to instance..”,而在报错前一般会经过如下几个方法,这样我们就有机会去预先处理一些可能会报错的方法。 1234+(BOOL)resolveInstanceMethod:(SEL)sel;-(id)forwardingTargetForSelector:(SEL)aSelector;-(NSMethodSignature *)methodSignatureForSelector:(SEL)aSelector;-(void)forwardInvocation:(NSInvocation *)anInvocation; 二、UIView 交互事件传递 12345//判断交互事件发生所在的UIView- (nullable UIView *)hitTest:(CGPoint)point withEvent:(nullable UIEvent *)event;//判断交互事件发生的具体位置是否在当前UIView中- (BOOL)pointInside:(CGPoint)point withEvent:(nullable UIEvent *)event; 坐标映射和转换 1234- (CGPoint)convertPoint:(CGPoint)point toView:(nullable UIView *)view;- (CGPoint)convertPoint:(CGPoint)point fromView:(nullable UIView *)view;- (CGRect)convertRect:(CGRect)rect toView:(nullable UIView *)view;- (CGRect)convertRect:(CGRect)rect fromView:(nullable UIView *)view; tintColor 默认tintColor的值为nil，这表示它将会运用父视图层次的颜色来进行着色。如果父视图中没有设置tintColor，那么默认系统就会使用蓝色。因此，可以通过设置root view controller的tintColor来改变系统整体的颜色。 也可以给图像着色，调用imageWithRenderingMode:方法来改变图像渲染模式为UIImageRenderingModeAlwaysTemplate,其他两个选项是UIImageRenderingModeAlwaysOriginal和andUIImageRenderingModeAutomatic。默认是andUIImageRenderingModeAutomatic,在这个情况下，根据上下文来改变图像。 布局与绘制 layoutSubviews对subviews重新布局 layoutSubviews方法调用先于drawRect setNeedsLayout在receiver标上一个需要被重新布局的标记，在系统runloop的下一个周期自动调用layoutSubviews layoutIfNeeded方法如其名，UIKit会判断该receiver是否需要layout.根据Apple官方文档,layoutIfNeeded方法应该是这样的 layoutIfNeeded遍历的不是superview链，应该是subviews链 drawRect是对receiver的重绘，能获得contex setNeedDisplay在receiver标上一个需要被重新绘图的标记，在下一个draw周期自动重绘，iphone device的刷新频率是60hz，也就是1/60秒后重绘 其他包括手势、自动布局、动画等等。","categories":[],"tags":[{"name":"开发","slug":"开发","permalink":"http://zichao.me/tags/开发/"}]},{"title":"我的博客诞生","slug":"我的博客诞生","date":"2014-11-07T11:09:59.000Z","updated":"2019-01-24T12:14:28.317Z","comments":true,"path":"2014/11/07/我的博客诞生/","link":"","permalink":"http://zichao.me/2014/11/07/我的博客诞生/","excerpt":"","text":"早在之前就尝试过自己搭建的个人博客，想积累写写技术知识点和生活上的见闻，希望它作为自己个人的回忆。通常我们会在一些博客网站注册，比如博客园，但界面设计和交互已经跟不上时代。后来出了一些品质比较高的静态博客等，也尝试去使用过，最后还是选择了使用博客组件去搭建，因为总觉得独立的才是自己的，大概程序员的内心都流淌着这样的独白。 博客搭建框架组件很多，从WordPress到FarBox、Jekyll、Octopress等等，他们基本都配合github使用,在网上各路大神的推荐之下，试过几款框架,基本都是在读完安装说明并开始有点小激动的时候，痛苦的安装过程让我放弃了这一方式，一方面是，当时正值自己大学的时候使用的电脑很挫，一个奔腾处理器转圈都要转半天，另一方面就是翻墙网络也不稳定，安装搭建环境的过程总是各种安装失败，算了，然后就GG了。 万万没想到，我还是搭建了自己的博客。没有使用上述的哪种框架,前面的过程学习也大概知道了博客的搭建方式，索性自己就用FW设计了个人博客的UI界面，正好也会前端FE，就手写了博客页面Css和JS，这样博客的结界面就出来了，自己动手丰衣足食。当然写出来的是个静态页面，通过JS去读TXT的字符串来收到添加到页面结构，我自定好规则，写好CSS选择器，整体来说是可以用的，但是对于文章发布始终是不方便的。于是搜索查找了一个python脚本，动态读取文件，只需要专心的写文字就好，随后可上传到github通过域名映射直接展示。这样，我就搭建好了自己的博客1.0，因为界面等从头到尾都是我自己设计后用代码自己一行一行写的，非常符合我自己的审美设计要求，所以很满意，简直高端大气上档次！ 上个截图,看一看画风： 到后来，接触到Hexo,发现功能、模板、发布，都有很好的扩展。Hexo的使用上手也很快，几乎是1小时就搭建完成了博客，这速度让我为之欢呼，所以决定转到Hexo来写作，那么，这里就写个文章来推荐一下吧。 正文使用一、准备工作 你得有自己的域名，买域名的地方比较多，有的坑有的好，我是在godaddy上买的。 买了之后到dnspod上建立自己的域名映射 注册github账号，你将会免费使用到它提供的各种便利而强大的功能，免费的存储空间，下载开源项目等等，重写CNAME，把你的域名映射到github默认的博客地址上 安装Node.js, npm 安装git,生成SSH-KEY管理权限，配置域名到github关联 二、安装Hexo1、hexo程序环境 1npm install -g hexo 2、hexo工程 123hexo init 文件夹名称cd 文件夹名称npm install 3、会得到文件夹目录 1234567├ ── _config.yml├ ── package.json├ ── scaffolds├ ── source├ ── _drafts├ ── _posts└ ── themes _config.yml 文件是网站的配置文件，可以在其中配置网站的大部分参数。 package.json 文件是应用程序的信息。 source 是资源文件夹，是用来存放用户资源的地方。 themes 是主题文件夹，Hexo会根据主题来生成不同的静态页面。 scaffolds是模板件夹，当新建文章的时候，Hexo会根据模板来建立文件。 三、生成第一篇文章1、创建文章 1hexo new 你的文章名称 2、编辑你的文章 上面一步在你对应的文件夹下新建了一个Markdown文件，此时需要你使用对应的语法去编写文档，不知道的可以去学习下，用语言命令号来写Word文档，该有的有，不该有的没有，简直就是最爱 3、编译 12hexo generatehexo server 此时打开你的浏览器，默认地址是（ http://0.0.0.0:4000/ ），你就可以看到你的文章了，就是你刚才编写的文章。 四、发布到github由于前面你做好了准备工作里面包含了使用github当做静态博客地址，你有一个repository事对应自己的name.github.io，前面已经完成了域名的映射，所以这里只需要提交，和你在（ http://0.0.0.0:4000 ）看到的一毛一样了。 12git commit -a -m &quot;***文章&quot;git push 五、关于主题已经用Hexo构建好了站点，但是使用的主题是hexo默认的landscape，这个风格确实不是我喜欢的，画风不是我的style。所以我们来看下如何变更主题。 1、查找喜欢的主题 官网上 查询 github上 搜索 2、下载主题包 解压到前面theme文件夹下 在前面_config.yml文件里面，修改theme：your theme name 3、安装依赖 默认主题已经包含了一些依赖包，但是hexo里每个不同的主题所依赖的包都不尽相同。比如有的主题示使用到Jade构建还需要执行下面的依赖安装 123npm install --save hexo-renderer-jade hexo-generator-feed hexo-generator-sitemap hexo-browsersync hexo-generator-archivenpm install --save hexo-deployer-git hexo-generator-json-content hexo-generator-search 安装完后，依旧走上面的两个编译命令即可。 4、前后主题对比 小结对于Hexo的使用，前后只介绍了关键的几个命令，可以快速搭建，都是基础入门很方便，麻烦的到是前面的准备工作，得一步步挨着来。Hexo的扩展功能强大且自由，直接浏览Hexo的官网可学习。","categories":[],"tags":[{"name":"开发","slug":"开发","permalink":"http://zichao.me/tags/开发/"}]},{"title":"MRC、ARC与属性修饰符","slug":"MRC、ARC与属性修饰符","date":"2014-11-02T08:23:47.000Z","updated":"2019-01-25T09:22:09.030Z","comments":true,"path":"2014/11/02/MRC、ARC与属性修饰符/","link":"","permalink":"http://zichao.me/2014/11/02/MRC、ARC与属性修饰符/","excerpt":"","text":"一、MRC1、内存管理问题传统的内存管理方式都需要业务代码自己处理，比如C和C++,程序员自己控制对象的使用周期，进行生成和释放。随着代码越来越复杂和人员的流动，就会出现无法确定的代码，如果内存对象一直留在那里，没人敢释放，整个程序占用的空间越来越大；胆大的人释放了可能导致crash。尽管遵循一些“谁创建谁释放”、“谁持有谁释放” 的原则，但依旧导致存储空间的浪费：为了保留仅仅一个内存对象，却要将与它关联的一大堆对象保留住，然而其中大部分已经不再使用了。 2、解决方式就是引用计数。所有使用到同一内存对象的地方，使用者只要保证自己 retain 一次，release 一次，不用管别人是否使用。这样就实现了内存管理的分离，这就是MRC。当你使用new、alloc、copy方法创建一个对象时，该对象的保留计数器值为1.当不再使用该对象时，你要负责向该对象发送一条release或autorelease消息。当这个对象本身的引用计数为0时，就会被系统销毁。如果还有别处对它的引用，它就还在继续存在。所有的内存管理是需要程序员手写代码控制的，一般就是持有操作和释放操作。原则：谁持有，谁释放，不持有，不能释放，不再需要时，主动释放。 二、 ARC1、本质ARC只是相对于MRC的一次改进，但它和之前的技术本质上没有区别。它会默认在程序代码合适的位置呗对象增加计数和释放计数对象，其实就是MRC那些繁琐的操作给默认自动化了。当然ARC本身的特性是有区别的。 ARC是编译器时特性，而不是运行时特性。系统在运行时统一管理所有内存对象的释放，会导致增加额外的内存和 CPU 开销，程序员们依然在努力降低内存和CPU消耗。 2、开关切换在target中找到对应的文件可以进行配置。 打开ARC：-fobjc-arc关闭ARC：-fno-objc-arc 三、修饰符1、属性修饰符1.1 存取类型任何属性都可以声明为readwrite或readonly，且默认设置为readwrite。 readwrite：程序自动创建setter/getter方法。readonly：程序之创建getter方法。此外，还可以自定义setter/getter方法。 1.2 原子性atomic是Objc使用的一种线程保护技术，基本上来讲，是防止在写未完成的时候被另外一个线程读取，造成数据错误。而这种机制是耗费系统资源的，所以在iPhone这种小型设备上，如果没有使用多线程间的通讯编程，那么nonatomic是一个非常好的选择。 1.3 生命周期管理 MRC assign: 默认类型。简单赋值，不更改引用计数。unsafe_unretained 修饰“基础数据类型”并不会报错，在实际使用时，与 assign 是完全等价的。 copy: 会拷贝传入的对象（即创建一个引用计数为1的新对象，但是内容与传入对象相同），并把新对象赋值给实例变量。常用与NSString,NSArray,NSDictionary,NSSet等。 retain: 释放旧对象，并使传入的新对象引用计数+1。此属性只能用于NSObject及其子类，而不能用于Core Foundation。 ARC strong: 默认类型，强引用，类似于retain。要求保留传入的对象，并放弃原有对象。 weak: 弱引用，不会使传入的对象引用计数+1。类似于assign，但与assign不同的是，当它们指向的对象被释放后，weak会被自动置为nil，而assign则不会，所以assign会导致“野指针”的出现，weak可以避免悬空指针。使用附有 weak 修饰符的变量会自动注册到 autoreleasepool。如果大量使用 weak 修饰的变量，则会消耗相应的 CPU 资源。良策是只在需要避免循环引用时使用 weak。 unsafe_unretained: 其实质等同于assign。与weak的区别就是指向的对象如果被释放，其不会被置为nil，而导致悬空指针的出现。它是ARC模式下非对象属性的默认值。 总结: strong/retain,两者等价。 assign/unsafe_unretained，两者修饰非对象属性等价。 默认属性： 123MRC：(atomic, readwrite, assign)ARC下对象类型属性：(atomic, readwrite, strong)ARC下非对象类型：(atomic, readwrite, unsafe_unretained) 2、变量关键字修饰符1234_string: 是默认引用类型的关键字。__weak: 声明一个可以自动置nil的弱引用。__unsafe_unretained: 弱引用，但是当指向对象被释放时，不会被置nil。所以会导致野指针的出现。__autoreleasing:用来修饰一个函数的参数，这个参数会在函数返回的时候被自动释放。 对应关系： 123456strong：__strong修饰符retain：__strong修饰符assign：__unsafe_unretained修饰符unsafe_unretained：__unsafe_unretained修饰符weak：__weak修饰符copy：__strong修饰符(但是赋值的是被复制的对象)","categories":[],"tags":[{"name":"开发","slug":"开发","permalink":"http://zichao.me/tags/开发/"}]},{"title":"中秋节","slug":"中秋节","date":"2014-09-08T15:17:59.000Z","updated":"2019-01-25T09:19:41.148Z","comments":true,"path":"2014/09/08/中秋节/","link":"","permalink":"http://zichao.me/2014/09/08/中秋节/","excerpt":"","text":"从7月到北京，忙忙碌碌的工作生活中已经度过两个月，在北京的生活轨迹也逐渐清晰起来，每天都那么的忙当然也很充实，我很喜欢这加互联网公司，也喜欢和一起入职的同事玩，大家都很奈斯。但有的时候，我会喜欢自己静静的呆着，即使什么也不做。昨天前天都出游了就没再打算出去，今天恰好是中秋节，安静的睡下，安静的醒来. 早晨收到了中秋的祝福短信，我都一一的回复了，祝他们也中秋快乐。随后平兄打来电话说下午约一波，说希望和我吃个中饭，我随后起来洗漱。平兄来了一起做了一顿饭，他和我讲起宽宽的故事，故事是这样的—-小红说：长得就像大盘鸡……..故事很短，我俩笑得不行。饭后，平兄在我这睡了一觉，就回学校去了。 看着窗外蓝色的天空，温暖的阳光里，我决定出去走走，拿起相机，穿上背心，带双拖鞋，出门去。北京一直让人笼罩在阴霾里，而夏日的晴天却格外的美丽。心情很好，我走在街上，拍着路过的车辆和行人，走上天桥，仰望着天空，这里开始令我心生喜欢。走在人大的校园里，依旧能感受到学生时代的美好，拍了学校里的一些风景，慢悠悠的又回到家里。我翻阅拍摄的照片，发现自己在处理光线阴暗的条件下存在不足，想当老湿还是得加油学习啊。 躺在沙发上，给爸妈打通电话，也问候正在拍婚纱照的姐姐，家人隔得很远，意识到这点的时候却又是今天的中秋节。翻阅通讯录，尝试去问候许久未见的朋友，却又觉得依旧不过是太阳升起溪水长流，可能这就是我的性格吧。 电话响起，室友说今晚中秋一起做晚饭吃，我说，好。初到北京就和现在的室友相识合租在一起，兴趣相投性格随性。","categories":[],"tags":[{"name":"总结","slug":"总结","permalink":"http://zichao.me/tags/总结/"}]},{"title":"页面重构CSS与JS","slug":"页面重构CSS和JS","date":"2014-08-22T05:45:01.000Z","updated":"2019-01-24T12:14:28.324Z","comments":true,"path":"2014/08/22/页面重构CSS和JS/","link":"","permalink":"http://zichao.me/2014/08/22/页面重构CSS和JS/","excerpt":"","text":"今天给我们培训的是一位前端界自学成才的大牛，去哪儿的高级前端技术总监，杜瑶老师。这名字听起来像个大美女，但实际上是个美男子，哪种美男子呢，形象风格和郭敬明有点像吧，但是比小郭仔肯定是要高的，哈哈。听其他一起入职的同事讲起，杜老师对CSS的理解在web前端界都是排得上名的。他自己讲课的时候说道，不说排前3，排个第五吧。我擦勒，此话一出，房间里一篇哇哇之声，对大佬的膜拜有如涛涛江水连绵不绝。我呢，内心比较复杂，你说国内排第五吧确实很厉害，但就会个CSS排第五感觉不像我要走的路线，可以理解为术业专攻，你在某一方面，哪怕是很微小的某一方面有卓越的成绩，你依旧可以出人头地受人敬仰。 市场上存在各种浏览器拥有不同的内核渲染，导致对CSS的支持有差异，页面无法保证统一并且稳定的显示。杜老师给我们讲解了几个CSS的case，确实，我们在使用上还是浅薄的，CSS选择器说到底是结合起来使用的，各种属性怎么组合成相同的效果，却是最好的效果，杜老师有深刻的认识。后来我仔细翻阅了他的技术博客，出了一本在线的CSS手册，里面对每一种属性需要注意的常见case都有总结和认识，很多生僻的用法绝不是百度搜索出来那么简单，真不是一日之功，却造福了很多前端的学徒。 杜瑶老师还创造了很多有用的轮子，比如移动前端开发框架YO，专注为移动应用提供快速且专业的构建方式；她轻量，易用，可配置，并且具备超强的扩展能力。还有移动端经验速递trip等等。可见在前端的深度投入和有效产出。 此次培训，给我们布置的任务主要是页面重构方面，也就是对HTML\\CSS的认识需要进一步实践。包括对机票页面和对酒店页面的重构。因为未来我们都有可能被分配到各个事业部去支持前端开发，事先熟悉下流程和页面是有好处的。 特价机票页面页面所需要的图片都是充对应的线上页面直接下载下来的，构建机票页面有几个点是关键实现，我们可以挨个对着下药。效果如下： 机票页面链接 机票列表布局 我使用的是无序列表，重点使用float方法，然后根据数据数组进行加载 1234567891011#tj_list li &#123; float: left; display: block; width: 218px; height: 120px; background: #fff; border-radius: 2px; margin: 0 15px 10px 0; white-space: nowrap; position: relative;&#125; 创建数据请求URL 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104function url_chain(d_city,d_week,d_time,d_step,min_p,max_p,page_index,slide)&#123; var address; var url_day= new Date(), tommorow=url_day.getFullYear() + &quot;-&quot; + (url_day.getMonth() + 1) + &quot;-&quot; + (url_day.getDate()+1); var url=&quot;http://lp.flight.qunar.com/api/qdclowprice?&quot;, filter= &#123; dcity: d_city, acity: &apos;&apos;, ddate: tommorow, drange: 7, query: &apos;filter&apos;, sort: &apos;S1&apos;, asc: &apos;true&apos;, page: &quot;&quot;, from: &apos;tejia_d&apos;, ex_track: &apos;&apos;, searchType: &apos;domestic&apos;, per: 40, perScrollPage: 10, dweek: d_week, dtime: d_time, dstep: d_step, minp: &quot;&quot;, maxp: &quot;&quot; &#125;, time_stamp=&quot;&amp;_=&quot;+parseInt(Math.random() * 100000000); //address=url+&quot;dcity=&quot;+d_city+&quot;&amp;&quot;+$.param(filter) + time_stamp; filter.page=page_index; if(slide)&#123; filter.maxp=max_p; filter.minp=min_p; &#125; address=url+$.param(filter) + time_stamp; return address;&#125;function create_url(page_arg,slide_arg)&#123; var step_count=0,url; var dcity,dweek,dtime,dstep,minp,maxp; //获取出发城市 $(&quot;.leave_city .cdt_item li&quot;).each(function()&#123; if($(this).hasClass(&quot;on&quot;))&#123; //dcity=encodeURI($(this).html()); dcity=$(this).html(); if(dcity==&quot;不限&quot;)&#123; dcity=&quot;&quot;; &#125; &#125; &#125;); //获取是否工作日 $(&quot;.time_type .cdt_item li&quot;).each(function()&#123; if($(this).hasClass(&quot;on&quot;))&#123; var text=$(this).html(); if(text==&quot;周末&quot;)&#123; dweek=&quot;W1&quot;; &#125;else if(text==&quot;工作日&quot;)&#123; dweek=&quot;W2&quot;; &#125;else&#123; dweek=&quot;W0&quot;; &#125; &#125; &#125;); //获取起飞的月份 $(&quot;.time_mons .cdt_item li&quot;).each(function()&#123; if($(this).hasClass(&quot;on&quot;))&#123; var text=$(this).html(); if(text==&quot;八月&quot;)&#123; dtime=&quot;T8&quot;; &#125;else&#123; dtime=&quot;T0&quot;; &#125; &#125; &#125;); //获取早中晚起飞时间 $(&quot;.depart_time .cdt_item li input&quot;).each(function()&#123; if($(this).attr(&quot;data-checked&quot;)==&quot;true&quot;)&#123; step_count++; if(step_count==1)&#123; dstep=$(this).attr(&quot;data-key&quot;); &#125;else&#123; dstep=dstep+&quot;,&quot;+$(this).attr(&quot;data-key&quot;); &#125; &#125; &#125;); //获取最大价格最小价格 minp=parseInt($(&quot;#js_min_price&quot;).html()); maxp=parseInt($(&quot;#js_max_price&quot;).html()); url=url_chain(dcity,dweek,dtime,dstep,minp,maxp,page_arg,slide_arg); console.log(url); return url;&#125; 搜索 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970function filter_it()&#123; var url_address,weekday_str; $(&quot;.time_type .cdt_item li,.time_mons .cdt_item li,.leave_city .cdt_item li,.depart_time .cdt_item li input&quot;).click(function()&#123; $(&quot;a[data-pager-link=&apos;first&apos;]&quot;).css(&quot;display&quot;,&quot;none&quot;); $(&quot;a[data-pager-link=&apos;prev&apos;]&quot;).css(&quot;display&quot;,&quot;none&quot;); $(&quot;a[data-pager-link=&apos;next&apos;]&quot;).css(&quot;display&quot;,&quot;inline&quot;); $(&quot;a[data-pager-link=&apos;last&apos;]&quot;).css(&quot;display&quot;,&quot;inline&quot;); $(&quot;#no_data&quot;).css(&quot;display&quot;,&quot;none&quot;); $(&quot;.tj_list_wrapper&quot;).css(&quot;display&quot;,&quot;block&quot;); $(&quot;.pager&quot;).css(&quot;display&quot;,&quot;block&quot;); pages_index=2; ten_times=1; url_address=create_url(1,false); $.ajax(&#123; url: url_address, dataType : &quot;jsonp&quot;, success:function(json)&#123; $(&quot;#tj_list&quot;).html(&quot;&quot;); $(&quot;#js_price_range em&quot;).css(&quot;left&quot;,&quot;100%&quot;); var info=json.data.info; $(&quot;#total_num&quot;).html(info.total); $(&quot;#js_min_price&quot;).html(info.minp); $(&quot;#js_max_price&quot;).html(info.maxp); $(&quot;#js_max_price&quot;).html(info.maxp); $(&quot;.pager .ps em&quot;).html(Math.ceil(info.total/400)); max=info.maxp; min=info.minp; var array=json.data.list; if(json.data.info.total!=0)&#123; $.each(array,function(i,value)&#123; var the_day=new Date(value.dd); if(the_day.getDay()==5)&#123; weekday_str=&quot;&lt;p class=&apos;ptop&apos;&gt;周五&lt;/p&gt;&quot;; &#125;else if(the_day.getDay()==6)&#123; weekday_str=&quot;&lt;p class=&apos;ptop&apos;&gt;周六&lt;/p&gt;&quot;; &#125;else if(the_day.getDay()==0)&#123; weekday_str=&quot;&lt;p class=&apos;ptop&apos;&gt;周七&lt;/p&gt;&quot;; &#125;else&#123; weekday_str=&quot;&quot;; &#125; var day=value.dd.charAt(8)+value.dd.charAt(9); var mon=value.dd.charAt(5)+value.dd.charAt(6); var item=&quot;&lt;li&gt;&lt;a href=&apos;#&apos; data-fromcity=&quot;+value.dc+ &quot;data-tocity=&quot;+value.ac+&quot;data-fromdate=&quot;+value.dd+&quot;&gt;&quot;+weekday_str+&quot;&lt;p class=&apos;p1&apos;&gt;&lt;span class=&apos;prc&apos;&gt;&lt;i class=&apos;rmb&apos;&gt;¥&lt;/i&gt;&quot;+value.pr+&quot;&lt;/span&gt;&amp;nbsp;&lt;span class=&apos;dsc&apos;&gt;&quot;+value.dis+&quot;折&lt;/span&gt;&lt;/p&gt;&lt;p class=&apos;p2&apos;&gt;&lt;span&gt;&quot;+value.dc+&quot;&lt;/span&gt;&amp;nbsp;-&amp;nbsp;&lt;span&gt;&quot;+value.ac+&quot;&lt;/span&gt;&lt;/p&gt;&lt;p class=&apos;p3&apos;&gt;&lt;span class=&apos;hl&apos;&gt;立即抢票&lt;/span&gt;&quot;+mon+&quot;月&quot;+day+&quot;日&amp;nbsp;&quot;+value.dt+&quot;&lt;/p&gt;&lt;/a&gt;&lt;/li&gt;&quot; $(item).appendTo($(&quot;#tj_list&quot;)); inite_pager(); &#125;); &#125;else&#123; $(&quot;#no_data&quot;).css(&quot;display&quot;,&quot;block&quot;); $(&quot;.tj_list_wrapper&quot;).css(&quot;display&quot;,&quot;none&quot;); $(&quot;.pager&quot;).css(&quot;display&quot;,&quot;none&quot;); &#125; &#125;, error:function(json)&#123; alert(&quot;error&quot;); &#125; &#125;) &#125;);&#125; 翻页 与搜索类似，修改page参数 滚动加载 1234567891011121314$(document).scroll( throttle(load_page, 500));function throttle(fn, delay) &#123; var timer = null; return function () &#123; var context = this, args = arguments; clearTimeout(timer); timer = setTimeout(function () &#123; fn.apply(context, args); &#125;, delay); &#125;; &#125; 酒店touch页面酒店页面的实现基本法和上述机票页面基本一致，区别在于是在移动端手机上显示的。主要实现了搜索列表、动画、酒店列表、筛选条件等大模块。效果如下： 机票页面链接","categories":[],"tags":[{"name":"开发","slug":"开发","permalink":"http://zichao.me/tags/开发/"}]},{"title":"实现一个2048游戏","slug":"实现一个2048游戏","date":"2014-08-03T05:45:01.000Z","updated":"2019-01-24T12:14:28.325Z","comments":true,"path":"2014/08/03/实现一个2048游戏/","link":"","permalink":"http://zichao.me/2014/08/03/实现一个2048游戏/","excerpt":"","text":"今日的任务是完成一个网页版的2048游戏，一脸懵逼的毫无心理准备，去哪儿对应届生的培训也是任性啊，几个老大这题目是不是出得太随意了点，还是你们最近迷上了这款游戏。好吧，还是要来弄一弄，可以先看下效果，点击链接跳转。 2048链接 游戏设计游戏的设计基本上遵从CSS定义transition动画，JS操作二位数组的数字和增删class实现属性变化。 基础结构和动画 HTML结构 123456789101112131415161718192021&lt;div id=&quot;wrapper&quot;&gt; &lt;div id=&quot;header&quot;&gt; &lt;h1&gt;2048&lt;/h1&gt; &lt;div id=&quot;base-func&quot;&gt; &lt;a class=&quot;restart&quot;&gt;New Game&lt;/a&gt; &lt;div class=&quot;now-score&quot;&gt;SCORE&lt;br&gt;&lt;span&gt;0&lt;/span&gt;&lt;/div&gt; &lt;div class=&quot;best-score&quot;&gt;BEST&lt;br&gt;&lt;span&gt;0&lt;/span&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div id=&quot;game-box&quot;&gt; &lt;div id=&quot;game-message&quot;&gt; &lt;a class=&quot;retry&quot;&gt;Try again&lt;/a&gt; &lt;a class=&quot;you-win&quot;&gt;You win!&lt;/a&gt; &lt;a class=&quot;you-lose&quot;&gt;You lose!&lt;/a&gt; &lt;/div&gt; &lt;div id=&quot;block-box&quot;&gt; &lt;/div&gt; &lt;/div&gt;&lt;/div&gt; 得分的提示的滑动显示 12345678910@keyframes score-up&#123; 0%&#123; opacity: 1; top: 25px; &#125; 100%&#123; opacity: 0; top: -50px; &#125;&#125; 滑块滑动到位置的动画 1234567891011.tile.tile-position-1-1 &#123; -webkit-transform: translate(0px, 0px); -moz-transform: translate(0px, 0px); transform: translate(0px, 0px); &#125;.tile.tile-position-1-2 &#123; -webkit-transform: translate(0px, 121px); -moz-transform: translate(0px, 121px); transform: translate(0px, 121px); &#125; //等等其他位置 合并两个单元的时候会出现的POP效果 123456789.tile-merged .tile-inner &#123; z-index: 20; -webkit-animation: pop 200ms ease 100ms; -moz-animation: pop 200ms ease 100ms; animation: pop 200ms ease 100ms; -webkit-animation-fill-mode: backwards; -moz-animation-fill-mode: backwards; animation-fill-mode: backwards; &#125; 两个位子上出现2或者4的随机设定1234567891011121314151617181920var random_value = Math.random() &lt; 0.9 ? 2 : 4,value_class=&quot;tile-&quot;+random_value;var choosed_nmb=parseInt(Math.random()*blank_length-1),pos_x=blank_array2[choosed_nmb].charAt(0),pos_y=blank_array2[choosed_nmb].charAt(1),pos_str=pos_x+&quot;&quot;+pos_y; var pst_class=&quot;tile-position-&quot;+pos_x+&quot;-&quot;+pos_y;var block_box=$(&quot;#block-box&quot;);var wrapper=$(&quot;&lt;div&gt;&lt;/div&gt;&quot;);var inner=$(&quot;&lt;div&gt;&lt;/div&gt;&quot;);wrapper.addClass(&quot;tile tile-new&quot;);wrapper.addClass(value_class);wrapper.addClass(pst_class);inner.addClass(&quot;tile-inner&quot;);inner.html(random_value);inner.appendTo(wrapper);wrapper.appendTo(block_box); 滑动合并 朝按键方向移动到最前,前面有相同的出现合并功能,以往右边滑动为例 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586 for (var i = move_array2.length-1; i &gt;=1 ; i--) &#123; for (var j = 0; j &lt; move_array2.length; j++) &#123; //移动3格 if(i&lt;2&amp;&amp;move_array2[i-1][j]&gt;move_array2[i][j]&amp;&amp;move_array2[i-1][j]&gt;move_array2[i+1][j]&amp;&amp;move_array2[i-1][j]&gt;move_array2[i+2][j])&#123; var pos_str=(move_array2[i-1][j]).toString(); //获得已存在方块坐标 var pos_x=parseInt(pos_str.charAt(0)); var pos_y=parseInt(pos_str.charAt(1)); //var temp_class=pos_x+&quot;-&quot;+pos_y; var now_class=&quot;tile-position-&quot;+pos_x+&quot;-&quot;+pos_y; var next_class=&quot;tile-position-&quot;+(pos_x+3)+&quot;-&quot;+pos_y; $(&quot;#block-box .tile&quot;).each(function()&#123; if($(this).hasClass(now_class))&#123; $(this).removeClass(now_class); $(this).addClass(next_class); &#125; &#125;); //赋值保持后续连续 move_array2[i+2][j]=move_array2[i-1][j]+30; move_array2[i-1][j]=0; valid_step=true; &#125; //移动2格 if(i&lt;3&amp;&amp;move_array2[i-1][j]&gt;move_array2[i][j]&amp;&amp;move_array2[i-1][j]&gt;move_array2[i+1][j])&#123; var pos_str=(move_array2[i-1][j]).toString(); //获得已存在方块坐标 var pos_x=parseInt(pos_str.charAt(0)); var pos_y=parseInt(pos_str.charAt(1)); //var temp_class=pos_x+&quot;-&quot;+pos_y; var now_class=&quot;tile-position-&quot;+pos_x+&quot;-&quot;+pos_y; var next_class=&quot;tile-position-&quot;+(pos_x+2)+&quot;-&quot;+pos_y; $(&quot;#block-box .tile&quot;).each(function()&#123; if($(this).hasClass(now_class))&#123; $(this).removeClass(now_class); $(this).addClass(next_class); &#125; &#125;); //赋值保持后续连续 move_array2[i+1][j]=move_array2[i-1][j]+20; move_array2[i-1][j]=0; valid_step=true; &#125; //移动1格 if(move_array2[i-1][j]&gt;move_array2[i][j])&#123; var pos_str=(move_array2[i-1][j]).toString(); $(&quot;#block-box .tile&quot;).each(function()&#123; if($(this).hasClass(now_class))&#123; $(this).removeClass(now_class); $(this).addClass(next_class); &#125; &#125;); //赋值保持后续连续 move_array2[i][j]=move_array2[i-1][j]+10; move_array2[i-1][j]=0; valid_step=true; &#125; &#125;&#125; 合并成功叠加分数12345678910function add_score () &#123; score_total=score_total+score_each; $(&quot;.now-score span&quot;).text(score_total); var now_score=$(&quot;.now-score&quot;); var plus_scr=&quot;+&quot;+score_each; var score_div=$(&quot;&lt;div&gt;&lt;/div&gt;&quot;); score_div.addClass(&quot;score-block&quot;); score_div.html(plus_scr); score_div.appendTo(now_score);&#125; 产生2048胜利或者失败123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081function decide_win()&#123; $(&quot;.useless&quot;).remove(); var won=false; //每次一来都看是否已经存在2048 for (var i=0;i&lt;merge_array2.length; i++) &#123; for (var j = 0; j &lt; merge_array2.length; j++) &#123; if(parseInt(merge_array2[i][j])==2048)&#123; won=true; &#125; &#125; &#125; if(won)&#123; $(&quot;#game-message&quot;).css(&quot;display&quot;,&quot;block&quot;); $(&quot;.you-win&quot;).css(&quot;display&quot;,&quot;inline-block&quot;); $(&quot;.you-lose&quot;).css(&quot;display&quot;,&quot;none&quot;); &#125;else&#123; //判定各个方向抖不存在相同相邻的数字则失败 var not_left=true,not_right=true,not_up=true,not_down=true; tiles_count=$(&quot;#block-box .tile&quot;).size(); console.info(tiles_count); if(tiles_count==16)&#123; for (var i=0;i&lt;merge_array2.length; i++) &#123; for (var j = 0; j &lt; merge_array2.length; j++) &#123; if(i&gt;0)&#123; if((merge_array2[i][j]==merge_array2[i-1][j])&amp;&amp;(merge_array2[i][j]&gt;0)&amp;&amp;(merge_array2[i-1][j]&gt;0))&#123; not_left=false; &#125; &#125; if(i&lt;merge_array2.length-1)&#123; if((merge_array2[i][j]==merge_array2[i+1][j])&amp;&amp;(merge_array2[i][j]&gt;0)&amp;&amp;(merge_array2[i+1][j]&gt;0))&#123; not_right=false; &#125; &#125; if(j&gt;0)&#123; if((merge_array2[i][j]==merge_array2[i][j-1])&amp;&amp;(merge_array2[i][j]&gt;0)&amp;&amp;(merge_array2[i][j-1]&gt;0))&#123; not_up=false; &#125; &#125; if(j&lt;merge_array2.length-1)&#123; if((merge_array2[i][j]==merge_array2[i][j+1])&amp;&amp;(merge_array2[i][j]&gt;0)&amp;&amp;(merge_array2[i][j+1]&gt;0))&#123; not_down=false; &#125; &#125; &#125; &#125; //console.info(not_left+&quot;---&quot;+not_up+&quot;---&quot;+not_right+&quot;---&quot;+not_down); //显示失败的提示 if(not_left&amp;&amp;not_right&amp;&amp;not_up&amp;&amp;not_down)&#123; $(&quot;#game-message&quot;).css(&quot;display&quot;,&quot;block&quot;); $(&quot;.you-win&quot;).css(&quot;display&quot;,&quot;none&quot;); $(&quot;.you-lose&quot;).css(&quot;display&quot;,&quot;inline-block&quot;); if(typeof localStorage.best == &quot;undefined&quot;)&#123; localStorage.best=0; &#125; var bst=parseInt(localStorage.best); if(score_total&gt;bst)&#123; localStorage.best=score_total; &#125; $(&quot;.best-score span&quot;).text(localStorage.best); //alert(3); &#125; &#125; &#125;&#125;","categories":[],"tags":[{"name":"开发","slug":"开发","permalink":"http://zichao.me/tags/开发/"}]},{"title":"插入排序动画","slug":"插入排序动画","date":"2014-07-15T05:45:01.000Z","updated":"2019-01-24T12:14:28.325Z","comments":true,"path":"2014/07/15/插入排序动画/","link":"","permalink":"http://zichao.me/2014/07/15/插入排序动画/","excerpt":"","text":"实现一个插入排序算法，要通过动画展示出来，显示排序数组交换的每一个步骤。常规的插入排序我们都学过，数字交换简单，这里其实就是将数字换成图形，数字交互改为图形的动画位置交换。我们看下效果： 搭建结构动态创建1234567891011121314151617181920212223&lt;!DOCTYPE html&gt; &lt;head&gt; &lt;meta charset=&quot;utf-8&quot;&gt; &lt;title&gt;hotel&lt;/title&gt; &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;css/main.css&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1, maximum-scale=1&quot;&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=&quot;btns&quot;&gt; &lt;a href=&quot;###&quot; class=&quot;inite&quot;&gt;生成随机数&lt;/a&gt; &lt;a href=&quot;###&quot; class=&quot;start&quot;&gt;插入排序&lt;/a&gt; &lt;a href=&quot;###&quot; class=&quot;fast&quot;&gt;快速插入排序&lt;/a&gt; &lt;div id=&quot;mask&quot;&gt;&lt;/div&gt; &lt;/div&gt; &lt;div id=&quot;ctt&quot;&gt; &lt;div class=&quot;move_box&quot;&gt; &lt;div class=&quot;pillar&quot;&gt;&lt;/div&gt; &lt;div class=&quot;num&quot;&gt;0&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;script type=&quot;text/javascript&quot; src=&quot;js/main.js&quot;&gt;&lt;/script&gt; &lt;/body&gt;&lt;/html&gt; 动画使用CSS动画 位置动画 12345678910#btns&#123; position: relative; top: 300px; margin: 20px auto; width: 400px; padding: 20px; -webkit-animation: btns-start 1s ease-in-out; -moz-animation: btns-start 1s ease-in-out; animation: btns-start 1s ease-in-out;&#125; 长度动画 12345678@keyframes btns-up&#123; 0%&#123; top: 300px; &#125; 100%&#123; top: 60px; &#125;&#125; 排序交换 生成随机数 1234567891011121314151617181920212223inite_btn.onclick = function() &#123; btns_box.className=&quot;rise&quot;; ctt_box.className=&quot;drop&quot;; setTimeout(function()&#123; not_fast=true; start_btn.style.zIndex=100; fast_btn.style.zIndex=100; for (var i = 0; i &lt; boxs.length; i++) &#123; var distance=i*40; var rand=Math.floor(Math.random()*99+1); boxs[i].style.left=distance+&quot;px&quot;; ary[i]=rand; box_ary[i]=boxs[i]; boxs[i].querySelector(&quot;.num&quot;).innerText=rand; &#125;; setTimeout(function()&#123; for (var j = 0; j &lt; pillars.length; j++) &#123; pillars[j].style.height=ary[j]*4+&quot;px&quot;; &#125;; &#125;,500); &#125;,500); &#125; 插入排序动画 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152function outer_s() &#123; inite_btn.style.zIndex=10; start_btn.style.zIndex=10; fast_btn.style.zIndex=10; var new_key,temp_num,temp_box; if(j&lt;ary.length)&#123; new_key=ary[j]; temp_num=j-1; inner_s(); function inner_s()&#123; if(temp_num&gt;=0) &#123; if(ary[temp_num]&gt;new_key)&#123; ary[temp_num+1]=ary[temp_num]; ary[temp_num]=new_key; var temp_r_left=parseInt((box_ary[temp_num+1].style.left).replace(/px/,&quot;&quot;)); var temp_l_left=parseInt((box_ary[temp_num].style.left).replace(/px/,&quot;&quot;)); box_ary[temp_num+1].style.left=(temp_r_left-40)+&quot;px&quot;; box_ary[temp_num].style.left=(temp_l_left+40)+&quot;px&quot;; if(not_fast)&#123; box_ary[temp_num+1].querySelector(&quot;.pillar&quot;).style.background=&quot;#C8B29D&quot;; box_ary[temp_num+1].querySelector(&quot;.pillar&quot;).style.boxShadow=&quot;2px 1px 2px #A67664&quot;; box_ary[temp_num].querySelector(&quot;.pillar&quot;).style.background=&quot;#C8B29D&quot;; box_ary[temp_num].querySelector(&quot;.pillar&quot;).style.boxShadow=&quot;2px 1px 2px #A67664&quot;; setTimeout(function()&#123; for (var i = 0; i &lt; box_ary.length; i++) &#123; box_ary[i].querySelector(&quot;.pillar&quot;).style.background=&quot;#7EC9B2&quot;; box_ary[i].querySelector(&quot;.pillar&quot;).style.boxShadow=&quot;2px 1px 2px #37866F&quot;; &#125;; &#125;,1000); &#125; temp_box=box_ary[temp_num+1]; box_ary[temp_num+1]=box_ary[temp_num]; box_ary[temp_num]=temp_box; temp_num--; setTimeout(inner_s,1000); &#125;else&#123; j++; outer_s(); &#125; &#125;else&#123; j++; outer_s(); &#125; &#125; &#125;else&#123; j=1; inite_btn.style.zIndex=100; &#125; &#125;","categories":[],"tags":[{"name":"开发","slug":"开发","permalink":"http://zichao.me/tags/开发/"}]},{"title":"毕业照","slug":"毕业照","date":"2014-06-26T15:17:59.000Z","updated":"2019-01-24T12:14:28.329Z","comments":true,"path":"2014/06/26/毕业照/","link":"","permalink":"http://zichao.me/2014/06/26/毕业照/","excerpt":"","text":"冰岩作坊 彩云之南 校园毕业照","categories":[],"tags":[{"name":"照片","slug":"照片","permalink":"http://zichao.me/tags/照片/"}]},{"title":"我在武汉的四年","slug":"我在武汉的四年","date":"2014-06-22T15:17:59.000Z","updated":"2019-01-24T12:14:28.321Z","comments":true,"path":"2014/06/22/我在武汉的四年/","link":"","permalink":"http://zichao.me/2014/06/22/我在武汉的四年/","excerpt":"","text":"四年过几天就走了，心里开始有些感慨，大家为了各自的梦想，要出发离开这里，四年的青春定格在了回忆。 想起当年入学的时候，既对新校园满怀期待和热情，也对自己高考不满意懊恼过，来到了一所自己从来没考虑过的学校，怀着复杂的心情开始了自己的大学生活。为人热情的我很快和班上的人打得一片火热，希望在大学里能做出的点事情，积极当了军训副排长，积极当了班级团支部书记，还组织了校园活动，取得了很好的校园成绩，获得了奖状奖章。不知不觉的就开心的度过了新生的一年，同时也结识了一群小伙伴，就是后来我们一起去的云南。必是玩的太嗨了，第一年个人专业课学习成绩中等。 大二的时候，我听学长的建议开始自主学习编程，并争取加入了学校的创新团队冰岩作坊，做web开发相关的。当时团队氛围比较和洽，一同进去的几位同学又都比较厌倦通信的课程，大家几个人一伙同啊，就放飞自己我了，在团队的工作玩和学习，做事情和效力，专业的上课就基本靠突击考试了。想想那时候意气风发，一方面web编程进步很大，可以算是同学里面比较突出的了，知道自己未来毕业完全有机会找一份很好的工作了，所以非常满意自己选择加入团队。但一方面专业学习大家都没在意，学得不扎实，专业课成绩惨淡。 这样的状态一直持续到大三下学期，在团队做了很多事情，把自己从一个软件编程小白变成了同学里面还算可以的小司机，为学校开发了多个网站，得到了老师的肯定，并有机会出去实习。到了这个时候，我开始想起了自己心中的遗憾，思考了很久，还是决定惜别团队，去完成了我从前的愿望，告别了指导老师。我加入了考研大军，设定了一个遥远的目标清华电子系，我相信自己努力就可以达到，考研不仅是一个艰苦的学习过程，更是一个对自己的认识和确认过程。从那之后，我开始坚持每日学习，并与一起准备考试的小伙伴奋战考试。考研复习期间，身边的同学找工作出国保研各自进行着，我不为所动，专心准备着。 3月份的时候出了成绩，考试数学的时候紧张了，想起了高考的时候，这半年压力也是确实大，选了一个最难考的学校，哈哈，还是没能如愿。不过我却不像之前高考那时候难过了，我认识到了自己的不足所在，坦然接受了这个结果，不是我不够聪明，是我内心不够平稳，心态不够自信。回想起来，高考的时候也是一样，虽然考的好的时候的确可以冲清北，但差的时候不就是华科水平吗，上课不专心听讲，天天打瞌睡，平常吊儿郎当嘻嘻哈哈，自然没能给我积攒足够的信心。类比这次考研也是一样，我前三年都没有太多用心在专业学习上，成绩普通，却定了一个一般人都不敢尝试的学校目标，虽然平常测验基本能够达到分数，但是校验会存在不准确，自己也还是那个问题，我内心的信心积累的不够，考试的时候容易紧张，就凉了。好吧，我表示并不难过，愉快的开始找起了工作。 错过了秋季招聘，各大互联网公司的校招都结束了，只有个别公司还有春季招聘的补招，哎呀到了关键时候了。当初选择来考研，大三的时候BAT实习一个都没去，冰岩的老大问我说要不要去微信实习，这个机会不错，我一点都没犹豫就说不去了，哈哈，还是年轻。一起和其他同学去面试了第一家公司，人生第一次参加校招面试，几轮面试下来，就我一个人过，这给了我不少信心，这样录取我的第一家公司叫做TPLink。回头一想，团队的同学都去的腾讯百度，你让我去这里，不太合适吧，于是拒绝了offer。然而啊春，招的机会实在是太少了，没啥大公司来了，根本没机会啊，天要亡我吗…等啊等，等来了一个搜狐，我跑去参加面试搜狐的研发职位，一看，产品岗位的面试官不就是我团队的学长吗，我擦嘞，好好表现，好好表现就问题不大了，哈哈，春季的补招相对会流程简化一些，经过两轮面试，看的出面试官对我比较满意，回头和学长聊了聊，咨询了面试情况和搜狐的工作待遇，比较放松的回去了。然后又是等啊等，等待到了最后一个上车机会，就是去哪儿网的春季补招。公司来面试的那一天是一个web前端开发的大佬面试我，我和盘托出大二大三写过的网站，回答了面试官的问题，一面都给我定了offer，很明显校招里面算可以的了，何况还是春季补招。哈哈，这样我就放了心，想起大二的时候曾经用过他们的手机端去哪儿旅行，体验很棒，买票很方便啊，改变了人们的旅行交通方式，当时想要是能去这家公司上班该多好啊，现在看来，一切有为法，都是缘分。所以我校招就拿了三个offer，一个TPLink在深圳，一个搜狐和一个去哪儿在北京。我欣然的选择了我喜欢的去哪儿，因为是个向往旅行的人。 到这里，我的四年就这样简略的写完了，当然还有那些的友情故事没写，谈妹子那段也跳过了，哈哈。我在大学里不断的尝试新东西，不停的突破自己，不断的寻求更好且更适合自己的道路，这就是我的大学经历。和同学说起我的心里想法，他们听到的都是，”我对大学的经历路程十分满意，不曾犹豫和后悔过一个选择”。 致谢：感谢彩云之南多位同学一路陪伴成长 感谢冰岩作坊团队老师和同学给予我见识和机会 感谢我们巴蜀中学武汉联盟成员 感谢321寝室同学在生活中的包容 感谢通信1003班以及专业同学共同学习 感谢毕业设计的老师和同学照料 感谢我在学校认识的每一位有缘人","categories":[],"tags":[{"name":"总结","slug":"总结","permalink":"http://zichao.me/tags/总结/"}]}]}